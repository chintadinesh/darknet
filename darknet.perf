Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 85.84      0.97     0.97                             gemm_nn_fast(int, int, int, float, float*, int, float*, int, float*, int)
  2.65      1.00     0.03       13     2.31     2.31  float_to_bit
  2.65      1.03     0.03        9     3.33     3.33  im2col_cpu_ext
  1.77      1.05     0.02  8845488     0.00     0.00  one_hot_encode
  1.77      1.07     0.02       24     0.83     1.67  make_convolutional_layer
  1.77      1.09     0.02        2    10.00    19.17  fuse_conv_batchnorm
  0.88      1.10     0.01    12982     0.00     0.00  box_giou
  0.88      1.11     0.01        1    10.00    10.00  load_image_stb(char*, int)
  0.88      1.12     0.01                             get_embedding
  0.88      1.13     0.01                             repack_input
  0.00      1.13     0.00    72838     0.00     0.00  stbi__grow_buffer_unsafe(stbi__jpeg*)
  0.00      1.13     0.00    25964     0.00     0.00  box_iou
  0.00      1.13     0.00    13824     0.00     0.00  stbi__idct_simd(unsigned char*, int, short*)
  0.00      1.13     0.00    13824     0.00     0.00  stbi__jpeg_decode_block(stbi__jpeg*, short*, stbi__huffman*, stbi__huffman*, short*, int, unsigned short*)
  0.00      1.13     0.00     6491     0.00     0.00  box_diou
  0.00      1.13     0.00     3694     0.00     0.00  gemm_nn(int, int, int, float, float*, int, float*, int, float*, int)
  0.00      1.13     0.00     1734     0.00     0.00  stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int)
  0.00      1.13     0.00     1227     0.00     0.00  stbi__build_huffman(stbi__huffman*, int*)
  0.00      1.13     0.00      803     0.00     0.00  get_metadata
  0.00      1.13     0.00      708     0.00     0.00  average(int, char**)
  0.00      1.13     0.00      696     0.00     0.00  trim(char*)
  0.00      1.13     0.00      576     0.00     0.00  stbi__YCbCr_to_RGB_simd(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int)
  0.00      1.13     0.00      329     0.00     0.00  replace_image_to_label
  0.00      1.13     0.00      275     0.00     0.00  read_map
  0.00      1.13     0.00      236     0.00     0.00  free_list_contents_kvp
  0.00      1.13     0.00      190     0.00     0.00  free_ptrs
  0.00      1.13     0.00      130     0.00     0.00  option_unused
  0.00      1.13     0.00      130     0.00     0.00  read_data_cfg
  0.00      1.13     0.00      109     0.00     0.00  delta_yolo_box(box, float*, float*, int, int, int, int, int, int, int, int, float*, float, int, float, IOU_LOSS, int, float, int*, int)
  0.00      1.13     0.00       67     0.00     0.00  strip
  0.00      1.13     0.00       59     0.00     0.00  option_find_int_quiet
  0.00      1.13     0.00       29     0.00     0.00  free_list_val
  0.00      1.13     0.00       26     0.00     0.00  get_workspace_size32(layer)
  0.00      1.13     0.00       26     0.00     0.00  free_convolutional_batchnorm
  0.00      1.13     0.00       26     0.00     0.00  get_convolutional_delta
  0.00      1.13     0.00       25     0.00     0.00  parse_local(list*, size_params)
  0.00      1.13     0.00       24     0.00     0.00  bbox_comparator(void const*, void const*)
  0.00      1.13     0.00       24     0.00     0.00  string_to_layer_type(char*)
  0.00      1.13     0.00       24     0.00     0.00  free_layer_custom
  0.00      1.13     0.00       24     0.00     0.00  option_find_int
  0.00      1.13     0.00       16     0.00     0.00  stbi__readval(stbi__context*, int, unsigned char*)
  0.00      1.13     0.00       14     0.00     0.00  deinter_cpu(int, float*, int, float*, int, float*)
  0.00      1.13     0.00       14     0.00     0.00  is_avx
  0.00      1.13     0.00       13     0.00     1.67  parse_convolutional(list*, size_params)
  0.00      1.13     0.00       13     0.00     0.00  load_convolutional_weights(layer, _IO_FILE*)
  0.00      1.13     0.00       13     0.00     0.00  add_bias
  0.00      1.13     0.00       13     0.00     0.00  find_arg
  0.00      1.13     0.00       13     0.00     4.62  forward_convolutional_layer
  0.00      1.13     0.00       13     0.00     0.00  gemm_cpu
  0.00      1.13     0.00       13     0.00     0.00  get_activation
  0.00      1.13     0.00       13     0.00     0.00  is_fma_avx2
  0.00      1.13     0.00       12     0.00     0.00  activate_array
  0.00      1.13     0.00       12     0.00     0.00  find_float_arg
  0.00      1.13     0.00       12     0.00     0.00  top_k
  0.00      1.13     0.00       11     0.00     0.00  stbi__process_marker(stbi__jpeg*, int)
  0.00      1.13     0.00       10     0.00     0.00  find_replace_extension(char*, char*, char*, char*)
  0.00      1.13     0.00       10     0.00     0.00  stbi__resample_row_h_2(unsigned char*, unsigned char*, unsigned char*, int, int)
  0.00      1.13     0.00       10     0.00     0.00  find_char_arg
  0.00      1.13     0.00        6     0.00     0.00  parse_maxpool(list*, size_params)
  0.00      1.13     0.00        6     0.00     0.00  pm(int, int, float*)
  0.00      1.13     0.00        6     0.00     0.00  fill_cpu
  0.00      1.13     0.00        6     0.00     0.00  forward_maxpool_layer
  0.00      1.13     0.00        6     0.00     0.00  forward_maxpool_layer_avx
  0.00      1.13     0.00        6     0.00     0.00  make_maxpool_layer
  0.00      1.13     0.00        4     0.00     0.00  get_classes_multipliers(char*, int, float)
  0.00      1.13     0.00        3     0.00     0.00  parse_route(list*, size_params)
  0.00      1.13     0.00        3     0.00     0.00  border_image(image, int)
  0.00      1.13     0.00        3     0.00     0.00  mult_add_into_cpu(int, float*, float*, float*)
  0.00      1.13     0.00        3     0.00     0.00  get_label(image**, char*, int)
  0.00      1.13     0.00        3     0.00     0.00  int_to_alphanum
  0.00      1.13     0.00        3     0.00     0.00  list_to_array
  0.00      1.13     0.00        2     0.00     0.00  parse_yolo(list*, size_params)
  0.00      1.13     0.00        2     0.00     0.00  avg_flipped_yolo(layer)
  0.00      1.13     0.00        2     0.00     0.00  get_sequential_paths(char**, int, int, int, int, int)
  0.00      1.13     0.00        2     0.00     0.00  _init
  0.00      1.13     0.00        2     0.00     0.00  backward_network
  0.00      1.13     0.00        2     0.00     0.00  backward_route_layer
  0.00      1.13     0.00        2     0.00     0.00  correct_yolo_boxes
  0.00      1.13     0.00        2     0.00     0.00  detection_to_json
  0.00      1.13     0.00        2     0.00     0.00  forward_yolo_layer
  0.00      1.13     0.00        2     0.00     0.00  get_yolo_detections
  0.00      1.13     0.00        2     0.00     0.00  make_route_layer
  0.00      1.13     0.00        2     0.00     0.00  make_upsample_layer
  0.00      1.13     0.00        2     0.00     0.00  make_yolo_layer
  0.00      1.13     0.00        1     0.00     0.00  num_detections(network*, float)
  0.00      1.13     0.00        1     0.00     0.00  load_data_region(int, char**, int, int, int, int, int, float, float, float, float)
  0.00      1.13     0.00        1     0.00     0.00  parse_net_options(list*, network*)
  0.00      1.13     0.00        1     0.00     0.00  set_train_only_bn(network)
  0.00      1.13     0.00        1     0.00     0.00  fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int)
  0.00      1.13     0.00        1     0.00     0.00  num_detections_batch(network*, float, int)
  0.00      1.13     0.00        1     0.00     0.00  read_cfg(char*)
  0.00      1.13     0.00        1     0.00     0.00  stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int)
  0.00      1.13     0.00        1     0.00     0.00  stbi__loadf_main(stbi__context*, int*, int*, int*, int)
  0.00      1.13     0.00        1     0.00     0.00  stbi__decode_jpeg_image(stbi__jpeg*)
  0.00      1.13     0.00        1     0.00     0.00  stbi__decode_jpeg_header(stbi__jpeg*, int)
  0.00      1.13     0.00        1     0.00     0.00  stbi__load_and_postprocess_8bit(stbi__context*, int*, int*, int*, int)
  0.00      1.13     0.00        1     0.00    10.00  composite_3d
  0.00      1.13     0.00        1     0.00     0.00  constrain_cpu
  0.00      1.13     0.00        1     0.00     0.00  copy_weights_net
  0.00      1.13     0.00        1     0.00     0.00  do_nms_sort
  0.00      1.13     0.00        1     0.00     0.00  fgetl
  0.00      1.13     0.00        1     0.00     0.00  forward_network
  0.00      1.13     0.00        1     0.00     0.00  free_load_threads
  0.00      1.13     0.00        1     0.00     0.00  get_current_rate
  0.00      1.13     0.00        1     0.00     0.00  get_network_image_layer
  0.00      1.13     0.00        1     0.00     0.00  load_network
  0.00      1.13     0.00        1     0.00     0.00  load_weights_upto
  0.00      1.13     0.00        1     0.00     0.00  make_network
  0.00      1.13     0.00        1     0.00     0.00  make_network_boxes
  0.00      1.13     0.00        1     0.00     0.00  option_find
  0.00      1.13     0.00        1     0.00     0.00  parse_csv_line
  0.00      1.13     0.00        1     0.00     0.00  parse_fields
  0.00      1.13     0.00        1     0.00    21.67  parse_network_cfg_custom
  0.00      1.13     0.00        1     0.00     0.00  read_boxes
  0.00      1.13     0.00        1     0.00     0.00  resize_image
  0.00      1.13     0.00        1     0.00     0.00  stbi_load
  0.00      1.13     0.00        1     0.00     0.00  update_convolutional_layer
  0.00      1.13     0.00        1     0.00    22.06  validate_detector_map

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.88% of 1.13 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     85.8    0.97    0.00                 gemm_nn_fast(int, int, int, float, float*, int, float*, int, float*, int) [1]
-----------------------------------------------
[2]      5.3    0.02    0.04       1+26      <cycle 1 as a whole> [2]
                0.02    0.02       2             fuse_conv_batchnorm <cycle 1> [7]
                0.00    0.02       1             validate_detector_map <cycle 1> [10]
                0.00    0.00      24             free_layer_custom <cycle 1> [35]
-----------------------------------------------
                                                 <spontaneous>
[3]      5.3    0.00    0.06                 train_detector [3]
                0.02    0.04       1/1           fuse_conv_batchnorm <cycle 1> [7]
-----------------------------------------------
                0.00    0.06      13/13          update_network [5]
[4]      5.3    0.00    0.06      13         forward_convolutional_layer [4]
                0.03    0.00      13/13          float_to_bit [8]
                0.03    0.00       9/9           im2col_cpu_ext [9]
                0.00    0.00      13/26          get_convolutional_delta [34]
                0.00    0.00      13/26          get_workspace_size32(layer) [658]
                0.00    0.00      13/14          deinter_cpu(int, float*, int, float*, int, float*) [663]
                0.00    0.00      13/13          gemm_cpu [40]
                0.00    0.00      13/13          find_arg [39]
                0.00    0.00      13/13          add_bias [38]
-----------------------------------------------
                                                 <spontaneous>
[5]      5.3    0.00    0.06                 update_network [5]
                0.00    0.06      13/13          forward_convolutional_layer [4]
                0.00    0.00       6/6           forward_maxpool_layer [48]
                0.00    0.00       2/2           forward_yolo_layer [57]
                0.00    0.00       2/2           backward_route_layer [54]
                0.00    0.00       1/1           constrain_cpu [62]
                0.00    0.00       1/2           make_upsample_layer [60]
-----------------------------------------------
                0.01    0.01      11/24          fuse_conv_batchnorm <cycle 1> [7]
                0.01    0.01      13/24          parse_convolutional(list*, size_params) [12]
[6]      3.5    0.02    0.02      24         make_convolutional_layer [6]
                0.02    0.00 8845488/8845488     one_hot_encode [13]
                0.00    0.00      72/329         replace_image_to_label [24]
                0.00    0.00      26/26          free_convolutional_batchnorm [33]
                0.00    0.00      13/26          get_convolutional_delta [34]
                0.00    0.00      13/26          get_workspace_size32(layer) [658]
-----------------------------------------------
                                   1             validate_detector_map <cycle 1> [10]
                0.02    0.04       1/1           train_detector [3]
[7]      3.4    0.02    0.02       2         fuse_conv_batchnorm <cycle 1> [7]
                0.01    0.01      11/24          make_convolutional_layer [6]
                0.00    0.00      24/24          bbox_comparator(void const*, void const*) [660]
                                  24             free_layer_custom <cycle 1> [35]
-----------------------------------------------
                0.03    0.00      13/13          forward_convolutional_layer [4]
[8]      2.7    0.03    0.00      13         float_to_bit [8]
-----------------------------------------------
                0.03    0.00       9/9           forward_convolutional_layer [4]
[9]      2.7    0.03    0.00       9         im2col_cpu_ext [9]
-----------------------------------------------
                                   1             free_layer_custom <cycle 1> [35]
[10]     2.0    0.00    0.02       1         validate_detector_map <cycle 1> [10]
                0.00    0.02       1/1           parse_network_cfg_custom [11]
                0.00    0.00     252/6491        box_diou [15]
                0.00    0.00      94/329         replace_image_to_label [24]
                0.00    0.00      63/67          strip [30]
                0.00    0.00       3/803         get_metadata [23]
                0.00    0.00       3/1734        stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [652]
                0.00    0.00       2/2           detection_to_json [56]
                0.00    0.00       2/3           get_label(image**, char*, int) [674]
                0.00    0.00       1/1           option_find [74]
                0.00    0.00       1/1           load_data_region(int, char**, int, int, int, int, int, float, float, float, float) [680]
                0.00    0.00       1/2           get_sequential_paths(char**, int, int, int, int, int) [677]
                0.00    0.00       1/1           free_load_threads [67]
                0.00    0.00       1/1           parse_fields [76]
                0.00    0.00       1/2           backward_network [53]
                0.00    0.00       1/1           num_detections(network*, float) [679]
                0.00    0.00       1/1           do_nms_sort [64]
                0.00    0.00       1/1           read_boxes [77]
                0.00    0.00       1/1           fgetl [65]
                0.00    0.00       1/1           load_weights_upto [71]
                0.00    0.00       1/1           load_network [70]
                0.00    0.00       1/1           copy_weights_net [63]
                                   1             fuse_conv_batchnorm <cycle 1> [7]
-----------------------------------------------
                                   1             parse_network_cfg_custom [11]
                0.00    0.02       1/1           validate_detector_map <cycle 1> [10]
[11]     1.9    0.00    0.02       1+1       parse_network_cfg_custom [11]
                0.00    0.02      13/13          parse_convolutional(list*, size_params) [12]
                0.00    0.00     217/708         average(int, char**) [654]
                0.00    0.00     183/275         read_map [25]
                0.00    0.00     182/190         free_ptrs [27]
                0.00    0.00     124/130         option_unused [28]
                0.00    0.00      26/29          free_list_val [32]
                0.00    0.00      25/696         trim(char*) [655]
                0.00    0.00      25/236         free_list_contents_kvp [26]
                0.00    0.00      25/25          parse_local(list*, size_params) [659]
                0.00    0.00      24/24          string_to_layer_type(char*) [661]
                0.00    0.00      24/24          option_find_int [36]
                0.00    0.00       6/6           parse_maxpool(list*, size_params) [668]
                0.00    0.00       3/3           parse_route(list*, size_params) [671]
                0.00    0.00       2/2           parse_yolo(list*, size_params) [675]
                0.00    0.00       1/1           make_network [72]
                0.00    0.00       1/1           set_train_only_bn(network) [682]
                0.00    0.00       1/1           parse_net_options(list*, network*) [681]
                0.00    0.00       1/1734        stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [652]
                0.00    0.00       1/1           read_cfg(char*) [685]
                0.00    0.00       1/1           get_network_image_layer [69]
                0.00    0.00       1/2           backward_network [53]
                0.00    0.00       1/329         replace_image_to_label [24]
                                   1             parse_network_cfg_custom [11]
-----------------------------------------------
                0.00    0.02      13/13          parse_network_cfg_custom [11]
[12]     1.9    0.00    0.02      13         parse_convolutional(list*, size_params) [12]
                0.01    0.01      13/24          make_convolutional_layer [6]
                0.00    0.00     234/708         average(int, char**) [654]
                0.00    0.00      39/59          option_find_int_quiet [31]
                0.00    0.00      13/803         get_metadata [23]
                0.00    0.00      13/13          get_activation [41]
-----------------------------------------------
                0.02    0.00 8845488/8845488     make_convolutional_layer [6]
[13]     1.8    0.02    0.00 8845488         one_hot_encode [13]
-----------------------------------------------
                                6491             box_giou [14]
                0.01    0.00   12982/12982       box_diou [15]
[14]     0.9    0.01    0.00   12982+6491    box_giou [14]
                0.00    0.00   25964/25964       box_iou [22]
                                6491             box_giou [14]
-----------------------------------------------
                0.00    0.00     252/6491        validate_detector_map <cycle 1> [10]
                0.00    0.01    6239/6491        do_nms [21]
[15]     0.9    0.00    0.01    6491         box_diou [15]
                0.01    0.00   12982/12982       box_giou [14]
-----------------------------------------------
                0.00    0.01       1/1           run_thread_loop(void*) [20]
[16]     0.9    0.00    0.01       1         composite_3d [16]
                0.01    0.00       1/1           load_image_stb(char*, int) [19]
-----------------------------------------------
                                                 <spontaneous>
[17]     0.9    0.01    0.00                 get_embedding [17]
-----------------------------------------------
                                                 <spontaneous>
[18]     0.9    0.01    0.00                 repack_input [18]
-----------------------------------------------
                0.01    0.00       1/1           composite_3d [16]
[19]     0.9    0.01    0.00       1         load_image_stb(char*, int) [19]
                0.00    0.00       1/1           stbi__loadf_main(stbi__context*, int*, int*, int*, int) [687]
                0.00    0.00       1/3           border_image(image, int) [672]
-----------------------------------------------
                                                 <spontaneous>
[20]     0.9    0.00    0.01                 run_thread_loop(void*) [20]
                0.00    0.01       1/1           composite_3d [16]
                0.00    0.00       1/1           resize_image [78]
-----------------------------------------------
                                                 <spontaneous>
[21]     0.9    0.00    0.01                 do_nms [21]
                0.00    0.01    6239/6491        box_diou [15]
-----------------------------------------------
                0.00    0.00   25964/25964       box_giou [14]
[22]     0.0    0.00    0.00   25964         box_iou [22]
-----------------------------------------------
                                  31             get_metadata [23]
                0.00    0.00       2/803         parse_route(list*, size_params) [671]
                0.00    0.00       3/803         validate_detector_map <cycle 1> [10]
                0.00    0.00       4/803         parse_net_options(list*, network*) [681]
                0.00    0.00      13/803         parse_convolutional(list*, size_params) [12]
                0.00    0.00      14/803         parse_yolo(list*, size_params) [675]
                0.00    0.00      59/803         option_find_int_quiet [31]
                0.00    0.00     708/803         average(int, char**) [654]
[23]     0.0    0.00    0.00     803+31      get_metadata [23]
                                  31             get_metadata [23]
-----------------------------------------------
                                   2             replace_image_to_label [24]
                0.00    0.00       1/329         read_boxes [77]
                0.00    0.00       1/329         free_load_threads [67]
                0.00    0.00       1/329         make_network [72]
                0.00    0.00       1/329         parse_network_cfg_custom [11]
                0.00    0.00       2/329         stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [652]
                0.00    0.00       2/329         get_classes_multipliers(char*, int, float) [670]
                0.00    0.00       2/329         resize_upsample_layer [497]
                0.00    0.00       3/329         border_image(image, int) [672]
                0.00    0.00       3/329         parse_net_options(list*, network*) [681]
                0.00    0.00       4/329         parse_route(list*, size_params) [671]
                0.00    0.00       4/329         resize_route_layer [493]
                0.00    0.00       6/329         make_maxpool_layer [50]
                0.00    0.00       9/329         forward_network [66]
                0.00    0.00      14/329         make_yolo_layer [61]
                0.00    0.00      72/329         make_convolutional_layer [6]
                0.00    0.00      94/329         validate_detector_map <cycle 1> [10]
                0.00    0.00     110/329         make_network_boxes [73]
[24]     0.0    0.00    0.00     329+2       replace_image_to_label [24]
                0.00    0.00      10/10          find_replace_extension(char*, char*, char*, char*) [666]
                0.00    0.00       1/12          top_k [45]
                                   2             replace_image_to_label [24]
-----------------------------------------------
                0.00    0.00       2/275         option_find_str_quiet [432]
                0.00    0.00       7/275         option_find_str [431]
                0.00    0.00      83/275         get_sequential_paths(char**, int, int, int, int, int) [677]
                0.00    0.00     183/275         parse_network_cfg_custom [11]
[25]     0.0    0.00    0.00     275         read_map [25]
                0.00    0.00     275/696         trim(char*) [655]
-----------------------------------------------
                0.00    0.00      25/236         parse_network_cfg_custom [11]
                0.00    0.00      81/236         get_sequential_paths(char**, int, int, int, int, int) [677]
                0.00    0.00     130/236         option_unused [28]
[26]     0.0    0.00    0.00     236         free_list_contents_kvp [26]
                0.00    0.00     236/696         trim(char*) [655]
-----------------------------------------------
                0.00    0.00       8/190         option_find_str [431]
                0.00    0.00     182/190         parse_network_cfg_custom [11]
[27]     0.0    0.00    0.00     190         free_ptrs [27]
-----------------------------------------------
                0.00    0.00       6/130         option_find_str [431]
                0.00    0.00     124/130         parse_network_cfg_custom [11]
[28]     0.0    0.00    0.00     130         option_unused [28]
                0.00    0.00     130/236         free_list_contents_kvp [26]
                0.00    0.00     130/130         read_data_cfg [29]
-----------------------------------------------
                0.00    0.00     130/130         option_unused [28]
[29]     0.0    0.00    0.00     130         read_data_cfg [29]
                0.00    0.00     130/696         trim(char*) [655]
-----------------------------------------------
                0.00    0.00       4/67          read_boxes [77]
                0.00    0.00      63/67          validate_detector_map <cycle 1> [10]
[30]     0.0    0.00    0.00      67         strip [30]
-----------------------------------------------
                0.00    0.00       1/59          parse_route(list*, size_params) [671]
                0.00    0.00       3/59          parse_net_options(list*, network*) [681]
                0.00    0.00       4/59          parse_yolo(list*, size_params) [675]
                0.00    0.00      12/59          parse_avgpool(list*, size_params) [766]
                0.00    0.00      39/59          parse_convolutional(list*, size_params) [12]
[31]     0.0    0.00    0.00      59         option_find_int_quiet [31]
                0.00    0.00      59/803         get_metadata [23]
-----------------------------------------------
                0.00    0.00       1/29          option_find [74]
                0.00    0.00       2/29          get_sequential_paths(char**, int, int, int, int, int) [677]
                0.00    0.00      26/29          parse_network_cfg_custom [11]
[32]     0.0    0.00    0.00      29         free_list_val [32]
-----------------------------------------------
                                  13             free_convolutional_batchnorm [33]
                0.00    0.00      26/26          make_convolutional_layer [6]
[33]     0.0    0.00    0.00      26+13      free_convolutional_batchnorm [33]
                                  13             free_convolutional_batchnorm [33]
-----------------------------------------------
                0.00    0.00      13/26          make_convolutional_layer [6]
                0.00    0.00      13/26          forward_convolutional_layer [4]
[34]     0.0    0.00    0.00      26         get_convolutional_delta [34]
-----------------------------------------------
                                  24             fuse_conv_batchnorm <cycle 1> [7]
[35]     0.0    0.00    0.00      24         free_layer_custom <cycle 1> [35]
                                   1             validate_detector_map <cycle 1> [10]
-----------------------------------------------
                0.00    0.00      24/24          parse_network_cfg_custom [11]
[36]     0.0    0.00    0.00      24         option_find_int [36]
-----------------------------------------------
                0.00    0.00       1/14          find_int_arg [212]
                0.00    0.00      13/14          time_random_matrix(int, int, int, int, int) [883]
[37]     0.0    0.00    0.00      14         is_avx [37]
-----------------------------------------------
                0.00    0.00      13/13          forward_convolutional_layer [4]
[38]     0.0    0.00    0.00      13         add_bias [38]
-----------------------------------------------
                0.00    0.00      13/13          forward_convolutional_layer [4]
[39]     0.0    0.00    0.00      13         find_arg [39]
-----------------------------------------------
                0.00    0.00      13/13          forward_convolutional_layer [4]
[40]     0.0    0.00    0.00      13         gemm_cpu [40]
-----------------------------------------------
                0.00    0.00      13/13          parse_convolutional(list*, size_params) [12]
[41]     0.0    0.00    0.00      13         get_activation [41]
-----------------------------------------------
                0.00    0.00      13/13          time_random_matrix(int, int, int, int, int) [883]
[42]     0.0    0.00    0.00      13         is_fma_avx2 [42]
-----------------------------------------------
                0.00    0.00      12/12          forward_yolo_layer [57]
[43]     0.0    0.00    0.00      12         activate_array [43]
-----------------------------------------------
                0.00    0.00      12/12          run_detector(int, char**) [751]
[44]     0.0    0.00    0.00      12         find_float_arg [44]
-----------------------------------------------
                0.00    0.00       1/12          replace_image_to_label [24]
                0.00    0.00       1/12          split_str [544]
                0.00    0.00       2/12          file_error [207]
                0.00    0.00       4/12          realloc_error [467]
                0.00    0.00       4/12          xrealloc_location [644]
[45]     0.0    0.00    0.00      12         top_k [45]
-----------------------------------------------
                0.00    0.00      10/10          run_detector(int, char**) [751]
[46]     0.0    0.00    0.00      10         find_char_arg [46]
-----------------------------------------------
                0.00    0.00       6/6           forward_yolo_layer [57]
[47]     0.0    0.00    0.00       6         fill_cpu [47]
-----------------------------------------------
                0.00    0.00       6/6           update_network [5]
[48]     0.0    0.00    0.00       6         forward_maxpool_layer [48]
-----------------------------------------------
                0.00    0.00       6/6           make_maxpool_layer [50]
[49]     0.0    0.00    0.00       6         forward_maxpool_layer_avx [49]
-----------------------------------------------
                0.00    0.00       6/6           parse_dropout(list*, size_params) [767]
[50]     0.0    0.00    0.00       6         make_maxpool_layer [50]
                0.00    0.00       6/6           forward_maxpool_layer_avx [49]
                0.00    0.00       6/329         replace_image_to_label [24]
-----------------------------------------------
                0.00    0.00       3/3           run_detector(int, char**) [751]
[51]     0.0    0.00    0.00       3         int_to_alphanum [51]
-----------------------------------------------
                0.00    0.00       3/3           stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [652]
[52]     0.0    0.00    0.00       3         list_to_array [52]
-----------------------------------------------
                0.00    0.00       1/2           parse_network_cfg_custom [11]
                0.00    0.00       1/2           validate_detector_map <cycle 1> [10]
[53]     0.0    0.00    0.00       2         backward_network [53]
-----------------------------------------------
                0.00    0.00       2/2           update_network [5]
[54]     0.0    0.00    0.00       2         backward_route_layer [54]
                0.00    0.00       3/3           mult_add_into_cpu(int, float*, float*, float*) [673]
-----------------------------------------------
                0.00    0.00       2/2           get_yolo_detections [58]
[55]     0.0    0.00    0.00       2         correct_yolo_boxes [55]
-----------------------------------------------
                0.00    0.00       2/2           validate_detector_map <cycle 1> [10]
[56]     0.0    0.00    0.00       2         detection_to_json [56]
                0.00    0.00       1/1           make_network_boxes [73]
                0.00    0.00       1/1           fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [683]
-----------------------------------------------
                0.00    0.00       2/2           update_network [5]
[57]     0.0    0.00    0.00       2         forward_yolo_layer [57]
                0.00    0.00      12/12          activate_array [43]
                0.00    0.00       6/6           fill_cpu [47]
-----------------------------------------------
                0.00    0.00       2/2           fill_network_boxes_batch(network*, int, int, float, float, int*, int, detection*, int, int) [936]
[58]     0.0    0.00    0.00       2         get_yolo_detections [58]
                0.00    0.00     109/109         delta_yolo_box(box, float*, float*, int, int, int, int, int, int, int, int, float*, float, int, float, IOU_LOSS, int, float, int*, int) [657]
                0.00    0.00       2/2           correct_yolo_boxes [55]
-----------------------------------------------
                0.00    0.00       2/2           parse_route(list*, size_params) [671]
[59]     0.0    0.00    0.00       2         make_route_layer [59]
-----------------------------------------------
                0.00    0.00       1/2           update_network [5]
                0.00    0.00       1/2           parse_route(list*, size_params) [671]
[60]     0.0    0.00    0.00       2         make_upsample_layer [60]
                0.00    0.00       1/14          deinter_cpu(int, float*, int, float*, int, float*) [663]
-----------------------------------------------
                0.00    0.00       2/2           parse_yolo(list*, size_params) [675]
[61]     0.0    0.00    0.00       2         make_yolo_layer [61]
                0.00    0.00      14/329         replace_image_to_label [24]
-----------------------------------------------
                0.00    0.00       1/1           update_network [5]
[62]     0.0    0.00    0.00       1         constrain_cpu [62]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[63]     0.0    0.00    0.00       1         copy_weights_net [63]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[64]     0.0    0.00    0.00       1         do_nms_sort [64]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[65]     0.0    0.00    0.00       1         fgetl [65]
-----------------------------------------------
                0.00    0.00       1/1           num_detections(network*, float) [679]
[66]     0.0    0.00    0.00       1         forward_network [66]
                0.00    0.00       9/329         replace_image_to_label [24]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[67]     0.0    0.00    0.00       1         free_load_threads [67]
                0.00    0.00       1/329         replace_image_to_label [24]
-----------------------------------------------
                0.00    0.00       1/1           load_weights_upto [71]
[68]     0.0    0.00    0.00       1         get_current_rate [68]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [11]
[69]     0.0    0.00    0.00       1         get_network_image_layer [69]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[70]     0.0    0.00    0.00       1         load_network [70]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[71]     0.0    0.00    0.00       1         load_weights_upto [71]
                0.00    0.00       1/1           get_current_rate [68]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [11]
[72]     0.0    0.00    0.00       1         make_network [72]
                0.00    0.00       1/329         replace_image_to_label [24]
-----------------------------------------------
                0.00    0.00       1/1           detection_to_json [56]
[73]     0.0    0.00    0.00       1         make_network_boxes [73]
                0.00    0.00     110/329         replace_image_to_label [24]
                0.00    0.00       2/2           avg_flipped_yolo(layer) [676]
                0.00    0.00       1/1           num_detections_batch(network*, float, int) [684]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[74]     0.0    0.00    0.00       1         option_find [74]
                0.00    0.00       1/29          free_list_val [32]
-----------------------------------------------
                0.00    0.00       1/1           parse_fields [76]
[75]     0.0    0.00    0.00       1         parse_csv_line [75]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[76]     0.0    0.00    0.00       1         parse_fields [76]
                0.00    0.00       1/1           parse_csv_line [75]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[77]     0.0    0.00    0.00       1         read_boxes [77]
                0.00    0.00       4/67          strip [30]
                0.00    0.00       1/329         replace_image_to_label [24]
                0.00    0.00       1/1           update_convolutional_layer [80]
-----------------------------------------------
                0.00    0.00       1/1           run_thread_loop(void*) [20]
[78]     0.0    0.00    0.00       1         resize_image [78]
                0.00    0.00       2/3           border_image(image, int) [672]
-----------------------------------------------
                0.00    0.00       1/1           stbi__loadf_main(stbi__context*, int*, int*, int*, int) [687]
[79]     0.0    0.00    0.00       1         stbi_load [79]
-----------------------------------------------
                0.00    0.00       1/1           read_boxes [77]
[80]     0.0    0.00    0.00       1         update_convolutional_layer [80]
-----------------------------------------------
                0.00    0.00       4/72838       stbi__compute_huffman_codes(stbi__zbuf*) [1064]
                0.00    0.00      28/72838       stbi__decode_jpeg_image(stbi__jpeg*) [688]
                0.00    0.00   72806/72838       stbi__jpeg_decode_block(stbi__jpeg*, short*, stbi__huffman*, stbi__huffman*, short*, int, unsigned short*) [650]
[648]    0.0    0.00    0.00   72838         stbi__grow_buffer_unsafe(stbi__jpeg*) [648]
-----------------------------------------------
                0.00    0.00   13824/13824       stbi__decode_jpeg_image(stbi__jpeg*) [688]
[649]    0.0    0.00    0.00   13824         stbi__idct_simd(unsigned char*, int, short*) [649]
-----------------------------------------------
                0.00    0.00   13824/13824       stbi__decode_jpeg_image(stbi__jpeg*) [688]
[650]    0.0    0.00    0.00   13824         stbi__jpeg_decode_block(stbi__jpeg*, short*, stbi__huffman*, stbi__huffman*, short*, int, unsigned short*) [650]
                0.00    0.00   72806/72838       stbi__grow_buffer_unsafe(stbi__jpeg*) [648]
-----------------------------------------------
                0.00    0.00    3694/3694        time_random_matrix(int, int, int, int, int) [883]
[651]    0.0    0.00    0.00    3694         gemm_nn(int, int, int, float, float*, int, float*, int, float*, int) [651]
-----------------------------------------------
                0.00    0.00       1/1734        parse_network_cfg_custom [11]
                0.00    0.00       2/1734        load_data_region(int, char**, int, int, int, int, int, float, float, float, float) [680]
                0.00    0.00       3/1734        validate_detector_map <cycle 1> [10]
                0.00    0.00    1728/1734        stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [686]
[652]    0.0    0.00    0.00    1734         stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [652]
                0.00    0.00       3/3           list_to_array [52]
                0.00    0.00       2/329         replace_image_to_label [24]
-----------------------------------------------
                0.00    0.00       1/1227        stbi_load_from_callbacks [565]
                0.00    0.00       4/1227        stbi__decode_jpeg_header(stbi__jpeg*, int) [689]
                0.00    0.00      12/1227        stbi__process_marker(stbi__jpeg*, int) [665]
                0.00    0.00    1210/1227        stbi__jpeg_decode_block_prog_dc(stbi__jpeg*, short*, stbi__huffman*, int) [1066]
[653]    0.0    0.00    0.00    1227         stbi__build_huffman(stbi__huffman*, int*) [653]
-----------------------------------------------
                0.00    0.00       2/708         get_policy(char*) [697]
                0.00    0.00       6/708         parse_dropout(list*, size_params) [767]
                0.00    0.00       7/708         parse_route(list*, size_params) [671]
                0.00    0.00      36/708         parse_avgpool(list*, size_params) [766]
                0.00    0.00      50/708         parse_yolo(list*, size_params) [675]
                0.00    0.00      52/708         parse_net_options(list*, network*) [681]
                0.00    0.00     104/708         parse_crnn(list*, size_params) [701]
                0.00    0.00     217/708         parse_network_cfg_custom [11]
                0.00    0.00     234/708         parse_convolutional(list*, size_params) [12]
[654]    0.0    0.00    0.00     708         average(int, char**) [654]
                0.00    0.00     708/803         get_metadata [23]
-----------------------------------------------
                0.00    0.00       1/696         count_fields [166]
                0.00    0.00      25/696         parse_network_cfg_custom [11]
                0.00    0.00      29/696         free_list [256]
                0.00    0.00     130/696         read_data_cfg [29]
                0.00    0.00     236/696         free_list_contents_kvp [26]
                0.00    0.00     275/696         read_map [25]
[655]    0.0    0.00    0.00     696         trim(char*) [655]
-----------------------------------------------
                0.00    0.00     576/576         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [686]
[656]    0.0    0.00    0.00     576         stbi__YCbCr_to_RGB_simd(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [656]
-----------------------------------------------
                0.00    0.00     109/109         get_yolo_detections [58]
[657]    0.0    0.00    0.00     109         delta_yolo_box(box, float*, float*, int, int, int, int, int, int, int, int, float*, float, int, float, IOU_LOSS, int, float, int*, int) [657]
-----------------------------------------------
                0.00    0.00      13/26          make_convolutional_layer [6]
                0.00    0.00      13/26          forward_convolutional_layer [4]
[658]    0.0    0.00    0.00      26         get_workspace_size32(layer) [658]
-----------------------------------------------
                0.00    0.00      25/25          parse_network_cfg_custom [11]
[659]    0.0    0.00    0.00      25         parse_local(list*, size_params) [659]
-----------------------------------------------
                0.00    0.00      24/24          fuse_conv_batchnorm <cycle 1> [7]
[660]    0.0    0.00    0.00      24         bbox_comparator(void const*, void const*) [660]
-----------------------------------------------
                0.00    0.00      24/24          parse_network_cfg_custom [11]
[661]    0.0    0.00    0.00      24         string_to_layer_type(char*) [661]
-----------------------------------------------
                0.00    0.00       1/16          stbi__decode_jpeg_image(stbi__jpeg*) [688]
                0.00    0.00       3/16          stbi__decode_jpeg_header(stbi__jpeg*, int) [689]
                0.00    0.00      12/16          stbi__process_marker(stbi__jpeg*, int) [665]
[662]    0.0    0.00    0.00      16         stbi__readval(stbi__context*, int, unsigned char*) [662]
-----------------------------------------------
                0.00    0.00       1/14          make_upsample_layer [60]
                0.00    0.00      13/14          forward_convolutional_layer [4]
[663]    0.0    0.00    0.00      14         deinter_cpu(int, float*, int, float*, int, float*) [663]
-----------------------------------------------
                0.00    0.00      13/13          load_network_custom [360]
[664]    0.0    0.00    0.00      13         load_convolutional_weights(layer, _IO_FILE*) [664]
-----------------------------------------------
                0.00    0.00       4/11          stbi__decode_jpeg_header(stbi__jpeg*, int) [689]
                0.00    0.00       7/11          stbi__decode_jpeg_image(stbi__jpeg*) [688]
[665]    0.0    0.00    0.00      11         stbi__process_marker(stbi__jpeg*, int) [665]
                0.00    0.00      12/16          stbi__readval(stbi__context*, int, unsigned char*) [662]
                0.00    0.00      12/1227        stbi__build_huffman(stbi__huffman*, int*) [653]
-----------------------------------------------
                0.00    0.00      10/10          replace_image_to_label [24]
[666]    0.0    0.00    0.00      10         find_replace_extension(char*, char*, char*, char*) [666]
-----------------------------------------------
                0.00    0.00      10/10          stbi__decode_jpeg_header(stbi__jpeg*, int) [689]
[667]    0.0    0.00    0.00      10         stbi__resample_row_h_2(unsigned char*, unsigned char*, unsigned char*, int, int) [667]
-----------------------------------------------
                0.00    0.00       6/6           parse_network_cfg_custom [11]
[668]    0.0    0.00    0.00       6         parse_maxpool(list*, size_params) [668]
-----------------------------------------------
                0.00    0.00       6/6           run_detector(int, char**) [751]
[669]    0.0    0.00    0.00       6         pm(int, int, float*) [669]
-----------------------------------------------
                0.00    0.00       4/4           parse_yolo(list*, size_params) [675]
[670]    0.0    0.00    0.00       4         get_classes_multipliers(char*, int, float) [670]
                0.00    0.00       2/329         replace_image_to_label [24]
-----------------------------------------------
                0.00    0.00       3/3           parse_network_cfg_custom [11]
[671]    0.0    0.00    0.00       3         parse_route(list*, size_params) [671]
                0.00    0.00       7/708         average(int, char**) [654]
                0.00    0.00       4/329         replace_image_to_label [24]
                0.00    0.00       2/803         get_metadata [23]
                0.00    0.00       2/2           make_route_layer [59]
                0.00    0.00       1/59          option_find_int_quiet [31]
                0.00    0.00       1/2           make_upsample_layer [60]
-----------------------------------------------
                                   3             border_image(image, int) [672]
                0.00    0.00       1/3           load_image_stb(char*, int) [19]
                0.00    0.00       2/3           resize_image [78]
[672]    0.0    0.00    0.00       3+3       border_image(image, int) [672]
                0.00    0.00       3/329         replace_image_to_label [24]
                                   3             border_image(image, int) [672]
-----------------------------------------------
                0.00    0.00       3/3           backward_route_layer [54]
[673]    0.0    0.00    0.00       3         mult_add_into_cpu(int, float*, float*, float*) [673]
-----------------------------------------------
                0.00    0.00       1/3           resize_min [487]
                0.00    0.00       2/3           validate_detector_map <cycle 1> [10]
[674]    0.0    0.00    0.00       3         get_label(image**, char*, int) [674]
-----------------------------------------------
                0.00    0.00       2/2           parse_network_cfg_custom [11]
[675]    0.0    0.00    0.00       2         parse_yolo(list*, size_params) [675]
                0.00    0.00      50/708         average(int, char**) [654]
                0.00    0.00      14/803         get_metadata [23]
                0.00    0.00       4/59          option_find_int_quiet [31]
                0.00    0.00       4/4           get_classes_multipliers(char*, int, float) [670]
                0.00    0.00       2/2           make_yolo_layer [61]
-----------------------------------------------
                0.00    0.00       2/2           make_network_boxes [73]
[676]    0.0    0.00    0.00       2         avg_flipped_yolo(layer) [676]
-----------------------------------------------
                0.00    0.00       1/2           load_data_region(int, char**, int, int, int, int, int, float, float, float, float) [680]
                0.00    0.00       1/2           validate_detector_map <cycle 1> [10]
[677]    0.0    0.00    0.00       2         get_sequential_paths(char**, int, int, int, int, int) [677]
                0.00    0.00      83/275         read_map [25]
                0.00    0.00      81/236         free_list_contents_kvp [26]
                0.00    0.00       2/29          free_list_val [32]
-----------------------------------------------
                0.00    0.00       2/2           etext [205]
[678]    0.0    0.00    0.00       2         _init [678]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[679]    0.0    0.00    0.00       1         num_detections(network*, float) [679]
                0.00    0.00       1/1           forward_network [66]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map <cycle 1> [10]
[680]    0.0    0.00    0.00       1         load_data_region(int, char**, int, int, int, int, int, float, float, float, float) [680]
                0.00    0.00       2/1734        stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [652]
                0.00    0.00       1/2           get_sequential_paths(char**, int, int, int, int, int) [677]
-----------------------------------------------
                                   1             parse_net_options(list*, network*) [681]
                0.00    0.00       1/1           parse_network_cfg_custom [11]
[681]    0.0    0.00    0.00       1+1       parse_net_options(list*, network*) [681]
                0.00    0.00      52/708         average(int, char**) [654]
                0.00    0.00       4/803         get_metadata [23]
                0.00    0.00       3/59          option_find_int_quiet [31]
                0.00    0.00       3/329         replace_image_to_label [24]
                                   1             parse_net_options(list*, network*) [681]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [11]
[682]    0.0    0.00    0.00       1         set_train_only_bn(network) [682]
-----------------------------------------------
                0.00    0.00       1/1           detection_to_json [56]
[683]    0.0    0.00    0.00       1         fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [683]
-----------------------------------------------
                0.00    0.00       1/1           make_network_boxes [73]
[684]    0.0    0.00    0.00       1         num_detections_batch(network*, float, int) [684]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [11]
[685]    0.0    0.00    0.00       1         read_cfg(char*) [685]
-----------------------------------------------
                0.00    0.00       1/1           stbi__load_and_postprocess_8bit(stbi__context*, int*, int*, int*, int) [690]
[686]    0.0    0.00    0.00       1         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [686]
                0.00    0.00    1728/1734        stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [652]
                0.00    0.00     576/576         stbi__YCbCr_to_RGB_simd(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [656]
                0.00    0.00       1/1           stbi__decode_jpeg_image(stbi__jpeg*) [688]
-----------------------------------------------
                0.00    0.00       1/1           load_image_stb(char*, int) [19]
[687]    0.0    0.00    0.00       1         stbi__loadf_main(stbi__context*, int*, int*, int*, int) [687]
                0.00    0.00       1/1           stbi_load [79]
-----------------------------------------------
                0.00    0.00       1/1           stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [686]
[688]    0.0    0.00    0.00       1         stbi__decode_jpeg_image(stbi__jpeg*) [688]
                0.00    0.00   13824/13824       stbi__idct_simd(unsigned char*, int, short*) [649]
                0.00    0.00   13824/13824       stbi__jpeg_decode_block(stbi__jpeg*, short*, stbi__huffman*, stbi__huffman*, short*, int, unsigned short*) [650]
                0.00    0.00      28/72838       stbi__grow_buffer_unsafe(stbi__jpeg*) [648]
                0.00    0.00       7/11          stbi__process_marker(stbi__jpeg*, int) [665]
                0.00    0.00       1/1           stbi__decode_jpeg_header(stbi__jpeg*, int) [689]
                0.00    0.00       1/16          stbi__readval(stbi__context*, int, unsigned char*) [662]
-----------------------------------------------
                0.00    0.00       1/1           stbi__decode_jpeg_image(stbi__jpeg*) [688]
[689]    0.0    0.00    0.00       1         stbi__decode_jpeg_header(stbi__jpeg*, int) [689]
                0.00    0.00      10/10          stbi__resample_row_h_2(unsigned char*, unsigned char*, unsigned char*, int, int) [667]
                0.00    0.00       4/11          stbi__process_marker(stbi__jpeg*, int) [665]
                0.00    0.00       4/1227        stbi__build_huffman(stbi__huffman*, int*) [653]
                0.00    0.00       3/16          stbi__readval(stbi__context*, int, unsigned char*) [662]
-----------------------------------------------
                0.00    0.00       1/1           stbi_load_from_callbacks [565]
[690]    0.0    0.00    0.00       1         stbi__load_and_postprocess_8bit(stbi__context*, int*, int*, int*, int) [690]
                0.00    0.00       1/1           stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [686]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [675] parse_yolo(list*, size_params) [688] stbi__decode_jpeg_image(stbi__jpeg*) [68] get_current_rate
 [663] deinter_cpu(int, float*, int, float*, int, float*) [650] stbi__jpeg_decode_block(stbi__jpeg*, short*, stbi__huffman*, stbi__huffman*, short*, int, unsigned short*) [17] get_embedding
 [659] parse_local(list*, size_params) [689] stbi__decode_jpeg_header(stbi__jpeg*, int) [23] get_metadata
 [671] parse_route(list*, size_params) [648] stbi__grow_buffer_unsafe(stbi__jpeg*) [69] get_network_image_layer
 [672] border_image(image, int) [690] stbi__load_and_postprocess_8bit(stbi__context*, int*, int*, int*, int) [58] get_yolo_detections
   [1] gemm_nn_fast(int, int, int, float, float*, int, float*, int, float*, int) [678] _init [9] im2col_cpu_ext
 [668] parse_maxpool(list*, size_params) [43] activate_array [51] int_to_alphanum
 [657] delta_yolo_box(box, float*, float*, int, int, int, int, int, int, int, int, float*, float, int, float, IOU_LOSS, int, float, int*, int) [38] add_bias [37] is_avx
  [19] load_image_stb(char*, int) [53] backward_network   [42] is_fma_avx2
 [679] num_detections(network*, float) [54] backward_route_layer [52] list_to_array
 [660] bbox_comparator(void const*, void const*) [15] box_diou [70] load_network
 [676] avg_flipped_yolo(layer) [14] box_giou              [71] load_weights_upto
 [680] load_data_region(int, char**, int, int, int, int, int, float, float, float, float) [22] box_iou [6] make_convolutional_layer
 [673] mult_add_into_cpu(int, float*, float*, float*) [16] composite_3d [50] make_maxpool_layer
 [681] parse_net_options(list*, network*) [62] constrain_cpu [72] make_network
 [682] set_train_only_bn(network) [63] copy_weights_net   [73] make_network_boxes
 [683] fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [55] correct_yolo_boxes [59] make_route_layer
  [12] parse_convolutional(list*, size_params) [56] detection_to_json [60] make_upsample_layer
 [677] get_sequential_paths(char**, int, int, int, int, int) [64] do_nms_sort [61] make_yolo_layer
 [658] get_workspace_size32(layer) [65] fgetl             [13] one_hot_encode
 [684] num_detections_batch(network*, float, int) [47] fill_cpu [74] option_find
 [661] string_to_layer_type(char*) [39] find_arg          [36] option_find_int
 [666] find_replace_extension(char*, char*, char*, char*) [46] find_char_arg [31] option_find_int_quiet
 [670] get_classes_multipliers(char*, int, float) [44] find_float_arg [28] option_unused
 [664] load_convolutional_weights(layer, _IO_FILE*) [8] float_to_bit [75] parse_csv_line
 [669] pm(int, int, float*)    [4] forward_convolutional_layer [76] parse_fields
 [655] trim(char*)            [48] forward_maxpool_layer  [11] parse_network_cfg_custom
 [654] average(int, char**)   [49] forward_maxpool_layer_avx [77] read_boxes
 [651] gemm_nn(int, int, int, float, float*, int, float*, int, float*, int) [66] forward_network [29] read_data_cfg
 [685] read_cfg(char*)        [57] forward_yolo_layer     [25] read_map
 [674] get_label(image**, char*, int) [33] free_convolutional_batchnorm [18] repack_input
 [662] stbi__readval(stbi__context*, int, unsigned char*) [35] free_layer_custom [24] replace_image_to_label
 [649] stbi__idct_simd(unsigned char*, int, short*) [26] free_list_contents_kvp [78] resize_image
 [686] stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [32] free_list_val [79] stbi_load
 [687] stbi__loadf_main(stbi__context*, int*, int*, int*, int) [67] free_load_threads [30] strip
 [653] stbi__build_huffman(stbi__huffman*, int*) [27] free_ptrs [45] top_k
 [665] stbi__process_marker(stbi__jpeg*, int) [7] fuse_conv_batchnorm [80] update_convolutional_layer
 [667] stbi__resample_row_h_2(unsigned char*, unsigned char*, unsigned char*, int, int) [40] gemm_cpu [10] validate_detector_map
 [652] stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [41] get_activation [2] <cycle 1>
 [656] stbi__YCbCr_to_RGB_simd(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [34] get_convolutional_delta
