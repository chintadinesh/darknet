Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 95.26     20.49    20.49     3694     0.01     0.01  gemm_nn(int, int, int, float, float*, int, float*, int, float*, int)
  0.93     20.69     0.20      762     0.00     0.00  stbi__parse_zlib(stbi__zbuf*, int)
  0.79     20.86     0.17  8845488     0.00     0.00  rand_uniform
  0.65     21.00     0.14        1     0.14     0.14  fuse_conv_batchnorm
  0.51     21.11     0.11        6     0.02     0.02  forward_maxpool_layer_avx
  0.46     21.21     0.10        9     0.01     0.01  im2col_cpu_ext
  0.33     21.28     0.07       13     0.01     0.02  make_convolutional_layer
  0.19     21.32     0.04      761     0.00     0.00  load_image_stb(char*, int)
  0.19     21.36     0.04        1     0.04     0.04  resize_image
  0.14     21.39     0.03       13     0.00     0.00  activate_array_cpu_custom
  0.14     21.42     0.03       13     0.00     0.00  add_bias
  0.09     21.44     0.02    16339     0.00     0.00  stbi__grow_buffer_unsafe(stbi__jpeg*)
  0.09     21.46     0.02        2     0.01     0.01  save_image_options(image, char const*, IMTYPE, int)
  0.05     21.47     0.01    13824     0.00     0.00  stbi__idct_block(unsigned char*, int, short*)
  0.05     21.48     0.01      576     0.00     0.00  stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int)
  0.05     21.49     0.01      340     0.00     0.00  stbi__zbuild_huffman(stbi__zhuffman*, unsigned char const*, int)
  0.05     21.50     0.01        6     0.00     0.00  draw_weighted_label
  0.05     21.51     0.01        3     0.00     0.00  copy_cpu
  0.00     21.51     0.00   243462     0.00     0.00  stbi__stdio_write(void*, void*, int)
  0.00     21.51     0.00    74746     0.00     0.00  stbiw__jpg_writeBits(stbi__write_context*, int*, int*, unsigned short const*)
  0.00     21.51     0.00    47136     0.00     0.00  stbi__get16be(stbi__context*)
  0.00     21.51     0.00     9147     0.00     0.00  stbi__get8(stbi__context*)
  0.00     21.51     0.00     4397     0.00     0.00  stbi__stdio_read(void*, char*, int)
  0.00     21.51     0.00     1152     0.00     0.00  stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int)
  0.00     21.51     0.00      996     0.00     0.00  xcalloc_location
  0.00     21.51     0.00      857     0.00     0.00  free_image
  0.00     21.51     0.00      851     0.00     0.00  make_empty_image
  0.00     21.51     0.00      845     0.00     0.00  make_image
  0.00     21.51     0.00      801     0.00     0.00  option_find
  0.00     21.51     0.00      761     0.00     0.00  stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int)
  0.00     21.51     0.00      761     0.00     0.00  stbi__malloc_mad3(int, int, int, int)
  0.00     21.51     0.00      761     0.00     0.00  stbi__mad3sizes_valid(int, int, int, int)
  0.00     21.51     0.00      761     0.00     0.00  load_image
  0.00     21.51     0.00      761     0.00     0.00  stbi_load
  0.00     21.51     0.00      761     0.00     0.00  stbi_load_from_file
  0.00     21.51     0.00      760     0.00     0.00  stbi__getn(stbi__context*, unsigned char*, int)
  0.00     21.51     0.00      760     0.00     0.00  stbiw__zlib_flushf(unsigned char*, unsigned int*, int*)
  0.00     21.51     0.00      760     0.00     0.00  stbi__parse_png_file(stbi__png*, int, int)
  0.00     21.51     0.00      760     0.00     0.00  load_image_color
  0.00     21.51     0.00      760     0.00     0.00  stbi_zlib_decode_malloc_guesssize_headerflag
  0.00     21.51     0.00      691     0.00     0.00  xmalloc_location
  0.00     21.51     0.00      576     0.00     0.00  resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int)
  0.00     21.51     0.00      557     0.00     0.00  option_find_int_quiet
  0.00     21.51     0.00      368     0.00     0.00  overlap(float, float, float, float)
  0.00     21.51     0.00      273     0.00     0.00  fgetl
  0.00     21.51     0.00      235     0.00     0.00  list_insert
  0.00     21.51     0.00      225     0.00     0.00  stbi__stdio_skip(void*, int)
  0.00     21.51     0.00      190     0.00     0.00  strip
  0.00     21.51     0.00      184     0.00     0.00  box_intersection(box, box)
  0.00     21.51     0.00      170     0.00     0.00  stbi__compute_huffman_codes(stbi__zbuf*)
  0.00     21.51     0.00      142     0.00     0.00  option_find_float_quiet
  0.00     21.51     0.00      130     0.00     0.00  option_insert
  0.00     21.51     0.00      130     0.00     0.00  read_option
  0.00     21.51     0.00       92     0.00     0.00  box_union(box, box)
  0.00     21.51     0.00       92     0.00     0.00  box_iou
  0.00     21.51     0.00       90     0.00     0.00  fill_cpu
  0.00     21.51     0.00       82     0.00     0.00  tile_images(image, image, int)
  0.00     21.51     0.00       76     0.00     0.00  composite_image(image, image, int, int)
  0.00     21.51     0.00       76     0.00     0.00  embed_image
  0.00     21.51     0.00       59     0.00     0.00  option_find_int
  0.00     21.51     0.00       28     0.00     0.00  make_list
  0.00     21.51     0.00       26     0.00     0.00  convolutional_out_height
  0.00     21.51     0.00       26     0.00     0.00  convolutional_out_width
  0.00     21.51     0.00       25     0.00     0.00  free_section(section*)
  0.00     21.51     0.00       24     0.00     0.00  string_to_layer_type(char*)
  0.00     21.51     0.00       24     0.00     0.00  free_layer
  0.00     21.51     0.00       24     0.00     0.00  free_layer_custom
  0.00     21.51     0.00       24     0.00     0.00  option_unused
  0.00     21.51     0.00       23     0.00     0.00  option_find_str
  0.00     21.51     0.00       18     0.00     0.00  get_color
  0.00     21.51     0.00       14     0.00     0.00  is_avx
  0.00     21.51     0.00       13     0.00     0.00  get_yolo_box(float*, float*, int, int, int, int, int, int, int, int, int, int)
  0.00     21.51     0.00       13     0.00     0.02  parse_convolutional(list*, size_params)
  0.00     21.51     0.00       13     0.00     0.00  get_workspace_size16(layer)
  0.00     21.51     0.00       13     0.00     0.00  get_workspace_size32(layer)
  0.00     21.51     0.00       13     0.00     0.00  load_convolutional_weights(layer, _IO_FILE*)
  0.00     21.51     0.00       13     0.00     1.59  forward_convolutional_layer
  0.00     21.51     0.00       13     0.00     1.58  gemm
  0.00     21.51     0.00       13     0.00     1.58  gemm_cpu
  0.00     21.51     0.00       13     0.00     0.00  get_activation
  0.00     21.51     0.00       13     0.00     0.00  get_convolutional_workspace_size
  0.00     21.51     0.00       13     0.00     0.00  is_fma_avx2
  0.00     21.51     0.00       12     0.00     0.00  activate_array
  0.00     21.51     0.00       12     0.00     0.00  find_arg
  0.00     21.51     0.00       11     0.00     0.00  stbi__process_marker(stbi__jpeg*, int)
  0.00     21.51     0.00       11     0.00     0.00  free_convolutional_batchnorm
  0.00     21.51     0.00       10     0.00     0.00  find_int_arg
  0.00     21.51     0.00        9     0.00     0.00  option_find_float
  0.00     21.51     0.00        6     0.00     0.00  border_image(image, int)
  0.00     21.51     0.00        6     0.00     0.00  get_label_v3(image**, char*, int)
  0.00     21.51     0.00        6     0.00     0.00  parse_maxpool(list*, size_params)
  0.00     21.51     0.00        6     0.00     0.00  copy_image
  0.00     21.51     0.00        6     0.00     0.00  draw_box
  0.00     21.51     0.00        6     0.00     0.00  draw_box_width
  0.00     21.51     0.00        6     0.00     0.00  find_char_arg
  0.00     21.51     0.00        6     0.00     0.02  forward_maxpool_layer
  0.00     21.51     0.00        6     0.00     0.00  make_maxpool_layer
  0.00     21.51     0.00        6     0.00     0.00  option_find_str_quiet
  0.00     21.51     0.00        6     0.00     0.00  scal_add_cpu
  0.00     21.51     0.00        4     0.00     0.00  stbi__build_huffman(stbi__huffman*, int*)
  0.00     21.51     0.00        3     0.00     0.00  free_node(node*)
  0.00     21.51     0.00        3     0.00     0.00  stbi__malloc_mad2(int, int, int)
  0.00     21.51     0.00        3     0.00     0.00  find_float_arg
  0.00     21.51     0.00        3     0.00     0.00  free_list
  0.00     21.51     0.00        2     0.00     0.00  parse_yolo(list*, size_params)
  0.00     21.51     0.00        2     0.00     0.00  parse_route(list*, size_params)
  0.00     21.51     0.00        2     0.00     0.00  parse_yolo_mask(char*, int*)
  0.00     21.51     0.00        2     0.00     0.00  get_classes_multipliers(char*, int, float)
  0.00     21.51     0.00        2     0.00     0.00  stbi__hdr_info(stbi__context*, int*, int*, int*)
  0.00     21.51     0.00        2     0.00     0.00  correct_yolo_boxes
  0.00     21.51     0.00        2     0.00     0.01  forward_route_layer
  0.00     21.51     0.00        2     0.00     0.00  forward_yolo_layer
  0.00     21.51     0.00        2     0.00     0.00  get_network_output
  0.00     21.51     0.00        2     0.00     0.00  get_time_point
  0.00     21.51     0.00        2     0.00     0.00  get_yolo_detections
  0.00     21.51     0.00        2     0.00     0.00  make_route_layer
  0.00     21.51     0.00        2     0.00     0.00  make_yolo_layer
  0.00     21.51     0.00        2     0.00     0.01  save_image
  0.00     21.51     0.00        2     0.00     0.00  stbi_write_jpg
  0.00     21.51     0.00        2     0.00     0.00  yolo_num_detections
  0.00     21.51     0.00        1     0.00     0.00  get_policy(char*)
  0.00     21.51     0.00        1     0.00     0.00  is_network(section*)
  0.00     21.51     0.00        1     0.00     0.00  num_detections(network*, float)
  0.00     21.51     0.00        1     0.00     0.00  parse_upsample(list*, size_params, network)
  0.00     21.51     0.00        1     0.00     0.00  parse_net_options(list*, network*)
  0.00     21.51     0.00        1     0.00     0.00  set_train_only_bn(network)
  0.00     21.51     0.00        1     0.00     0.00  fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int)
  0.00     21.51     0.00        1     0.00     0.00  read_cfg(char*)
  0.00     21.51     0.00        1     0.00     0.03  stbi__decode_jpeg_image(stbi__jpeg*)
  0.00     21.51     0.00        1     0.00     0.00  stbi__decode_jpeg_header(stbi__jpeg*, int)
  0.00     21.51     0.00        1     0.00     0.00  calculate_binary_weights
  0.00     21.51     0.00        1     0.00     0.00  destroy_all_windows_cv
  0.00     21.51     0.00        1     0.00     0.00  do_nms_sort
  0.00     21.51     0.00        1     0.00     0.01  draw_detections_v3
  0.00     21.51     0.00        1     0.00    20.77  forward_network
  0.00     21.51     0.00        1     0.00     0.00  forward_upsample_layer
  0.00     21.51     0.00        1     0.00     0.00  free_detections
  0.00     21.51     0.00        1     0.00     0.00  free_list_contents_kvp
  0.00     21.51     0.00        1     0.00     0.00  free_network
  0.00     21.51     0.00        1     0.00     0.00  free_ptrs
  0.00     21.51     0.00        1     0.00     0.00  get_actual_detections
  0.00     21.51     0.00        1     0.00     0.00  get_current_batch
  0.00     21.51     0.00        1     0.00     0.00  get_labels_custom
  0.00     21.51     0.00        1     0.00     0.00  get_network_boxes
  0.00     21.51     0.00        1     0.00     0.00  get_network_output_size
  0.00     21.51     0.00        1     0.00     0.00  get_paths
  0.00     21.51     0.00        1     0.00     0.00  list_to_array
  0.00     21.51     0.00        1     0.00     0.29  load_alphabet
  0.00     21.51     0.00        1     0.00     0.00  load_weights
  0.00     21.51     0.00        1     0.00     0.00  load_weights_upto
  0.00     21.51     0.00        1     0.00     0.00  make_network
  0.00     21.51     0.00        1     0.00     0.00  make_network_boxes
  0.00     21.51     0.00        1     0.00     0.00  make_upsample_layer
  0.00     21.51     0.00        1     0.00    20.77  network_predict
  0.00     21.51     0.00        1     0.00     0.24  parse_network_cfg_custom
  0.00     21.51     0.00        1     0.00     0.00  read_data_cfg
  0.00     21.51     0.00        1     0.00     0.01  show_image
  0.00     21.51     0.00        1     0.00    21.51  test_detector
  0.00     21.51     0.00        1     0.00     0.00  upsample_cpu
  0.00     21.51     0.00        1     0.00     0.00  wait_until_press_key_cv

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.05% of 21.51 seconds

index % time    self  children    called     name
                0.00   21.51       1/1           run_detector(int, char**) [2]
[1]    100.0    0.00   21.51       1         test_detector [1]
                0.00   20.77       1/1           network_predict [4]
                0.00    0.29       1/1           load_alphabet [12]
                0.00    0.24       1/1           parse_network_cfg_custom [17]
                0.14    0.00       1/1           fuse_conv_batchnorm [23]
                0.04    0.00       1/1           resize_image [27]
                0.00    0.01       1/2           save_image [31]
                0.00    0.01       1/1           show_image [34]
                0.00    0.01       1/1           draw_detections_v3 [38]
                0.00    0.00       1/761         load_image [9]
                0.00    0.00     762/857         free_image [45]
                0.00    0.00       2/2           get_time_point [90]
                0.00    0.00       1/1           read_data_cfg [115]
                0.00    0.00       1/23          option_find_str [67]
                0.00    0.00       1/1           get_labels_custom [105]
                0.00    0.00       1/1           load_weights_upto [111]
                0.00    0.00       1/1           load_weights [110]
                0.00    0.00       1/1           calculate_binary_weights [95]
                0.00    0.00       1/1           get_network_boxes [106]
                0.00    0.00       1/1           do_nms_sort [97]
                0.00    0.00       1/1           free_detections [99]
                0.00    0.00       1/1           wait_until_press_key_cv [117]
                0.00    0.00       1/1           destroy_all_windows_cv [96]
                0.00    0.00       1/1           free_ptrs [102]
                0.00    0.00       1/1           free_list_contents_kvp [100]
                0.00    0.00       1/3           free_list [86]
                0.00    0.00       1/1           free_network [101]
-----------------------------------------------
                                                 <spontaneous>
[2]    100.0    0.00   21.51                 run_detector(int, char**) [2]
                0.00   21.51       1/1           test_detector [1]
                0.00    0.00      12/12          find_arg [74]
                0.00    0.00      10/10          find_int_arg [76]
                0.00    0.00       6/6           find_char_arg [81]
                0.00    0.00       3/3           find_float_arg [85]
-----------------------------------------------
                0.00   20.77       1/1           network_predict [4]
[3]     96.6    0.00   20.77       1         forward_network [3]
                0.00   20.65      13/13          forward_convolutional_layer [5]
                0.00    0.11       6/6           forward_maxpool_layer [24]
                0.00    0.01       2/2           forward_route_layer [37]
                0.00    0.00       2/2           forward_yolo_layer [88]
                0.00    0.00       1/1           upsample_cpu [116]
                0.00    0.00       1/1           forward_upsample_layer [98]
-----------------------------------------------
                0.00   20.77       1/1           test_detector [1]
[4]     96.6    0.00   20.77       1         network_predict [4]
                0.00   20.77       1/1           forward_network [3]
                0.00    0.00       1/2           get_network_output [89]
-----------------------------------------------
                0.00   20.65      13/13          forward_network [3]
[5]     96.0    0.00   20.65      13         forward_convolutional_layer [5]
                0.00   20.49      13/13          gemm [6]
                0.10    0.00       9/9           im2col_cpu_ext [26]
                0.03    0.00      13/13          activate_array_cpu_custom [28]
                0.03    0.00      13/13          add_bias [29]
                0.00    0.00      13/26          convolutional_out_height [62]
                0.00    0.00      13/26          convolutional_out_width [63]
                0.00    0.00      13/90          fill_cpu [58]
-----------------------------------------------
                0.00   20.49      13/13          forward_convolutional_layer [5]
[6]     95.3    0.00   20.49      13         gemm [6]
                0.00   20.49      13/13          gemm_cpu [7]
-----------------------------------------------
                0.00   20.49      13/13          gemm [6]
[7]     95.3    0.00   20.49      13         gemm_cpu [7]
               20.49    0.00    3694/3694        gemm_nn(int, int, int, float, float*, int, float*, int, float*, int) [8]
                0.00    0.00      13/13          is_fma_avx2 [72]
                0.00    0.00      13/14          is_avx [69]
-----------------------------------------------
               20.49    0.00    3694/3694        gemm_cpu [7]
[8]     95.3   20.49    0.00    3694         gemm_nn(int, int, int, float, float*, int, float*, int, float*, int) [8]
-----------------------------------------------
                0.00    0.00       1/761         test_detector [1]
                0.00    0.29     760/761         load_image_color [11]
[9]      1.3    0.00    0.29     761         load_image [9]
                0.04    0.25     761/761         load_image_stb(char*, int) [10]
-----------------------------------------------
                0.04    0.25     761/761         load_image [9]
[10]     1.3    0.04    0.25     761         load_image_stb(char*, int) [10]
                0.00    0.25     761/761         stbi_load [13]
                0.00    0.00     761/845         make_image [47]
-----------------------------------------------
                0.00    0.29     760/760         load_alphabet [12]
[11]     1.3    0.00    0.29     760         load_image_color [11]
                0.00    0.29     760/761         load_image [9]
-----------------------------------------------
                0.00    0.29       1/1           test_detector [1]
[12]     1.3    0.00    0.29       1         load_alphabet [12]
                0.00    0.29     760/760         load_image_color [11]
                0.00    0.00       9/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.25     761/761         load_image_stb(char*, int) [10]
[13]     1.2    0.00    0.25     761         stbi_load [13]
                0.00    0.25     761/761         stbi_load_from_file [14]
-----------------------------------------------
                0.00    0.25     761/761         stbi_load [13]
[14]     1.2    0.00    0.25     761         stbi_load_from_file [14]
                0.00    0.25     761/761         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
                0.00    0.00     761/4397        stbi__stdio_read(void*, char*, int) [662]
-----------------------------------------------
                0.00    0.25     761/761         stbi_load_from_file [14]
[15]     1.2    0.00    0.25     761         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
                0.00    0.21     760/760         stbi__parse_png_file(stbi__png*, int, int) [21]
                0.00    0.03       1/1           stbi__decode_jpeg_image(stbi__jpeg*) [30]
                0.01    0.00     576/576         stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [40]
                0.00    0.00    1152/1152        stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [663]
                0.00    0.00     760/760         stbiw__zlib_flushf(unsigned char*, unsigned int*, int*) [667]
                0.00    0.00     576/576         resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int) [668]
                0.00    0.00       1/761         stbi__malloc_mad3(int, int, int, int) [664]
-----------------------------------------------
                0.07    0.17      13/13          parse_convolutional(list*, size_params) [18]
[16]     1.1    0.07    0.17      13         make_convolutional_layer [16]
                0.17    0.00 8845488/8845488     rand_uniform [22]
                0.00    0.00      72/996         xcalloc_location [44]
                0.00    0.00      13/26          convolutional_out_height [62]
                0.00    0.00      13/26          convolutional_out_width [63]
                0.00    0.00      13/13          get_convolutional_workspace_size [71]
-----------------------------------------------
                0.00    0.24       1/1           test_detector [1]
[17]     1.1    0.00    0.24       1         parse_network_cfg_custom [17]
                0.00    0.24      13/13          parse_convolutional(list*, size_params) [18]
                0.00    0.00     168/557         option_find_int_quiet [50]
                0.00    0.00      49/142         option_find_float_quiet [54]
                0.00    0.00      25/25          free_section(section*) [675]
                0.00    0.00      24/24          string_to_layer_type(char*) [676]
                0.00    0.00      24/24          option_unused [66]
                0.00    0.00       6/6           parse_maxpool(list*, size_params) [684]
                0.00    0.00       2/2           parse_yolo(list*, size_params) [688]
                0.00    0.00       2/2           parse_route(list*, size_params) [689]
                0.00    0.00       1/1           read_cfg(char*) [700]
                0.00    0.00       1/1           make_network [112]
                0.00    0.00       1/1           is_network(section*) [694]
                0.00    0.00       1/1           parse_net_options(list*, network*) [697]
                0.00    0.00       1/3           free_list [86]
                0.00    0.00       1/1           set_train_only_bn(network) [698]
                0.00    0.00       1/1           get_network_output_size [107]
                0.00    0.00       1/2           get_network_output [89]
                0.00    0.00       1/996         xcalloc_location [44]
                0.00    0.00       1/1           parse_upsample(list*, size_params, network) [696]
-----------------------------------------------
                0.00    0.24      13/13          parse_network_cfg_custom [17]
[18]     1.1    0.00    0.24      13         parse_convolutional(list*, size_params) [18]
                0.07    0.17      13/13          make_convolutional_layer [16]
                0.00    0.00     286/557         option_find_int_quiet [50]
                0.00    0.00      52/142         option_find_float_quiet [54]
                0.00    0.00      39/59          option_find_int [60]
                0.00    0.00      13/13          get_activation [70]
                0.00    0.00      13/23          option_find_str [67]
-----------------------------------------------
                               27648             stbi__parse_zlib(stbi__zbuf*, int) [19]
                0.00    0.00       2/762         stbi_write_jpg [43]
                0.20    0.01     760/762         stbi_zlib_decode_malloc_guesssize_headerflag [20]
[19]     1.0    0.20    0.01     762+27648   stbi__parse_zlib(stbi__zbuf*, int) [19]
                0.00    0.01     170/170         stbi__compute_huffman_codes(stbi__zbuf*) [42]
                0.00    0.00  222890/243462      stbi__stdio_write(void*, void*, int) [658]
                0.00    0.00   74746/74746       stbiw__jpg_writeBits(stbi__write_context*, int*, int*, unsigned short const*) [659]
                               27648             stbi__parse_zlib(stbi__zbuf*, int) [19]
-----------------------------------------------
                0.00    0.21     760/760         stbi__parse_png_file(stbi__png*, int, int) [21]
[20]     1.0    0.00    0.21     760         stbi_zlib_decode_malloc_guesssize_headerflag [20]
                0.20    0.01     760/762         stbi__parse_zlib(stbi__zbuf*, int) [19]
-----------------------------------------------
                0.00    0.21     760/760         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
[21]     1.0    0.00    0.21     760         stbi__parse_png_file(stbi__png*, int, int) [21]
                0.00    0.21     760/760         stbi_zlib_decode_malloc_guesssize_headerflag [20]
                0.00    0.00   47120/47136       stbi__get16be(stbi__context*) [660]
                0.00    0.00    9120/9147        stbi__get8(stbi__context*) [661]
                0.00    0.00     760/760         stbi__getn(stbi__context*, unsigned char*, int) [666]
                0.00    0.00     760/761         stbi__malloc_mad3(int, int, int, int) [664]
                0.00    0.00     221/225         stbi__stdio_skip(void*, int) [670]
-----------------------------------------------
                0.17    0.00 8845488/8845488     make_convolutional_layer [16]
[22]     0.8    0.17    0.00 8845488         rand_uniform [22]
-----------------------------------------------
                0.14    0.00       1/1           test_detector [1]
[23]     0.7    0.14    0.00       1         fuse_conv_batchnorm [23]
                0.00    0.00      11/11          free_convolutional_batchnorm [75]
-----------------------------------------------
                0.00    0.11       6/6           forward_network [3]
[24]     0.5    0.00    0.11       6         forward_maxpool_layer [24]
                0.11    0.00       6/6           forward_maxpool_layer_avx [25]
-----------------------------------------------
                0.11    0.00       6/6           forward_maxpool_layer [24]
[25]     0.5    0.11    0.00       6         forward_maxpool_layer_avx [25]
-----------------------------------------------
                0.10    0.00       9/9           forward_convolutional_layer [5]
[26]     0.5    0.10    0.00       9         im2col_cpu_ext [26]
-----------------------------------------------
                0.04    0.00       1/1           test_detector [1]
[27]     0.2    0.04    0.00       1         resize_image [27]
                0.00    0.00       2/845         make_image [47]
                0.00    0.00       1/857         free_image [45]
-----------------------------------------------
                0.03    0.00      13/13          forward_convolutional_layer [5]
[28]     0.1    0.03    0.00      13         activate_array_cpu_custom [28]
-----------------------------------------------
                0.03    0.00      13/13          forward_convolutional_layer [5]
[29]     0.1    0.03    0.00      13         add_bias [29]
-----------------------------------------------
                0.00    0.03       1/1           stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
[30]     0.1    0.00    0.03       1         stbi__decode_jpeg_image(stbi__jpeg*) [30]
                0.02    0.00   16339/16339       stbi__grow_buffer_unsafe(stbi__jpeg*) [33]
                0.01    0.00   13824/13824       stbi__idct_block(unsigned char*, int, short*) [39]
                0.00    0.00       7/11          stbi__process_marker(stbi__jpeg*, int) [681]
                0.00    0.00       5/9147        stbi__get8(stbi__context*) [661]
                0.00    0.00       1/1           stbi__decode_jpeg_header(stbi__jpeg*, int) [701]
                0.00    0.00       1/47136       stbi__get16be(stbi__context*) [660]
-----------------------------------------------
                0.00    0.01       1/2           show_image [34]
                0.00    0.01       1/2           test_detector [1]
[31]     0.1    0.00    0.02       2         save_image [31]
                0.02    0.00       2/2           save_image_options(image, char const*, IMTYPE, int) [32]
-----------------------------------------------
                0.02    0.00       2/2           save_image [31]
[32]     0.1    0.02    0.00       2         save_image_options(image, char const*, IMTYPE, int) [32]
                0.00    0.00       2/2           stbi_write_jpg [43]
                0.00    0.00       2/996         xcalloc_location [44]
-----------------------------------------------
                               70323             stbi__grow_buffer_unsafe(stbi__jpeg*) [33]
                0.02    0.00   16339/16339       stbi__decode_jpeg_image(stbi__jpeg*) [30]
[33]     0.1    0.02    0.00   16339+70323   stbi__grow_buffer_unsafe(stbi__jpeg*) [33]
                0.00    0.00    1210/4397        stbi__stdio_read(void*, char*, int) [662]
                               70323             stbi__grow_buffer_unsafe(stbi__jpeg*) [33]
-----------------------------------------------
                0.00    0.01       1/1           test_detector [1]
[34]     0.0    0.00    0.01       1         show_image [34]
                0.00    0.01       1/2           save_image [31]
-----------------------------------------------
                0.01    0.00       6/6           draw_detections_v3 [38]
[35]     0.0    0.01    0.00       6         draw_weighted_label [35]
-----------------------------------------------
                0.01    0.00       3/3           forward_route_layer [37]
[36]     0.0    0.01    0.00       3         copy_cpu [36]
-----------------------------------------------
                0.00    0.01       2/2           forward_network [3]
[37]     0.0    0.00    0.01       2         forward_route_layer [37]
                0.01    0.00       3/3           copy_cpu [36]
-----------------------------------------------
                0.00    0.01       1/1           test_detector [1]
[38]     0.0    0.00    0.01       1         draw_detections_v3 [38]
                0.01    0.00       6/6           draw_weighted_label [35]
                0.00    0.00      18/18          get_color [68]
                0.00    0.00       6/6           draw_box_width [80]
                0.00    0.00       6/6           get_label_v3(image**, char*, int) [683]
                0.00    0.00       6/857         free_image [45]
                0.00    0.00       1/1           get_actual_detections [103]
-----------------------------------------------
                0.01    0.00   13824/13824       stbi__decode_jpeg_image(stbi__jpeg*) [30]
[39]     0.0    0.01    0.00   13824         stbi__idct_block(unsigned char*, int, short*) [39]
-----------------------------------------------
                0.01    0.00     576/576         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
[40]     0.0    0.01    0.00     576         stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [40]
-----------------------------------------------
                0.01    0.00     340/340         stbi__compute_huffman_codes(stbi__zbuf*) [42]
[41]     0.0    0.01    0.00     340         stbi__zbuild_huffman(stbi__zhuffman*, unsigned char const*, int) [41]
-----------------------------------------------
                0.00    0.01     170/170         stbi__parse_zlib(stbi__zbuf*, int) [19]
[42]     0.0    0.00    0.01     170         stbi__compute_huffman_codes(stbi__zbuf*) [42]
                0.01    0.00     340/340         stbi__zbuild_huffman(stbi__zhuffman*, unsigned char const*, int) [41]
-----------------------------------------------
                0.00    0.00       2/2           save_image_options(image, char const*, IMTYPE, int) [32]
[43]     0.0    0.00    0.00       2         stbi_write_jpg [43]
                0.00    0.00       2/762         stbi__parse_zlib(stbi__zbuf*, int) [19]
-----------------------------------------------
                0.00    0.00       1/996         list_to_array [109]
                0.00    0.00       1/996         get_actual_detections [103]
                0.00    0.00       1/996         parse_network_cfg_custom [17]
                0.00    0.00       2/996         save_image_options(image, char const*, IMTYPE, int) [32]
                0.00    0.00       2/996         parse_yolo_mask(char*, int*) [690]
                0.00    0.00       2/996         make_upsample_layer [114]
                0.00    0.00       3/996         parse_net_options(list*, network*) [697]
                0.00    0.00       4/996         parse_route(list*, size_params) [689]
                0.00    0.00       4/996         make_route_layer [92]
                0.00    0.00       6/996         copy_image [78]
                0.00    0.00       6/996         make_maxpool_layer [82]
                0.00    0.00       9/996         load_alphabet [12]
                0.00    0.00      10/996         make_network [112]
                0.00    0.00      14/996         make_network_boxes [113]
                0.00    0.00      14/996         make_yolo_layer [93]
                0.00    0.00      72/996         make_convolutional_layer [16]
                0.00    0.00     845/996         make_image [47]
[44]     0.0    0.00    0.00     996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       1/857         resize_image [27]
                0.00    0.00       6/857         draw_detections_v3 [38]
                0.00    0.00      88/857         get_label_v3(image**, char*, int) [683]
                0.00    0.00     762/857         test_detector [1]
[45]     0.0    0.00    0.00     857         free_image [45]
-----------------------------------------------
                0.00    0.00       6/851         get_label_v3(image**, char*, int) [683]
                0.00    0.00     845/851         make_image [47]
[46]     0.0    0.00    0.00     851         make_empty_image [46]
-----------------------------------------------
                0.00    0.00       2/845         resize_image [27]
                0.00    0.00       6/845         border_image(image, int) [682]
                0.00    0.00      76/845         tile_images(image, image, int) [673]
                0.00    0.00     761/845         load_image_stb(char*, int) [10]
[47]     0.0    0.00    0.00     845         make_image [47]
                0.00    0.00     845/851         make_empty_image [46]
                0.00    0.00     845/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       2/801         parse_route(list*, size_params) [689]
                0.00    0.00       3/801         parse_net_options(list*, network*) [697]
                0.00    0.00       6/801         option_find_str_quiet [83]
                0.00    0.00       9/801         option_find_float [77]
                0.00    0.00      23/801         option_find_str [67]
                0.00    0.00      59/801         option_find_int [60]
                0.00    0.00     142/801         option_find_float_quiet [54]
                0.00    0.00     557/801         option_find_int_quiet [50]
[48]     0.0    0.00    0.00     801         option_find [48]
-----------------------------------------------
                0.00    0.00      25/691         read_cfg(char*) [700]
                0.00    0.00      28/691         make_list [61]
                0.00    0.00     130/691         option_insert [55]
                0.00    0.00     235/691         list_insert [52]
                0.00    0.00     273/691         fgetl [51]
[49]     0.0    0.00    0.00     691         xmalloc_location [49]
-----------------------------------------------
                0.00    0.00       8/557         parse_route(list*, size_params) [689]
                0.00    0.00      20/557         parse_yolo(list*, size_params) [688]
                0.00    0.00      33/557         parse_net_options(list*, network*) [697]
                0.00    0.00      42/557         parse_maxpool(list*, size_params) [684]
                0.00    0.00     168/557         parse_network_cfg_custom [17]
                0.00    0.00     286/557         parse_convolutional(list*, size_params) [18]
[50]     0.0    0.00    0.00     557         option_find_int_quiet [50]
                0.00    0.00     557/801         option_find [48]
-----------------------------------------------
                0.00    0.00       9/273         read_data_cfg [115]
                0.00    0.00      81/273         get_paths [108]
                0.00    0.00     183/273         read_cfg(char*) [700]
[51]     0.0    0.00    0.00     273         fgetl [51]
                0.00    0.00     273/691         xmalloc_location [49]
-----------------------------------------------
                0.00    0.00      25/235         read_cfg(char*) [700]
                0.00    0.00      80/235         get_paths [108]
                0.00    0.00     130/235         read_option [56]
[52]     0.0    0.00    0.00     235         list_insert [52]
                0.00    0.00     235/691         xmalloc_location [49]
-----------------------------------------------
                0.00    0.00       8/190         read_data_cfg [115]
                0.00    0.00     182/190         read_cfg(char*) [700]
[53]     0.0    0.00    0.00     190         strip [53]
-----------------------------------------------
                0.00    0.00       1/142         parse_upsample(list*, size_params, network) [696]
                0.00    0.00      16/142         parse_net_options(list*, network*) [697]
                0.00    0.00      24/142         parse_yolo(list*, size_params) [688]
                0.00    0.00      49/142         parse_network_cfg_custom [17]
                0.00    0.00      52/142         parse_convolutional(list*, size_params) [18]
[54]     0.0    0.00    0.00     142         option_find_float_quiet [54]
                0.00    0.00     142/801         option_find [48]
-----------------------------------------------
                0.00    0.00     130/130         read_option [56]
[55]     0.0    0.00    0.00     130         option_insert [55]
                0.00    0.00     130/691         xmalloc_location [49]
-----------------------------------------------
                0.00    0.00       6/130         read_data_cfg [115]
                0.00    0.00     124/130         read_cfg(char*) [700]
[56]     0.0    0.00    0.00     130         read_option [56]
                0.00    0.00     130/235         list_insert [52]
                0.00    0.00     130/130         option_insert [55]
-----------------------------------------------
                0.00    0.00      92/92          do_nms_sort [97]
[57]     0.0    0.00    0.00      92         box_iou [57]
                0.00    0.00      92/184         box_intersection(box, box) [671]
                0.00    0.00      92/92          box_union(box, box) [672]
-----------------------------------------------
                0.00    0.00       1/90          forward_upsample_layer [98]
                0.00    0.00      13/90          forward_convolutional_layer [5]
                0.00    0.00      76/90          tile_images(image, image, int) [673]
[58]     0.0    0.00    0.00      90         fill_cpu [58]
-----------------------------------------------
                0.00    0.00      76/76          tile_images(image, image, int) [673]
[59]     0.0    0.00    0.00      76         embed_image [59]
-----------------------------------------------
                0.00    0.00       1/59          parse_upsample(list*, size_params, network) [696]
                0.00    0.00       3/59          parse_net_options(list*, network*) [697]
                0.00    0.00       4/59          parse_yolo(list*, size_params) [688]
                0.00    0.00      12/59          parse_maxpool(list*, size_params) [684]
                0.00    0.00      39/59          parse_convolutional(list*, size_params) [18]
[60]     0.0    0.00    0.00      59         option_find_int [60]
                0.00    0.00      59/801         option_find [48]
-----------------------------------------------
                0.00    0.00       1/28          get_paths [108]
                0.00    0.00       1/28          read_data_cfg [115]
                0.00    0.00      26/28          read_cfg(char*) [700]
[61]     0.0    0.00    0.00      28         make_list [61]
                0.00    0.00      28/691         xmalloc_location [49]
-----------------------------------------------
                0.00    0.00      13/26          make_convolutional_layer [16]
                0.00    0.00      13/26          forward_convolutional_layer [5]
[62]     0.0    0.00    0.00      26         convolutional_out_height [62]
-----------------------------------------------
                0.00    0.00      13/26          make_convolutional_layer [16]
                0.00    0.00      13/26          forward_convolutional_layer [5]
[63]     0.0    0.00    0.00      26         convolutional_out_width [63]
-----------------------------------------------
                0.00    0.00      24/24          free_network [101]
[64]     0.0    0.00    0.00      24         free_layer [64]
                0.00    0.00      24/24          free_layer_custom [65]
-----------------------------------------------
                0.00    0.00      24/24          free_layer [64]
[65]     0.0    0.00    0.00      24         free_layer_custom [65]
-----------------------------------------------
                0.00    0.00      24/24          parse_network_cfg_custom [17]
[66]     0.0    0.00    0.00      24         option_unused [66]
-----------------------------------------------
                0.00    0.00       1/23          parse_net_options(list*, network*) [697]
                0.00    0.00       1/23          test_detector [1]
                0.00    0.00       8/23          parse_yolo(list*, size_params) [688]
                0.00    0.00      13/23          parse_convolutional(list*, size_params) [18]
[67]     0.0    0.00    0.00      23         option_find_str [67]
                0.00    0.00      23/801         option_find [48]
-----------------------------------------------
                0.00    0.00      18/18          draw_detections_v3 [38]
[68]     0.0    0.00    0.00      18         get_color [68]
-----------------------------------------------
                0.00    0.00       1/14          init_cpu [357]
                0.00    0.00      13/14          gemm_cpu [7]
[69]     0.0    0.00    0.00      14         is_avx [69]
-----------------------------------------------
                0.00    0.00      13/13          parse_convolutional(list*, size_params) [18]
[70]     0.0    0.00    0.00      13         get_activation [70]
-----------------------------------------------
                0.00    0.00      13/13          make_convolutional_layer [16]
[71]     0.0    0.00    0.00      13         get_convolutional_workspace_size [71]
                0.00    0.00      13/13          get_workspace_size32(layer) [679]
                0.00    0.00      13/13          get_workspace_size16(layer) [678]
-----------------------------------------------
                0.00    0.00      13/13          gemm_cpu [7]
[72]     0.0    0.00    0.00      13         is_fma_avx2 [72]
-----------------------------------------------
                0.00    0.00      12/12          forward_yolo_layer [88]
[73]     0.0    0.00    0.00      12         activate_array [73]
-----------------------------------------------
                0.00    0.00      12/12          run_detector(int, char**) [2]
[74]     0.0    0.00    0.00      12         find_arg [74]
-----------------------------------------------
                0.00    0.00      11/11          fuse_conv_batchnorm [23]
[75]     0.0    0.00    0.00      11         free_convolutional_batchnorm [75]
-----------------------------------------------
                0.00    0.00      10/10          run_detector(int, char**) [2]
[76]     0.0    0.00    0.00      10         find_int_arg [76]
-----------------------------------------------
                0.00    0.00       3/9           parse_net_options(list*, network*) [697]
                0.00    0.00       6/9           parse_yolo(list*, size_params) [688]
[77]     0.0    0.00    0.00       9         option_find_float [77]
                0.00    0.00       9/801         option_find [48]
-----------------------------------------------
                0.00    0.00       6/6           tile_images(image, image, int) [673]
[78]     0.0    0.00    0.00       6         copy_image [78]
                0.00    0.00       6/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       6/6           draw_box_width [80]
[79]     0.0    0.00    0.00       6         draw_box [79]
-----------------------------------------------
                0.00    0.00       6/6           draw_detections_v3 [38]
[80]     0.0    0.00    0.00       6         draw_box_width [80]
                0.00    0.00       6/6           draw_box [79]
-----------------------------------------------
                0.00    0.00       6/6           run_detector(int, char**) [2]
[81]     0.0    0.00    0.00       6         find_char_arg [81]
-----------------------------------------------
                0.00    0.00       6/6           parse_maxpool(list*, size_params) [684]
[82]     0.0    0.00    0.00       6         make_maxpool_layer [82]
                0.00    0.00       6/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       6/6           parse_yolo(list*, size_params) [688]
[83]     0.0    0.00    0.00       6         option_find_str_quiet [83]
                0.00    0.00       6/801         option_find [48]
-----------------------------------------------
                0.00    0.00       6/6           forward_yolo_layer [88]
[84]     0.0    0.00    0.00       6         scal_add_cpu [84]
-----------------------------------------------
                0.00    0.00       3/3           run_detector(int, char**) [2]
[85]     0.0    0.00    0.00       3         find_float_arg [85]
-----------------------------------------------
                0.00    0.00       1/3           get_labels_custom [105]
                0.00    0.00       1/3           parse_network_cfg_custom [17]
                0.00    0.00       1/3           test_detector [1]
[86]     0.0    0.00    0.00       3         free_list [86]
                0.00    0.00       3/3           free_node(node*) [686]
-----------------------------------------------
                0.00    0.00       2/2           get_yolo_detections [91]
[87]     0.0    0.00    0.00       2         correct_yolo_boxes [87]
-----------------------------------------------
                0.00    0.00       2/2           forward_network [3]
[88]     0.0    0.00    0.00       2         forward_yolo_layer [88]
                0.00    0.00      12/12          activate_array [73]
                0.00    0.00       6/6           scal_add_cpu [84]
-----------------------------------------------
                0.00    0.00       1/2           network_predict [4]
                0.00    0.00       1/2           parse_network_cfg_custom [17]
[89]     0.0    0.00    0.00       2         get_network_output [89]
-----------------------------------------------
                0.00    0.00       2/2           test_detector [1]
[90]     0.0    0.00    0.00       2         get_time_point [90]
-----------------------------------------------
                0.00    0.00       2/2           fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [699]
[91]     0.0    0.00    0.00       2         get_yolo_detections [91]
                0.00    0.00      13/13          get_yolo_box(float*, float*, int, int, int, int, int, int, int, int, int, int) [677]
                0.00    0.00       2/2           correct_yolo_boxes [87]
-----------------------------------------------
                0.00    0.00       2/2           parse_route(list*, size_params) [689]
[92]     0.0    0.00    0.00       2         make_route_layer [92]
                0.00    0.00       4/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       2/2           parse_yolo(list*, size_params) [688]
[93]     0.0    0.00    0.00       2         make_yolo_layer [93]
                0.00    0.00      14/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       2/2           num_detections(network*, float) [695]
[94]     0.0    0.00    0.00       2         yolo_num_detections [94]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[95]     0.0    0.00    0.00       1         calculate_binary_weights [95]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[96]     0.0    0.00    0.00       1         destroy_all_windows_cv [96]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[97]     0.0    0.00    0.00       1         do_nms_sort [97]
                0.00    0.00      92/92          box_iou [57]
-----------------------------------------------
                0.00    0.00       1/1           forward_network [3]
[98]     0.0    0.00    0.00       1         forward_upsample_layer [98]
                0.00    0.00       1/90          fill_cpu [58]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[99]     0.0    0.00    0.00       1         free_detections [99]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[100]    0.0    0.00    0.00       1         free_list_contents_kvp [100]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[101]    0.0    0.00    0.00       1         free_network [101]
                0.00    0.00      24/24          free_layer [64]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[102]    0.0    0.00    0.00       1         free_ptrs [102]
-----------------------------------------------
                0.00    0.00       1/1           draw_detections_v3 [38]
[103]    0.0    0.00    0.00       1         get_actual_detections [103]
                0.00    0.00       1/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       1/1           load_weights_upto [111]
[104]    0.0    0.00    0.00       1         get_current_batch [104]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[105]    0.0    0.00    0.00       1         get_labels_custom [105]
                0.00    0.00       1/1           get_paths [108]
                0.00    0.00       1/1           list_to_array [109]
                0.00    0.00       1/3           free_list [86]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[106]    0.0    0.00    0.00       1         get_network_boxes [106]
                0.00    0.00       1/1           make_network_boxes [113]
                0.00    0.00       1/1           fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [699]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [17]
[107]    0.0    0.00    0.00       1         get_network_output_size [107]
-----------------------------------------------
                0.00    0.00       1/1           get_labels_custom [105]
[108]    0.0    0.00    0.00       1         get_paths [108]
                0.00    0.00      81/273         fgetl [51]
                0.00    0.00      80/235         list_insert [52]
                0.00    0.00       1/28          make_list [61]
-----------------------------------------------
                0.00    0.00       1/1           get_labels_custom [105]
[109]    0.0    0.00    0.00       1         list_to_array [109]
                0.00    0.00       1/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[110]    0.0    0.00    0.00       1         load_weights [110]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[111]    0.0    0.00    0.00       1         load_weights_upto [111]
                0.00    0.00      13/13          load_convolutional_weights(layer, _IO_FILE*) [680]
                0.00    0.00       1/1           get_current_batch [104]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [17]
[112]    0.0    0.00    0.00       1         make_network [112]
                0.00    0.00      10/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       1/1           get_network_boxes [106]
[113]    0.0    0.00    0.00       1         make_network_boxes [113]
                0.00    0.00      14/996         xcalloc_location [44]
                0.00    0.00       1/1           num_detections(network*, float) [695]
-----------------------------------------------
                0.00    0.00       1/1           parse_upsample(list*, size_params, network) [696]
[114]    0.0    0.00    0.00       1         make_upsample_layer [114]
                0.00    0.00       2/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[115]    0.0    0.00    0.00       1         read_data_cfg [115]
                0.00    0.00       9/273         fgetl [51]
                0.00    0.00       8/190         strip [53]
                0.00    0.00       6/130         read_option [56]
                0.00    0.00       1/28          make_list [61]
-----------------------------------------------
                0.00    0.00       1/1           forward_network [3]
[116]    0.0    0.00    0.00       1         upsample_cpu [116]
-----------------------------------------------
                0.00    0.00       1/1           test_detector [1]
[117]    0.0    0.00    0.00       1         wait_until_press_key_cv [117]
-----------------------------------------------
                0.00    0.00   20572/243462      stbiw__jpg_writeBits(stbi__write_context*, int*, int*, unsigned short const*) [659]
                0.00    0.00  222890/243462      stbi__parse_zlib(stbi__zbuf*, int) [19]
[658]    0.0    0.00    0.00  243462         stbi__stdio_write(void*, void*, int) [658]
-----------------------------------------------
                0.00    0.00   74746/74746       stbi__parse_zlib(stbi__zbuf*, int) [19]
[659]    0.0    0.00    0.00   74746         stbiw__jpg_writeBits(stbi__write_context*, int*, int*, unsigned short const*) [659]
                0.00    0.00   20572/243462      stbi__stdio_write(void*, void*, int) [658]
-----------------------------------------------
                0.00    0.00       1/47136       stbi__decode_jpeg_image(stbi__jpeg*) [30]
                0.00    0.00       3/47136       stbi__decode_jpeg_header(stbi__jpeg*, int) [701]
                0.00    0.00      12/47136       stbi__process_marker(stbi__jpeg*, int) [681]
                0.00    0.00   47120/47136       stbi__parse_png_file(stbi__png*, int, int) [21]
[660]    0.0    0.00    0.00   47136         stbi__get16be(stbi__context*) [660]
                0.00    0.00    1969/4397        stbi__stdio_read(void*, char*, int) [662]
-----------------------------------------------
                0.00    0.00       4/9147        stbi__process_marker(stbi__jpeg*, int) [681]
                0.00    0.00       5/9147        stbi__decode_jpeg_image(stbi__jpeg*) [30]
                0.00    0.00      18/9147        stbi__decode_jpeg_header(stbi__jpeg*, int) [701]
                0.00    0.00    9120/9147        stbi__parse_png_file(stbi__png*, int, int) [21]
[661]    0.0    0.00    0.00    9147         stbi__get8(stbi__context*) [661]
                0.00    0.00       4/4397        stbi__stdio_read(void*, char*, int) [662]
-----------------------------------------------
                0.00    0.00       4/4397        stbi__get8(stbi__context*) [661]
                0.00    0.00       4/4397        stbi__process_marker(stbi__jpeg*, int) [681]
                0.00    0.00     449/4397        stbi__getn(stbi__context*, unsigned char*, int) [666]
                0.00    0.00     761/4397        stbi_load_from_file [14]
                0.00    0.00    1210/4397        stbi__grow_buffer_unsafe(stbi__jpeg*) [33]
                0.00    0.00    1969/4397        stbi__get16be(stbi__context*) [660]
[662]    0.0    0.00    0.00    4397         stbi__stdio_read(void*, char*, int) [662]
-----------------------------------------------
                0.00    0.00    1152/1152        stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
[663]    0.0    0.00    0.00    1152         stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [663]
-----------------------------------------------
                                 760             stbi__malloc_mad3(int, int, int, int) [664]
                0.00    0.00       1/761         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
                0.00    0.00     760/761         stbi__parse_png_file(stbi__png*, int, int) [21]
[664]    0.0    0.00    0.00     761+760     stbi__malloc_mad3(int, int, int, int) [664]
                                 760             stbi__malloc_mad3(int, int, int, int) [664]
-----------------------------------------------
                0.00    0.00       1/761         stbi__decode_jpeg_header(stbi__jpeg*, int) [701]
                0.00    0.00     760/761         stbiw__zlib_flushf(unsigned char*, unsigned int*, int*) [667]
[665]    0.0    0.00    0.00     761         stbi__mad3sizes_valid(int, int, int, int) [665]
-----------------------------------------------
                0.00    0.00     760/760         stbi__parse_png_file(stbi__png*, int, int) [21]
[666]    0.0    0.00    0.00     760         stbi__getn(stbi__context*, unsigned char*, int) [666]
                0.00    0.00     449/4397        stbi__stdio_read(void*, char*, int) [662]
-----------------------------------------------
                0.00    0.00     760/760         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
[667]    0.0    0.00    0.00     760         stbiw__zlib_flushf(unsigned char*, unsigned int*, int*) [667]
                0.00    0.00     760/761         stbi__mad3sizes_valid(int, int, int, int) [665]
-----------------------------------------------
                0.00    0.00     576/576         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [15]
[668]    0.0    0.00    0.00     576         resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int) [668]
-----------------------------------------------
                0.00    0.00     368/368         box_intersection(box, box) [671]
[669]    0.0    0.00    0.00     368         overlap(float, float, float, float) [669]
-----------------------------------------------
                0.00    0.00       4/225         stbi__process_marker(stbi__jpeg*, int) [681]
                0.00    0.00     221/225         stbi__parse_png_file(stbi__png*, int, int) [21]
[670]    0.0    0.00    0.00     225         stbi__stdio_skip(void*, int) [670]
-----------------------------------------------
                0.00    0.00      92/184         box_union(box, box) [672]
                0.00    0.00      92/184         box_iou [57]
[671]    0.0    0.00    0.00     184         box_intersection(box, box) [671]
                0.00    0.00     368/368         overlap(float, float, float, float) [669]
-----------------------------------------------
                0.00    0.00      92/92          box_iou [57]
[672]    0.0    0.00    0.00      92         box_union(box, box) [672]
                0.00    0.00      92/184         box_intersection(box, box) [671]
-----------------------------------------------
                0.00    0.00      82/82          get_label_v3(image**, char*, int) [683]
[673]    0.0    0.00    0.00      82         tile_images(image, image, int) [673]
                0.00    0.00      76/845         make_image [47]
                0.00    0.00      76/90          fill_cpu [58]
                0.00    0.00      76/76          embed_image [59]
                0.00    0.00      76/76          composite_image(image, image, int, int) [674]
                0.00    0.00       6/6           copy_image [78]
-----------------------------------------------
                0.00    0.00      76/76          tile_images(image, image, int) [673]
[674]    0.0    0.00    0.00      76         composite_image(image, image, int, int) [674]
-----------------------------------------------
                0.00    0.00      25/25          parse_network_cfg_custom [17]
[675]    0.0    0.00    0.00      25         free_section(section*) [675]
-----------------------------------------------
                0.00    0.00      24/24          parse_network_cfg_custom [17]
[676]    0.0    0.00    0.00      24         string_to_layer_type(char*) [676]
-----------------------------------------------
                0.00    0.00      13/13          get_yolo_detections [91]
[677]    0.0    0.00    0.00      13         get_yolo_box(float*, float*, int, int, int, int, int, int, int, int, int, int) [677]
-----------------------------------------------
                0.00    0.00      13/13          get_convolutional_workspace_size [71]
[678]    0.0    0.00    0.00      13         get_workspace_size16(layer) [678]
-----------------------------------------------
                0.00    0.00      13/13          get_convolutional_workspace_size [71]
[679]    0.0    0.00    0.00      13         get_workspace_size32(layer) [679]
-----------------------------------------------
                0.00    0.00      13/13          load_weights_upto [111]
[680]    0.0    0.00    0.00      13         load_convolutional_weights(layer, _IO_FILE*) [680]
-----------------------------------------------
                0.00    0.00       4/11          stbi__decode_jpeg_header(stbi__jpeg*, int) [701]
                0.00    0.00       7/11          stbi__decode_jpeg_image(stbi__jpeg*) [30]
[681]    0.0    0.00    0.00      11         stbi__process_marker(stbi__jpeg*, int) [681]
                0.00    0.00      12/47136       stbi__get16be(stbi__context*) [660]
                0.00    0.00       4/4           stbi__build_huffman(stbi__huffman*, int*) [685]
                0.00    0.00       4/4397        stbi__stdio_read(void*, char*, int) [662]
                0.00    0.00       4/225         stbi__stdio_skip(void*, int) [670]
                0.00    0.00       4/9147        stbi__get8(stbi__context*) [661]
-----------------------------------------------
                0.00    0.00       6/6           get_label_v3(image**, char*, int) [683]
[682]    0.0    0.00    0.00       6         border_image(image, int) [682]
                0.00    0.00       6/845         make_image [47]
-----------------------------------------------
                0.00    0.00       6/6           draw_detections_v3 [38]
[683]    0.0    0.00    0.00       6         get_label_v3(image**, char*, int) [683]
                0.00    0.00      88/857         free_image [45]
                0.00    0.00      82/82          tile_images(image, image, int) [673]
                0.00    0.00       6/851         make_empty_image [46]
                0.00    0.00       6/6           border_image(image, int) [682]
-----------------------------------------------
                0.00    0.00       6/6           parse_network_cfg_custom [17]
[684]    0.0    0.00    0.00       6         parse_maxpool(list*, size_params) [684]
                0.00    0.00      42/557         option_find_int_quiet [50]
                0.00    0.00      12/59          option_find_int [60]
                0.00    0.00       6/6           make_maxpool_layer [82]
-----------------------------------------------
                0.00    0.00       4/4           stbi__process_marker(stbi__jpeg*, int) [681]
[685]    0.0    0.00    0.00       4         stbi__build_huffman(stbi__huffman*, int*) [685]
-----------------------------------------------
                0.00    0.00       3/3           free_list [86]
[686]    0.0    0.00    0.00       3         free_node(node*) [686]
-----------------------------------------------
                0.00    0.00       3/3           stbi__decode_jpeg_header(stbi__jpeg*, int) [701]
[687]    0.0    0.00    0.00       3         stbi__malloc_mad2(int, int, int) [687]
-----------------------------------------------
                0.00    0.00       2/2           parse_network_cfg_custom [17]
[688]    0.0    0.00    0.00       2         parse_yolo(list*, size_params) [688]
                0.00    0.00      24/142         option_find_float_quiet [54]
                0.00    0.00      20/557         option_find_int_quiet [50]
                0.00    0.00       8/23          option_find_str [67]
                0.00    0.00       6/6           option_find_str_quiet [83]
                0.00    0.00       6/9           option_find_float [77]
                0.00    0.00       4/59          option_find_int [60]
                0.00    0.00       2/2           parse_yolo_mask(char*, int*) [690]
                0.00    0.00       2/2           make_yolo_layer [93]
                0.00    0.00       2/2           get_classes_multipliers(char*, int, float) [691]
-----------------------------------------------
                0.00    0.00       2/2           parse_network_cfg_custom [17]
[689]    0.0    0.00    0.00       2         parse_route(list*, size_params) [689]
                0.00    0.00       8/557         option_find_int_quiet [50]
                0.00    0.00       4/996         xcalloc_location [44]
                0.00    0.00       2/801         option_find [48]
                0.00    0.00       2/2           make_route_layer [92]
-----------------------------------------------
                0.00    0.00       2/2           parse_yolo(list*, size_params) [688]
[690]    0.0    0.00    0.00       2         parse_yolo_mask(char*, int*) [690]
                0.00    0.00       2/996         xcalloc_location [44]
-----------------------------------------------
                0.00    0.00       2/2           parse_yolo(list*, size_params) [688]
[691]    0.0    0.00    0.00       2         get_classes_multipliers(char*, int, float) [691]
-----------------------------------------------
                0.00    0.00       2/2           __libc_csu_init [1089]
[692]    0.0    0.00    0.00       2         stbi__hdr_info(stbi__context*, int*, int*, int*) [692]
-----------------------------------------------
                0.00    0.00       1/1           parse_net_options(list*, network*) [697]
[693]    0.0    0.00    0.00       1         get_policy(char*) [693]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [17]
[694]    0.0    0.00    0.00       1         is_network(section*) [694]
-----------------------------------------------
                0.00    0.00       1/1           make_network_boxes [113]
[695]    0.0    0.00    0.00       1         num_detections(network*, float) [695]
                0.00    0.00       2/2           yolo_num_detections [94]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [17]
[696]    0.0    0.00    0.00       1         parse_upsample(list*, size_params, network) [696]
                0.00    0.00       1/59          option_find_int [60]
                0.00    0.00       1/1           make_upsample_layer [114]
                0.00    0.00       1/142         option_find_float_quiet [54]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [17]
[697]    0.0    0.00    0.00       1         parse_net_options(list*, network*) [697]
                0.00    0.00      33/557         option_find_int_quiet [50]
                0.00    0.00      16/142         option_find_float_quiet [54]
                0.00    0.00       3/59          option_find_int [60]
                0.00    0.00       3/9           option_find_float [77]
                0.00    0.00       3/801         option_find [48]
                0.00    0.00       3/996         xcalloc_location [44]
                0.00    0.00       1/23          option_find_str [67]
                0.00    0.00       1/1           get_policy(char*) [693]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [17]
[698]    0.0    0.00    0.00       1         set_train_only_bn(network) [698]
-----------------------------------------------
                0.00    0.00       1/1           get_network_boxes [106]
[699]    0.0    0.00    0.00       1         fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [699]
                0.00    0.00       2/2           get_yolo_detections [91]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [17]
[700]    0.0    0.00    0.00       1         read_cfg(char*) [700]
                0.00    0.00     183/273         fgetl [51]
                0.00    0.00     182/190         strip [53]
                0.00    0.00     124/130         read_option [56]
                0.00    0.00      26/28          make_list [61]
                0.00    0.00      25/691         xmalloc_location [49]
                0.00    0.00      25/235         list_insert [52]
-----------------------------------------------
                0.00    0.00       1/1           stbi__decode_jpeg_image(stbi__jpeg*) [30]
[701]    0.0    0.00    0.00       1         stbi__decode_jpeg_header(stbi__jpeg*, int) [701]
                0.00    0.00      18/9147        stbi__get8(stbi__context*) [661]
                0.00    0.00       4/11          stbi__process_marker(stbi__jpeg*, int) [681]
                0.00    0.00       3/47136       stbi__get16be(stbi__context*) [660]
                0.00    0.00       3/3           stbi__malloc_mad2(int, int, int) [687]
                0.00    0.00       1/761         stbi__mad3sizes_valid(int, int, int, int) [665]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [693] get_policy(char*)     [701] stbi__decode_jpeg_header(stbi__jpeg*, int) [108] get_paths
 [694] is_network(section*)   [33] stbi__grow_buffer_unsafe(stbi__jpeg*) [90] get_time_point
 [688] parse_yolo(list*, size_params) [42] stbi__compute_huffman_codes(stbi__zbuf*) [91] get_yolo_detections
 [689] parse_route(list*, size_params) [73] activate_array [26] im2col_cpu_ext
 [673] tile_images(image, image, int) [28] activate_array_cpu_custom [69] is_avx
 [682] border_image(image, int) [29] add_bias             [72] is_fma_avx2
 [675] free_section(section*) [57] box_iou                [52] list_insert
 [683] get_label_v3(image**, char*, int) [95] calculate_binary_weights [109] list_to_array
 [677] get_yolo_box(float*, float*, int, int, int, int, int, int, int, int, int, int) [62] convolutional_out_height [12] load_alphabet
 [684] parse_maxpool(list*, size_params) [63] convolutional_out_width [9] load_image
  [10] load_image_stb(char*, int) [36] copy_cpu           [11] load_image_color
 [695] num_detections(network*, float) [78] copy_image   [110] load_weights
 [696] parse_upsample(list*, size_params, network) [87] correct_yolo_boxes [111] load_weights_upto
 [674] composite_image(image, image, int, int) [96] destroy_all_windows_cv [16] make_convolutional_layer
 [690] parse_yolo_mask(char*, int*) [97] do_nms_sort      [46] make_empty_image
 [671] box_intersection(box, box) [79] draw_box           [47] make_image
 [697] parse_net_options(list*, network*) [80] draw_box_width [61] make_list
 [698] set_train_only_bn(network) [38] draw_detections_v3 [82] make_maxpool_layer
 [699] fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [35] draw_weighted_label [112] make_network
  [32] save_image_options(image, char const*, IMTYPE, int) [59] embed_image [113] make_network_boxes
  [18] parse_convolutional(list*, size_params) [51] fgetl [92] make_route_layer
 [678] get_workspace_size16(layer) [58] fill_cpu         [114] make_upsample_layer
 [679] get_workspace_size32(layer) [74] find_arg          [93] make_yolo_layer
 [676] string_to_layer_type(char*) [81] find_char_arg      [4] network_predict
 [691] get_classes_multipliers(char*, int, float) [85] find_float_arg [48] option_find
 [680] load_convolutional_weights(layer, _IO_FILE*) [76] find_int_arg [77] option_find_float
   [8] gemm_nn(int, int, int, float, float*, int, float*, int, float*, int) [5] forward_convolutional_layer [54] option_find_float_quiet
 [669] overlap(float, float, float, float) [24] forward_maxpool_layer [60] option_find_int
 [700] read_cfg(char*)        [25] forward_maxpool_layer_avx [50] option_find_int_quiet
 [672] box_union(box, box)     [3] forward_network        [67] option_find_str
 [686] free_node(node*)       [37] forward_route_layer    [83] option_find_str_quiet
 [661] stbi__get8(stbi__context*) [98] forward_upsample_layer [55] option_insert
 [666] stbi__getn(stbi__context*, unsigned char*, int) [88] forward_yolo_layer [66] option_unused
 [660] stbi__get16be(stbi__context*) [75] free_convolutional_batchnorm [17] parse_network_cfg_custom
 [668] resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int) [99] free_detections [22] rand_uniform
 [692] stbi__hdr_info(stbi__context*, int*, int*, int*) [45] free_image [115] read_data_cfg
  [15] stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [64] free_layer [56] read_option
  [39] stbi__idct_block(unsigned char*, int, short*) [65] free_layer_custom [27] resize_image
  [19] stbi__parse_zlib(stbi__zbuf*, int) [86] free_list  [31] save_image
 [662] stbi__stdio_read(void*, char*, int) [100] free_list_contents_kvp [84] scal_add_cpu
 [670] stbi__stdio_skip(void*, int) [101] free_network    [34] show_image
 [687] stbi__malloc_mad2(int, int, int) [102] free_ptrs   [13] stbi_load
 [664] stbi__malloc_mad3(int, int, int, int) [23] fuse_conv_batchnorm [14] stbi_load_from_file
 [658] stbi__stdio_write(void*, void*, int) [6] gemm      [43] stbi_write_jpg
 [667] stbiw__zlib_flushf(unsigned char*, unsigned int*, int*) [7] gemm_cpu [20] stbi_zlib_decode_malloc_guesssize_headerflag
 [685] stbi__build_huffman(stbi__huffman*, int*) [70] get_activation [53] strip
  [21] stbi__parse_png_file(stbi__png*, int, int) [103] get_actual_detections [1] test_detector
 [681] stbi__process_marker(stbi__jpeg*, int) [68] get_color [116] upsample_cpu
  [41] stbi__zbuild_huffman(stbi__zhuffman*, unsigned char const*, int) [71] get_convolutional_workspace_size [117] wait_until_press_key_cv
 [659] stbiw__jpg_writeBits(stbi__write_context*, int*, int*, unsigned short const*) [104] get_current_batch [44] xcalloc_location
 [665] stbi__mad3sizes_valid(int, int, int, int) [105] get_labels_custom [49] xmalloc_location
  [40] stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [106] get_network_boxes [94] yolo_num_detections
 [663] stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [89] get_network_output
  [30] stbi__decode_jpeg_image(stbi__jpeg*) [107] get_network_output_size
