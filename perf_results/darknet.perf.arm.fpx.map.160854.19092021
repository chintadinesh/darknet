Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 96.20     20.48    20.48     3694     0.01     0.01  gemm_nn(int, int, int, int, float*, int, float*, int, float*, int)
  0.94     20.68     0.20  8845488     0.00     0.00  rand_uniform
  0.61     20.81     0.13        1     0.13     0.13  fuse_conv_batchnorm
  0.56     20.93     0.12        9     0.01     0.01  im2col_cpu_ext
  0.47     21.03     0.10       13     0.01     0.02  make_convolutional_layer
  0.42     21.12     0.09        6     0.01     0.01  forward_maxpool_layer_avx
  0.19     21.16     0.04        1     0.04     0.04  resize_image
  0.14     21.19     0.03       13     0.00     0.00  add_bias
  0.09     21.21     0.02    16339     0.00     0.00  stbi__grow_buffer_unsafe(stbi__jpeg*)
  0.09     21.23     0.02       13     0.00     0.00  activate_array_cpu_custom
  0.09     21.25     0.02        1     0.02     0.06  load_image_stb(char*, int)
  0.05     21.26     0.01    13824     0.00     0.00  stbi__idct_block(unsigned char*, int, short*)
  0.05     21.27     0.01      576     0.00     0.00  stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int)
  0.05     21.28     0.01       12     0.00     0.00  activate_array
  0.05     21.29     0.01        1     0.01     0.01  upsample_cpu
  0.00     21.29     0.00     1219     0.00     0.00  stbi__stdio_read(void*, char*, int)
  0.00     21.29     0.00     1152     0.00     0.00  stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int)
  0.00     21.29     0.00      803     0.00     0.00  option_find
  0.00     21.29     0.00      696     0.00     0.00  xmalloc_location
  0.00     21.29     0.00      576     0.00     0.00  resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int)
  0.00     21.29     0.00      557     0.00     0.00  option_find_int_quiet
  0.00     21.29     0.00      275     0.00     0.00  fgetl
  0.00     21.29     0.00      236     0.00     0.00  list_insert
  0.00     21.29     0.00      220     0.00     0.00  xcalloc_location
  0.00     21.29     0.00      190     0.00     0.00  strip
  0.00     21.29     0.00      142     0.00     0.00  option_find_float_quiet
  0.00     21.29     0.00      130     0.00     0.00  option_insert
  0.00     21.29     0.00      130     0.00     0.00  read_option
  0.00     21.29     0.00       59     0.00     0.00  option_find_int
  0.00     21.29     0.00       29     0.00     0.00  make_list
  0.00     21.29     0.00       27     0.00     0.00  stbi__get8(stbi__context*)
  0.00     21.29     0.00       26     0.00     0.00  convolutional_out_height
  0.00     21.29     0.00       26     0.00     0.00  convolutional_out_width
  0.00     21.29     0.00       25     0.00     0.00  free_section(section*)
  0.00     21.29     0.00       25     0.00     0.00  option_find_str
  0.00     21.29     0.00       24     0.00     0.00  string_to_layer_type(char*)
  0.00     21.29     0.00       24     0.00     0.00  free_layer
  0.00     21.29     0.00       24     0.00     0.00  free_layer_custom
  0.00     21.29     0.00       24     0.00     0.00  option_unused
  0.00     21.29     0.00       16     0.00     0.00  stbi__get16be(stbi__context*)
  0.00     21.29     0.00       14     0.00     0.00  fill_cpu
  0.00     21.29     0.00       14     0.00     0.00  is_avx
  0.00     21.29     0.00       13     0.00     0.02  parse_convolutional(list*, size_params)
  0.00     21.29     0.00       13     0.00     0.00  get_workspace_size16(layer)
  0.00     21.29     0.00       13     0.00     0.00  get_workspace_size32(layer)
  0.00     21.29     0.00       13     0.00     0.00  load_convolutional_weights(layer, _IO_FILE*)
  0.00     21.29     0.00       13     0.00     1.59  forward_convolutional_layer
  0.00     21.29     0.00       13     0.00     1.58  gemm
  0.00     21.29     0.00       13     0.00     1.58  gemm_cpu
  0.00     21.29     0.00       13     0.00     0.00  get_activation
  0.00     21.29     0.00       13     0.00     0.00  get_convolutional_workspace_size
  0.00     21.29     0.00       13     0.00     0.00  is_fma_avx2
  0.00     21.29     0.00       12     0.00     0.00  find_replace_extension(char*, char*, char*, char*)
  0.00     21.29     0.00       12     0.00     0.00  find_arg
  0.00     21.29     0.00       11     0.00     0.00  stbi__process_marker(stbi__jpeg*, int)
  0.00     21.29     0.00       11     0.00     0.00  free_convolutional_batchnorm
  0.00     21.29     0.00       10     0.00     0.00  find_int_arg
  0.00     21.29     0.00       10     0.00     0.00  find_replace
  0.00     21.29     0.00        9     0.00     0.00  option_find_float
  0.00     21.29     0.00        6     0.00     0.00  parse_maxpool(list*, size_params)
  0.00     21.29     0.00        6     0.00     0.00  find_char_arg
  0.00     21.29     0.00        6     0.00     0.01  forward_maxpool_layer
  0.00     21.29     0.00        6     0.00     0.00  make_maxpool_layer
  0.00     21.29     0.00        6     0.00     0.00  option_find_str_quiet
  0.00     21.29     0.00        6     0.00     0.00  scal_add_cpu
  0.00     21.29     0.00        4     0.00     0.00  stbi__stdio_skip(void*, int)
  0.00     21.29     0.00        4     0.00     0.00  stbi__build_huffman(stbi__huffman*, int*)
  0.00     21.29     0.00        4     0.00     0.00  xrealloc_location
  0.00     21.29     0.00        3     0.00     0.00  free_node(node*)
  0.00     21.29     0.00        3     0.00     0.00  stbi__malloc_mad2(int, int, int)
  0.00     21.29     0.00        3     0.00     0.00  copy_cpu
  0.00     21.29     0.00        3     0.00     0.00  find_float_arg
  0.00     21.29     0.00        3     0.00     0.00  free_image
  0.00     21.29     0.00        3     0.00     0.00  free_list
  0.00     21.29     0.00        3     0.00     0.00  make_empty_image
  0.00     21.29     0.00        3     0.00     0.00  make_image
  0.00     21.29     0.00        2     0.00     0.00  parse_yolo(list*, size_params)
  0.00     21.29     0.00        2     0.00     0.00  parse_route(list*, size_params)
  0.00     21.29     0.00        2     0.00     0.00  parse_yolo_mask(char*, int*)
  0.00     21.29     0.00        2     0.00     0.00  get_classes_multipliers(char*, int, float)
  0.00     21.29     0.00        2     0.00     0.00  stbi__hdr_info(stbi__context*, int*, int*, int*)
  0.00     21.29     0.00        2     0.00     0.00  correct_yolo_boxes
  0.00     21.29     0.00        2     0.00     0.00  forward_route_layer
  0.00     21.29     0.00        2     0.00     0.01  forward_yolo_layer
  0.00     21.29     0.00        2     0.00     0.00  get_network_output
  0.00     21.29     0.00        2     0.00     0.00  get_paths
  0.00     21.29     0.00        2     0.00     0.00  get_yolo_detections
  0.00     21.29     0.00        2     0.00     0.00  list_to_array
  0.00     21.29     0.00        2     0.00     0.00  make_route_layer
  0.00     21.29     0.00        2     0.00     0.00  make_yolo_layer
  0.00     21.29     0.00        2     0.00     0.00  yolo_num_detections
  0.00     21.29     0.00        1     0.00     0.00  get_policy(char*)
  0.00     21.29     0.00        1     0.00     0.00  is_network(section*)
  0.00     21.29     0.00        1     0.00     0.00  num_detections(network*, float)
  0.00     21.29     0.00        1     0.00     0.00  parse_upsample(list*, size_params, network)
  0.00     21.29     0.00        1     0.00     0.00  parse_net_options(list*, network*)
  0.00     21.29     0.00        1     0.00     0.00  set_train_only_bn(network)
  0.00     21.29     0.00        1     0.00     0.00  fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int)
  0.00     21.29     0.00        1     0.00     0.00  trim(char*)
  0.00     21.29     0.00        1     0.00     0.00  read_cfg(char*)
  0.00     21.29     0.00        1     0.00     0.04  stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int)
  0.00     21.29     0.00        1     0.00     0.00  stbi__malloc_mad3(int, int, int, int)
  0.00     21.29     0.00        1     0.00     0.00  stbi__mad3sizes_valid(int, int, int, int)
  0.00     21.29     0.00        1     0.00     0.03  stbi__decode_jpeg_image(stbi__jpeg*)
  0.00     21.29     0.00        1     0.00     0.00  stbi__decode_jpeg_header(stbi__jpeg*, int)
  0.00     21.29     0.00        1     0.00     0.00  basecfg
  0.00     21.29     0.00        1     0.00     0.00  calculate_binary_weights
  0.00     21.29     0.00        1     0.00     0.00  copy_string
  0.00     21.29     0.00        1     0.00     0.00  custom_hash
  0.00     21.29     0.00        1     0.00     0.00  do_nms_sort
  0.00     21.29     0.00        1     0.00    20.76  forward_network
  0.00     21.29     0.00        1     0.00     0.00  forward_upsample_layer
  0.00     21.29     0.00        1     0.00     0.00  free_detections
  0.00     21.29     0.00        1     0.00     0.00  free_list_contents_kvp
  0.00     21.29     0.00        1     0.00     0.00  free_network
  0.00     21.29     0.00        1     0.00     0.00  free_ptrs
  0.00     21.29     0.00        1     0.00     0.00  get_current_batch
  0.00     21.29     0.00        1     0.00     0.00  get_labels_custom
  0.00     21.29     0.00        1     0.00     0.00  get_network_boxes
  0.00     21.29     0.00        1     0.00     0.00  get_network_output_size
  0.00     21.29     0.00        1     0.00     0.00  load_data_in_thread
  0.00     21.29     0.00        1     0.00     0.06  load_image
  0.00     21.29     0.00        1     0.00     0.00  load_weights
  0.00     21.29     0.00        1     0.00     0.00  load_weights_upto
  0.00     21.29     0.00        1     0.00     0.00  make_network
  0.00     21.29     0.00        1     0.00     0.00  make_network_boxes
  0.00     21.29     0.00        1     0.00     0.00  make_upsample_layer
  0.00     21.29     0.00        1     0.00    20.76  network_predict
  0.00     21.29     0.00        1     0.00     0.30  parse_network_cfg_custom
  0.00     21.29     0.00        1     0.00     0.00  read_boxes
  0.00     21.29     0.00        1     0.00     0.00  read_data_cfg
  0.00     21.29     0.00        1     0.00     0.00  replace_image_to_label
  0.00     21.29     0.00        1     0.00     0.04  stbi_load
  0.00     21.29     0.00        1     0.00     0.04  stbi_load_from_file
  0.00     21.29     0.00        1     0.00    21.19  validate_detector_map

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.05% of 21.29 seconds

index % time    self  children    called     name
                0.00   21.19       1/1           run_detector(int, char**) [2]
[1]     99.5    0.00   21.19       1         validate_detector_map [1]
                0.00   20.76       1/1           network_predict [4]
                0.00    0.30       1/1           parse_network_cfg_custom [10]
                0.13    0.00       1/1           fuse_conv_batchnorm [13]
                0.00    0.00      93/220         xcalloc_location [38]
                0.00    0.00       3/25          option_find_str [47]
                0.00    0.00       2/3           free_image [68]
                0.00    0.00       1/1           read_data_cfg [102]
                0.00    0.00       1/1           get_labels_custom [92]
                0.00    0.00       1/2           get_paths [75]
                0.00    0.00       1/2           list_to_array [77]
                0.00    0.00       1/1           load_data_in_thread [95]
                0.00    0.00       1/1           basecfg [81]
                0.00    0.00       1/1           get_network_boxes [93]
                0.00    0.00       1/1           do_nms_sort [85]
                0.00    0.00       1/1           replace_image_to_label [103]
                0.00    0.00       1/1           read_boxes [101]
                0.00    0.00       1/1           free_detections [87]
                0.00    0.00       1/1           free_list_contents_kvp [88]
                0.00    0.00       1/1           free_ptrs [90]
                0.00    0.00       1/3           free_list [69]
                0.00    0.00       1/1           load_weights_upto [97]
                0.00    0.00       1/1           load_weights [96]
                0.00    0.00       1/1           calculate_binary_weights [82]
                0.00    0.00       1/1           free_network [89]
-----------------------------------------------
                                                 <spontaneous>
[2]     99.5    0.00   21.19                 run_detector(int, char**) [2]
                0.00   21.19       1/1           validate_detector_map [1]
                0.00    0.00      12/12          find_arg [56]
                0.00    0.00      10/10          find_int_arg [58]
                0.00    0.00       6/6           find_char_arg [61]
                0.00    0.00       3/3           find_float_arg [67]
-----------------------------------------------
                0.00   20.76       1/1           network_predict [4]
[3]     97.5    0.00   20.76       1         forward_network [3]
                0.00   20.65      13/13          forward_convolutional_layer [5]
                0.00    0.09       6/6           forward_maxpool_layer [16]
                0.00    0.01       2/2           forward_yolo_layer [29]
                0.01    0.00       1/1           upsample_cpu [30]
                0.00    0.00       2/2           forward_route_layer [73]
                0.00    0.00       1/1           forward_upsample_layer [86]
-----------------------------------------------
                0.00   20.76       1/1           validate_detector_map [1]
[4]     97.5    0.00   20.76       1         network_predict [4]
                0.00   20.76       1/1           forward_network [3]
                0.00    0.00       1/2           get_network_output [74]
-----------------------------------------------
                0.00   20.65      13/13          forward_network [3]
[5]     97.0    0.00   20.65      13         forward_convolutional_layer [5]
                0.00   20.48      13/13          gemm [6]
                0.12    0.00       9/9           im2col_cpu_ext [14]
                0.03    0.00      13/13          add_bias [24]
                0.02    0.00      13/13          activate_array_cpu_custom [26]
                0.00    0.00      13/26          convolutional_out_height [45]
                0.00    0.00      13/26          convolutional_out_width [46]
                0.00    0.00      13/14          fill_cpu [51]
-----------------------------------------------
                0.00   20.48      13/13          forward_convolutional_layer [5]
[6]     96.2    0.00   20.48      13         gemm [6]
                0.00   20.48      13/13          gemm_cpu [7]
-----------------------------------------------
                0.00   20.48      13/13          gemm [6]
[7]     96.2    0.00   20.48      13         gemm_cpu [7]
               20.48    0.00    3694/3694        gemm_nn(int, int, int, int, float*, int, float*, int, float*, int) [8]
                0.00    0.00      13/13          is_fma_avx2 [55]
                0.00    0.00      13/14          is_avx [52]
-----------------------------------------------
               20.48    0.00    3694/3694        gemm_cpu [7]
[8]     96.2   20.48    0.00    3694         gemm_nn(int, int, int, int, float*, int, float*, int, float*, int) [8]
-----------------------------------------------
                0.10    0.20      13/13          parse_convolutional(list*, size_params) [11]
[9]      1.4    0.10    0.20      13         make_convolutional_layer [9]
                0.20    0.00 8845488/8845488     rand_uniform [12]
                0.00    0.00      72/220         xcalloc_location [38]
                0.00    0.00      13/26          convolutional_out_height [45]
                0.00    0.00      13/26          convolutional_out_width [46]
                0.00    0.00      13/13          get_convolutional_workspace_size [54]
-----------------------------------------------
                0.00    0.30       1/1           validate_detector_map [1]
[10]     1.4    0.00    0.30       1         parse_network_cfg_custom [10]
                0.00    0.30      13/13          parse_convolutional(list*, size_params) [11]
                0.00    0.00     168/557         option_find_int_quiet [35]
                0.00    0.00      49/142         option_find_float_quiet [40]
                0.00    0.00      25/25          free_section(section*) [657]
                0.00    0.00      24/24          string_to_layer_type(char*) [658]
                0.00    0.00      24/24          option_unused [50]
                0.00    0.00       6/6           parse_maxpool(list*, size_params) [665]
                0.00    0.00       2/2           parse_yolo(list*, size_params) [670]
                0.00    0.00       2/2           parse_route(list*, size_params) [671]
                0.00    0.00       1/1           read_cfg(char*) [683]
                0.00    0.00       1/1           make_network [98]
                0.00    0.00       1/1           is_network(section*) [676]
                0.00    0.00       1/1           parse_net_options(list*, network*) [679]
                0.00    0.00       1/3           free_list [69]
                0.00    0.00       1/1           set_train_only_bn(network) [680]
                0.00    0.00       1/1           get_network_output_size [94]
                0.00    0.00       1/2           get_network_output [74]
                0.00    0.00       1/220         xcalloc_location [38]
                0.00    0.00       1/1           parse_upsample(list*, size_params, network) [678]
-----------------------------------------------
                0.00    0.30      13/13          parse_network_cfg_custom [10]
[11]     1.4    0.00    0.30      13         parse_convolutional(list*, size_params) [11]
                0.10    0.20      13/13          make_convolutional_layer [9]
                0.00    0.00     286/557         option_find_int_quiet [35]
                0.00    0.00      52/142         option_find_float_quiet [40]
                0.00    0.00      39/59          option_find_int [43]
                0.00    0.00      13/25          option_find_str [47]
                0.00    0.00      13/13          get_activation [53]
-----------------------------------------------
                0.20    0.00 8845488/8845488     make_convolutional_layer [9]
[12]     0.9    0.20    0.00 8845488         rand_uniform [12]
-----------------------------------------------
                0.13    0.00       1/1           validate_detector_map [1]
[13]     0.6    0.13    0.00       1         fuse_conv_batchnorm [13]
                0.00    0.00      11/11          free_convolutional_batchnorm [57]
-----------------------------------------------
                0.12    0.00       9/9           forward_convolutional_layer [5]
[14]     0.6    0.12    0.00       9         im2col_cpu_ext [14]
-----------------------------------------------
                                                 <spontaneous>
[15]     0.5    0.00    0.10                 load_thread [15]
                0.00    0.06       1/1           load_image [18]
                0.04    0.00       1/1           resize_image [20]
-----------------------------------------------
                0.00    0.09       6/6           forward_network [3]
[16]     0.4    0.00    0.09       6         forward_maxpool_layer [16]
                0.09    0.00       6/6           forward_maxpool_layer_avx [17]
-----------------------------------------------
                0.09    0.00       6/6           forward_maxpool_layer [16]
[17]     0.4    0.09    0.00       6         forward_maxpool_layer_avx [17]
-----------------------------------------------
                0.00    0.06       1/1           load_thread [15]
[18]     0.3    0.00    0.06       1         load_image [18]
                0.02    0.04       1/1           load_image_stb(char*, int) [19]
-----------------------------------------------
                0.02    0.04       1/1           load_image [18]
[19]     0.3    0.02    0.04       1         load_image_stb(char*, int) [19]
                0.00    0.04       1/1           stbi_load [21]
                0.00    0.00       1/3           make_image [71]
-----------------------------------------------
                0.04    0.00       1/1           load_thread [15]
[20]     0.2    0.04    0.00       1         resize_image [20]
                0.00    0.00       2/3           make_image [71]
                0.00    0.00       1/3           free_image [68]
-----------------------------------------------
                0.00    0.04       1/1           load_image_stb(char*, int) [19]
[21]     0.2    0.00    0.04       1         stbi_load [21]
                0.00    0.04       1/1           stbi_load_from_file [22]
-----------------------------------------------
                0.00    0.04       1/1           stbi_load [21]
[22]     0.2    0.00    0.04       1         stbi_load_from_file [22]
                0.00    0.04       1/1           stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [23]
                0.00    0.00       1/1219        stbi__stdio_read(void*, char*, int) [653]
-----------------------------------------------
                0.00    0.04       1/1           stbi_load_from_file [22]
[23]     0.2    0.00    0.04       1         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [23]
                0.00    0.03       1/1           stbi__decode_jpeg_image(stbi__jpeg*) [25]
                0.01    0.00     576/576         stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [32]
                0.00    0.00    1152/1152        stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [654]
                0.00    0.00     576/576         resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int) [655]
                0.00    0.00       1/1           stbi__malloc_mad3(int, int, int, int) [684]
-----------------------------------------------
                0.03    0.00      13/13          forward_convolutional_layer [5]
[24]     0.1    0.03    0.00      13         add_bias [24]
-----------------------------------------------
                0.00    0.03       1/1           stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [23]
[25]     0.1    0.00    0.03       1         stbi__decode_jpeg_image(stbi__jpeg*) [25]
                0.02    0.00   16339/16339       stbi__grow_buffer_unsafe(stbi__jpeg*) [27]
                0.01    0.00   13824/13824       stbi__idct_block(unsigned char*, int, short*) [31]
                0.00    0.00       7/11          stbi__process_marker(stbi__jpeg*, int) [664]
                0.00    0.00       5/27          stbi__get8(stbi__context*) [656]
                0.00    0.00       1/1           stbi__decode_jpeg_header(stbi__jpeg*, int) [686]
                0.00    0.00       1/16          stbi__get16be(stbi__context*) [659]
-----------------------------------------------
                0.02    0.00      13/13          forward_convolutional_layer [5]
[26]     0.1    0.02    0.00      13         activate_array_cpu_custom [26]
-----------------------------------------------
                               70323             stbi__grow_buffer_unsafe(stbi__jpeg*) [27]
                0.02    0.00   16339/16339       stbi__decode_jpeg_image(stbi__jpeg*) [25]
[27]     0.1    0.02    0.00   16339+70323   stbi__grow_buffer_unsafe(stbi__jpeg*) [27]
                0.00    0.00    1210/1219        stbi__stdio_read(void*, char*, int) [653]
                               70323             stbi__grow_buffer_unsafe(stbi__jpeg*) [27]
-----------------------------------------------
                0.01    0.00      12/12          forward_yolo_layer [29]
[28]     0.0    0.01    0.00      12         activate_array [28]
-----------------------------------------------
                0.00    0.01       2/2           forward_network [3]
[29]     0.0    0.00    0.01       2         forward_yolo_layer [29]
                0.01    0.00      12/12          activate_array [28]
                0.00    0.00       6/6           scal_add_cpu [64]
-----------------------------------------------
                0.01    0.00       1/1           forward_network [3]
[30]     0.0    0.01    0.00       1         upsample_cpu [30]
-----------------------------------------------
                0.01    0.00   13824/13824       stbi__decode_jpeg_image(stbi__jpeg*) [25]
[31]     0.0    0.01    0.00   13824         stbi__idct_block(unsigned char*, int, short*) [31]
-----------------------------------------------
                0.01    0.00     576/576         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [23]
[32]     0.0    0.01    0.00     576         stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [32]
-----------------------------------------------
                0.00    0.00       2/803         parse_route(list*, size_params) [671]
                0.00    0.00       3/803         parse_net_options(list*, network*) [679]
                0.00    0.00       6/803         option_find_str_quiet [63]
                0.00    0.00       9/803         option_find_float [60]
                0.00    0.00      25/803         option_find_str [47]
                0.00    0.00      59/803         option_find_int [43]
                0.00    0.00     142/803         option_find_float_quiet [40]
                0.00    0.00     557/803         option_find_int_quiet [35]
[33]     0.0    0.00    0.00     803         option_find [33]
-----------------------------------------------
                0.00    0.00       1/696         copy_string [83]
                0.00    0.00      25/696         read_cfg(char*) [683]
                0.00    0.00      29/696         make_list [44]
                0.00    0.00     130/696         option_insert [41]
                0.00    0.00     236/696         list_insert [37]
                0.00    0.00     275/696         fgetl [36]
[34]     0.0    0.00    0.00     696         xmalloc_location [34]
-----------------------------------------------
                0.00    0.00       8/557         parse_route(list*, size_params) [671]
                0.00    0.00      20/557         parse_yolo(list*, size_params) [670]
                0.00    0.00      33/557         parse_net_options(list*, network*) [679]
                0.00    0.00      42/557         parse_maxpool(list*, size_params) [665]
                0.00    0.00     168/557         parse_network_cfg_custom [10]
                0.00    0.00     286/557         parse_convolutional(list*, size_params) [11]
[35]     0.0    0.00    0.00     557         option_find_int_quiet [35]
                0.00    0.00     557/803         option_find [33]
-----------------------------------------------
                0.00    0.00       9/275         read_data_cfg [102]
                0.00    0.00      83/275         get_paths [75]
                0.00    0.00     183/275         read_cfg(char*) [683]
[36]     0.0    0.00    0.00     275         fgetl [36]
                0.00    0.00     275/696         xmalloc_location [34]
-----------------------------------------------
                0.00    0.00      25/236         read_cfg(char*) [683]
                0.00    0.00      81/236         get_paths [75]
                0.00    0.00     130/236         read_option [42]
[37]     0.0    0.00    0.00     236         list_insert [37]
                0.00    0.00     236/696         xmalloc_location [34]
-----------------------------------------------
                0.00    0.00       1/220         trim(char*) [682]
                0.00    0.00       1/220         read_boxes [101]
                0.00    0.00       1/220         load_data_in_thread [95]
                0.00    0.00       1/220         make_network_boxes [99]
                0.00    0.00       1/220         parse_network_cfg_custom [10]
                0.00    0.00       2/220         list_to_array [77]
                0.00    0.00       2/220         parse_yolo_mask(char*, int*) [672]
                0.00    0.00       2/220         make_upsample_layer [100]
                0.00    0.00       3/220         make_image [71]
                0.00    0.00       3/220         parse_net_options(list*, network*) [679]
                0.00    0.00       4/220         parse_route(list*, size_params) [671]
                0.00    0.00       4/220         make_route_layer [78]
                0.00    0.00       6/220         make_maxpool_layer [62]
                0.00    0.00      10/220         make_network [98]
                0.00    0.00      14/220         make_yolo_layer [79]
                0.00    0.00      72/220         make_convolutional_layer [9]
                0.00    0.00      93/220         validate_detector_map [1]
[38]     0.0    0.00    0.00     220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       8/190         read_data_cfg [102]
                0.00    0.00     182/190         read_cfg(char*) [683]
[39]     0.0    0.00    0.00     190         strip [39]
-----------------------------------------------
                0.00    0.00       1/142         parse_upsample(list*, size_params, network) [678]
                0.00    0.00      16/142         parse_net_options(list*, network*) [679]
                0.00    0.00      24/142         parse_yolo(list*, size_params) [670]
                0.00    0.00      49/142         parse_network_cfg_custom [10]
                0.00    0.00      52/142         parse_convolutional(list*, size_params) [11]
[40]     0.0    0.00    0.00     142         option_find_float_quiet [40]
                0.00    0.00     142/803         option_find [33]
-----------------------------------------------
                0.00    0.00     130/130         read_option [42]
[41]     0.0    0.00    0.00     130         option_insert [41]
                0.00    0.00     130/696         xmalloc_location [34]
-----------------------------------------------
                0.00    0.00       6/130         read_data_cfg [102]
                0.00    0.00     124/130         read_cfg(char*) [683]
[42]     0.0    0.00    0.00     130         read_option [42]
                0.00    0.00     130/236         list_insert [37]
                0.00    0.00     130/130         option_insert [41]
-----------------------------------------------
                0.00    0.00       1/59          parse_upsample(list*, size_params, network) [678]
                0.00    0.00       3/59          parse_net_options(list*, network*) [679]
                0.00    0.00       4/59          parse_yolo(list*, size_params) [670]
                0.00    0.00      12/59          parse_maxpool(list*, size_params) [665]
                0.00    0.00      39/59          parse_convolutional(list*, size_params) [11]
[43]     0.0    0.00    0.00      59         option_find_int [43]
                0.00    0.00      59/803         option_find [33]
-----------------------------------------------
                0.00    0.00       1/29          read_data_cfg [102]
                0.00    0.00       2/29          get_paths [75]
                0.00    0.00      26/29          read_cfg(char*) [683]
[44]     0.0    0.00    0.00      29         make_list [44]
                0.00    0.00      29/696         xmalloc_location [34]
-----------------------------------------------
                0.00    0.00      13/26          make_convolutional_layer [9]
                0.00    0.00      13/26          forward_convolutional_layer [5]
[45]     0.0    0.00    0.00      26         convolutional_out_height [45]
-----------------------------------------------
                0.00    0.00      13/26          make_convolutional_layer [9]
                0.00    0.00      13/26          forward_convolutional_layer [5]
[46]     0.0    0.00    0.00      26         convolutional_out_width [46]
-----------------------------------------------
                0.00    0.00       1/25          parse_net_options(list*, network*) [679]
                0.00    0.00       3/25          validate_detector_map [1]
                0.00    0.00       8/25          parse_yolo(list*, size_params) [670]
                0.00    0.00      13/25          parse_convolutional(list*, size_params) [11]
[47]     0.0    0.00    0.00      25         option_find_str [47]
                0.00    0.00      25/803         option_find [33]
-----------------------------------------------
                0.00    0.00      24/24          free_network [89]
[48]     0.0    0.00    0.00      24         free_layer [48]
                0.00    0.00      24/24          free_layer_custom [49]
-----------------------------------------------
                0.00    0.00      24/24          free_layer [48]
[49]     0.0    0.00    0.00      24         free_layer_custom [49]
-----------------------------------------------
                0.00    0.00      24/24          parse_network_cfg_custom [10]
[50]     0.0    0.00    0.00      24         option_unused [50]
-----------------------------------------------
                0.00    0.00       1/14          forward_upsample_layer [86]
                0.00    0.00      13/14          forward_convolutional_layer [5]
[51]     0.0    0.00    0.00      14         fill_cpu [51]
-----------------------------------------------
                0.00    0.00       1/14          init_cpu [350]
                0.00    0.00      13/14          gemm_cpu [7]
[52]     0.0    0.00    0.00      14         is_avx [52]
-----------------------------------------------
                0.00    0.00      13/13          parse_convolutional(list*, size_params) [11]
[53]     0.0    0.00    0.00      13         get_activation [53]
-----------------------------------------------
                0.00    0.00      13/13          make_convolutional_layer [9]
[54]     0.0    0.00    0.00      13         get_convolutional_workspace_size [54]
                0.00    0.00      13/13          get_workspace_size32(layer) [661]
                0.00    0.00      13/13          get_workspace_size16(layer) [660]
-----------------------------------------------
                0.00    0.00      13/13          gemm_cpu [7]
[55]     0.0    0.00    0.00      13         is_fma_avx2 [55]
-----------------------------------------------
                0.00    0.00      12/12          run_detector(int, char**) [2]
[56]     0.0    0.00    0.00      12         find_arg [56]
-----------------------------------------------
                0.00    0.00      11/11          fuse_conv_batchnorm [13]
[57]     0.0    0.00    0.00      11         free_convolutional_batchnorm [57]
-----------------------------------------------
                0.00    0.00      10/10          run_detector(int, char**) [2]
[58]     0.0    0.00    0.00      10         find_int_arg [58]
-----------------------------------------------
                0.00    0.00      10/10          replace_image_to_label [103]
[59]     0.0    0.00    0.00      10         find_replace [59]
-----------------------------------------------
                0.00    0.00       3/9           parse_net_options(list*, network*) [679]
                0.00    0.00       6/9           parse_yolo(list*, size_params) [670]
[60]     0.0    0.00    0.00       9         option_find_float [60]
                0.00    0.00       9/803         option_find [33]
-----------------------------------------------
                0.00    0.00       6/6           run_detector(int, char**) [2]
[61]     0.0    0.00    0.00       6         find_char_arg [61]
-----------------------------------------------
                0.00    0.00       6/6           parse_maxpool(list*, size_params) [665]
[62]     0.0    0.00    0.00       6         make_maxpool_layer [62]
                0.00    0.00       6/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       6/6           parse_yolo(list*, size_params) [670]
[63]     0.0    0.00    0.00       6         option_find_str_quiet [63]
                0.00    0.00       6/803         option_find [33]
-----------------------------------------------
                0.00    0.00       6/6           forward_yolo_layer [29]
[64]     0.0    0.00    0.00       6         scal_add_cpu [64]
-----------------------------------------------
                0.00    0.00       4/4           read_boxes [101]
[65]     0.0    0.00    0.00       4         xrealloc_location [65]
-----------------------------------------------
                0.00    0.00       3/3           forward_route_layer [73]
[66]     0.0    0.00    0.00       3         copy_cpu [66]
-----------------------------------------------
                0.00    0.00       3/3           run_detector(int, char**) [2]
[67]     0.0    0.00    0.00       3         find_float_arg [67]
-----------------------------------------------
                0.00    0.00       1/3           resize_image [20]
                0.00    0.00       2/3           validate_detector_map [1]
[68]     0.0    0.00    0.00       3         free_image [68]
-----------------------------------------------
                0.00    0.00       1/3           get_labels_custom [92]
                0.00    0.00       1/3           parse_network_cfg_custom [10]
                0.00    0.00       1/3           validate_detector_map [1]
[69]     0.0    0.00    0.00       3         free_list [69]
                0.00    0.00       3/3           free_node(node*) [668]
-----------------------------------------------
                0.00    0.00       3/3           make_image [71]
[70]     0.0    0.00    0.00       3         make_empty_image [70]
-----------------------------------------------
                0.00    0.00       1/3           load_image_stb(char*, int) [19]
                0.00    0.00       2/3           resize_image [20]
[71]     0.0    0.00    0.00       3         make_image [71]
                0.00    0.00       3/3           make_empty_image [70]
                0.00    0.00       3/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       2/2           get_yolo_detections [76]
[72]     0.0    0.00    0.00       2         correct_yolo_boxes [72]
-----------------------------------------------
                0.00    0.00       2/2           forward_network [3]
[73]     0.0    0.00    0.00       2         forward_route_layer [73]
                0.00    0.00       3/3           copy_cpu [66]
-----------------------------------------------
                0.00    0.00       1/2           network_predict [4]
                0.00    0.00       1/2           parse_network_cfg_custom [10]
[74]     0.0    0.00    0.00       2         get_network_output [74]
-----------------------------------------------
                0.00    0.00       1/2           get_labels_custom [92]
                0.00    0.00       1/2           validate_detector_map [1]
[75]     0.0    0.00    0.00       2         get_paths [75]
                0.00    0.00      83/275         fgetl [36]
                0.00    0.00      81/236         list_insert [37]
                0.00    0.00       2/29          make_list [44]
-----------------------------------------------
                0.00    0.00       2/2           fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [681]
[76]     0.0    0.00    0.00       2         get_yolo_detections [76]
                0.00    0.00       2/2           correct_yolo_boxes [72]
-----------------------------------------------
                0.00    0.00       1/2           get_labels_custom [92]
                0.00    0.00       1/2           validate_detector_map [1]
[77]     0.0    0.00    0.00       2         list_to_array [77]
                0.00    0.00       2/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       2/2           parse_route(list*, size_params) [671]
[78]     0.0    0.00    0.00       2         make_route_layer [78]
                0.00    0.00       4/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       2/2           parse_yolo(list*, size_params) [670]
[79]     0.0    0.00    0.00       2         make_yolo_layer [79]
                0.00    0.00      14/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       2/2           num_detections(network*, float) [677]
[80]     0.0    0.00    0.00       2         yolo_num_detections [80]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[81]     0.0    0.00    0.00       1         basecfg [81]
                0.00    0.00       1/1           copy_string [83]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[82]     0.0    0.00    0.00       1         calculate_binary_weights [82]
-----------------------------------------------
                0.00    0.00       1/1           basecfg [81]
[83]     0.0    0.00    0.00       1         copy_string [83]
                0.00    0.00       1/696         xmalloc_location [34]
-----------------------------------------------
                0.00    0.00       1/1           read_boxes [101]
[84]     0.0    0.00    0.00       1         custom_hash [84]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[85]     0.0    0.00    0.00       1         do_nms_sort [85]
-----------------------------------------------
                0.00    0.00       1/1           forward_network [3]
[86]     0.0    0.00    0.00       1         forward_upsample_layer [86]
                0.00    0.00       1/14          fill_cpu [51]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[87]     0.0    0.00    0.00       1         free_detections [87]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[88]     0.0    0.00    0.00       1         free_list_contents_kvp [88]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[89]     0.0    0.00    0.00       1         free_network [89]
                0.00    0.00      24/24          free_layer [48]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[90]     0.0    0.00    0.00       1         free_ptrs [90]
-----------------------------------------------
                0.00    0.00       1/1           load_weights_upto [97]
[91]     0.0    0.00    0.00       1         get_current_batch [91]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[92]     0.0    0.00    0.00       1         get_labels_custom [92]
                0.00    0.00       1/2           get_paths [75]
                0.00    0.00       1/2           list_to_array [77]
                0.00    0.00       1/3           free_list [69]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[93]     0.0    0.00    0.00       1         get_network_boxes [93]
                0.00    0.00       1/1           make_network_boxes [99]
                0.00    0.00       1/1           fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [681]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [10]
[94]     0.0    0.00    0.00       1         get_network_output_size [94]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[95]     0.0    0.00    0.00       1         load_data_in_thread [95]
                0.00    0.00       1/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[96]     0.0    0.00    0.00       1         load_weights [96]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[97]     0.0    0.00    0.00       1         load_weights_upto [97]
                0.00    0.00      13/13          load_convolutional_weights(layer, _IO_FILE*) [662]
                0.00    0.00       1/1           get_current_batch [91]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [10]
[98]     0.0    0.00    0.00       1         make_network [98]
                0.00    0.00      10/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       1/1           get_network_boxes [93]
[99]     0.0    0.00    0.00       1         make_network_boxes [99]
                0.00    0.00       1/1           num_detections(network*, float) [677]
                0.00    0.00       1/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       1/1           parse_upsample(list*, size_params, network) [678]
[100]    0.0    0.00    0.00       1         make_upsample_layer [100]
                0.00    0.00       2/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[101]    0.0    0.00    0.00       1         read_boxes [101]
                0.00    0.00       4/4           xrealloc_location [65]
                0.00    0.00       1/220         xcalloc_location [38]
                0.00    0.00       1/1           custom_hash [84]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[102]    0.0    0.00    0.00       1         read_data_cfg [102]
                0.00    0.00       9/275         fgetl [36]
                0.00    0.00       8/190         strip [39]
                0.00    0.00       6/130         read_option [42]
                0.00    0.00       1/29          make_list [44]
-----------------------------------------------
                0.00    0.00       1/1           validate_detector_map [1]
[103]    0.0    0.00    0.00       1         replace_image_to_label [103]
                0.00    0.00      12/12          find_replace_extension(char*, char*, char*, char*) [663]
                0.00    0.00      10/10          find_replace [59]
                0.00    0.00       1/1           trim(char*) [682]
-----------------------------------------------
                0.00    0.00       1/1219        stbi_load_from_file [22]
                0.00    0.00       4/1219        stbi__get8(stbi__context*) [656]
                0.00    0.00       4/1219        stbi__process_marker(stbi__jpeg*, int) [664]
                0.00    0.00    1210/1219        stbi__grow_buffer_unsafe(stbi__jpeg*) [27]
[653]    0.0    0.00    0.00    1219         stbi__stdio_read(void*, char*, int) [653]
-----------------------------------------------
                0.00    0.00    1152/1152        stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [23]
[654]    0.0    0.00    0.00    1152         stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [654]
-----------------------------------------------
                0.00    0.00     576/576         stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [23]
[655]    0.0    0.00    0.00     576         resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int) [655]
-----------------------------------------------
                0.00    0.00       4/27          stbi__process_marker(stbi__jpeg*, int) [664]
                0.00    0.00       5/27          stbi__decode_jpeg_image(stbi__jpeg*) [25]
                0.00    0.00      18/27          stbi__decode_jpeg_header(stbi__jpeg*, int) [686]
[656]    0.0    0.00    0.00      27         stbi__get8(stbi__context*) [656]
                0.00    0.00       4/1219        stbi__stdio_read(void*, char*, int) [653]
-----------------------------------------------
                0.00    0.00      25/25          parse_network_cfg_custom [10]
[657]    0.0    0.00    0.00      25         free_section(section*) [657]
-----------------------------------------------
                0.00    0.00      24/24          parse_network_cfg_custom [10]
[658]    0.0    0.00    0.00      24         string_to_layer_type(char*) [658]
-----------------------------------------------
                0.00    0.00       1/16          stbi__decode_jpeg_image(stbi__jpeg*) [25]
                0.00    0.00       3/16          stbi__decode_jpeg_header(stbi__jpeg*, int) [686]
                0.00    0.00      12/16          stbi__process_marker(stbi__jpeg*, int) [664]
[659]    0.0    0.00    0.00      16         stbi__get16be(stbi__context*) [659]
-----------------------------------------------
                0.00    0.00      13/13          get_convolutional_workspace_size [54]
[660]    0.0    0.00    0.00      13         get_workspace_size16(layer) [660]
-----------------------------------------------
                0.00    0.00      13/13          get_convolutional_workspace_size [54]
[661]    0.0    0.00    0.00      13         get_workspace_size32(layer) [661]
-----------------------------------------------
                0.00    0.00      13/13          load_weights_upto [97]
[662]    0.0    0.00    0.00      13         load_convolutional_weights(layer, _IO_FILE*) [662]
-----------------------------------------------
                0.00    0.00      12/12          replace_image_to_label [103]
[663]    0.0    0.00    0.00      12         find_replace_extension(char*, char*, char*, char*) [663]
-----------------------------------------------
                0.00    0.00       4/11          stbi__decode_jpeg_header(stbi__jpeg*, int) [686]
                0.00    0.00       7/11          stbi__decode_jpeg_image(stbi__jpeg*) [25]
[664]    0.0    0.00    0.00      11         stbi__process_marker(stbi__jpeg*, int) [664]
                0.00    0.00      12/16          stbi__get16be(stbi__context*) [659]
                0.00    0.00       4/4           stbi__build_huffman(stbi__huffman*, int*) [667]
                0.00    0.00       4/1219        stbi__stdio_read(void*, char*, int) [653]
                0.00    0.00       4/4           stbi__stdio_skip(void*, int) [666]
                0.00    0.00       4/27          stbi__get8(stbi__context*) [656]
-----------------------------------------------
                0.00    0.00       6/6           parse_network_cfg_custom [10]
[665]    0.0    0.00    0.00       6         parse_maxpool(list*, size_params) [665]
                0.00    0.00      42/557         option_find_int_quiet [35]
                0.00    0.00      12/59          option_find_int [43]
                0.00    0.00       6/6           make_maxpool_layer [62]
-----------------------------------------------
                0.00    0.00       4/4           stbi__process_marker(stbi__jpeg*, int) [664]
[666]    0.0    0.00    0.00       4         stbi__stdio_skip(void*, int) [666]
-----------------------------------------------
                0.00    0.00       4/4           stbi__process_marker(stbi__jpeg*, int) [664]
[667]    0.0    0.00    0.00       4         stbi__build_huffman(stbi__huffman*, int*) [667]
-----------------------------------------------
                0.00    0.00       3/3           free_list [69]
[668]    0.0    0.00    0.00       3         free_node(node*) [668]
-----------------------------------------------
                0.00    0.00       3/3           stbi__decode_jpeg_header(stbi__jpeg*, int) [686]
[669]    0.0    0.00    0.00       3         stbi__malloc_mad2(int, int, int) [669]
-----------------------------------------------
                0.00    0.00       2/2           parse_network_cfg_custom [10]
[670]    0.0    0.00    0.00       2         parse_yolo(list*, size_params) [670]
                0.00    0.00      24/142         option_find_float_quiet [40]
                0.00    0.00      20/557         option_find_int_quiet [35]
                0.00    0.00       8/25          option_find_str [47]
                0.00    0.00       6/6           option_find_str_quiet [63]
                0.00    0.00       6/9           option_find_float [60]
                0.00    0.00       4/59          option_find_int [43]
                0.00    0.00       2/2           parse_yolo_mask(char*, int*) [672]
                0.00    0.00       2/2           make_yolo_layer [79]
                0.00    0.00       2/2           get_classes_multipliers(char*, int, float) [673]
-----------------------------------------------
                0.00    0.00       2/2           parse_network_cfg_custom [10]
[671]    0.0    0.00    0.00       2         parse_route(list*, size_params) [671]
                0.00    0.00       8/557         option_find_int_quiet [35]
                0.00    0.00       4/220         xcalloc_location [38]
                0.00    0.00       2/803         option_find [33]
                0.00    0.00       2/2           make_route_layer [78]
-----------------------------------------------
                0.00    0.00       2/2           parse_yolo(list*, size_params) [670]
[672]    0.0    0.00    0.00       2         parse_yolo_mask(char*, int*) [672]
                0.00    0.00       2/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       2/2           parse_yolo(list*, size_params) [670]
[673]    0.0    0.00    0.00       2         get_classes_multipliers(char*, int, float) [673]
-----------------------------------------------
                0.00    0.00       2/2           __libc_csu_init [1089]
[674]    0.0    0.00    0.00       2         stbi__hdr_info(stbi__context*, int*, int*, int*) [674]
-----------------------------------------------
                0.00    0.00       1/1           parse_net_options(list*, network*) [679]
[675]    0.0    0.00    0.00       1         get_policy(char*) [675]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [10]
[676]    0.0    0.00    0.00       1         is_network(section*) [676]
-----------------------------------------------
                0.00    0.00       1/1           make_network_boxes [99]
[677]    0.0    0.00    0.00       1         num_detections(network*, float) [677]
                0.00    0.00       2/2           yolo_num_detections [80]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [10]
[678]    0.0    0.00    0.00       1         parse_upsample(list*, size_params, network) [678]
                0.00    0.00       1/59          option_find_int [43]
                0.00    0.00       1/1           make_upsample_layer [100]
                0.00    0.00       1/142         option_find_float_quiet [40]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [10]
[679]    0.0    0.00    0.00       1         parse_net_options(list*, network*) [679]
                0.00    0.00      33/557         option_find_int_quiet [35]
                0.00    0.00      16/142         option_find_float_quiet [40]
                0.00    0.00       3/59          option_find_int [43]
                0.00    0.00       3/9           option_find_float [60]
                0.00    0.00       3/803         option_find [33]
                0.00    0.00       3/220         xcalloc_location [38]
                0.00    0.00       1/1           get_policy(char*) [675]
                0.00    0.00       1/25          option_find_str [47]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [10]
[680]    0.0    0.00    0.00       1         set_train_only_bn(network) [680]
-----------------------------------------------
                0.00    0.00       1/1           get_network_boxes [93]
[681]    0.0    0.00    0.00       1         fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [681]
                0.00    0.00       2/2           get_yolo_detections [76]
-----------------------------------------------
                0.00    0.00       1/1           replace_image_to_label [103]
[682]    0.0    0.00    0.00       1         trim(char*) [682]
                0.00    0.00       1/220         xcalloc_location [38]
-----------------------------------------------
                0.00    0.00       1/1           parse_network_cfg_custom [10]
[683]    0.0    0.00    0.00       1         read_cfg(char*) [683]
                0.00    0.00     183/275         fgetl [36]
                0.00    0.00     182/190         strip [39]
                0.00    0.00     124/130         read_option [42]
                0.00    0.00      26/29          make_list [44]
                0.00    0.00      25/696         xmalloc_location [34]
                0.00    0.00      25/236         list_insert [37]
-----------------------------------------------
                0.00    0.00       1/1           stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [23]
[684]    0.0    0.00    0.00       1         stbi__malloc_mad3(int, int, int, int) [684]
-----------------------------------------------
                0.00    0.00       1/1           stbi__decode_jpeg_header(stbi__jpeg*, int) [686]
[685]    0.0    0.00    0.00       1         stbi__mad3sizes_valid(int, int, int, int) [685]
-----------------------------------------------
                0.00    0.00       1/1           stbi__decode_jpeg_image(stbi__jpeg*) [25]
[686]    0.0    0.00    0.00       1         stbi__decode_jpeg_header(stbi__jpeg*, int) [686]
                0.00    0.00      18/27          stbi__get8(stbi__context*) [656]
                0.00    0.00       4/11          stbi__process_marker(stbi__jpeg*, int) [664]
                0.00    0.00       3/16          stbi__get16be(stbi__context*) [659]
                0.00    0.00       3/3           stbi__malloc_mad2(int, int, int) [669]
                0.00    0.00       1/1           stbi__mad3sizes_valid(int, int, int, int) [685]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [675] get_policy(char*)      [81] basecfg                [52] is_avx
 [676] is_network(section*)   [82] calculate_binary_weights [55] is_fma_avx2
 [670] parse_yolo(list*, size_params) [45] convolutional_out_height [37] list_insert
 [671] parse_route(list*, size_params) [46] convolutional_out_width [77] list_to_array
 [657] free_section(section*) [66] copy_cpu               [95] load_data_in_thread
 [665] parse_maxpool(list*, size_params) [83] copy_string [18] load_image
  [19] load_image_stb(char*, int) [72] correct_yolo_boxes [96] load_weights
 [677] num_detections(network*, float) [84] custom_hash   [97] load_weights_upto
 [678] parse_upsample(list*, size_params, network) [85] do_nms_sort [9] make_convolutional_layer
 [672] parse_yolo_mask(char*, int*) [36] fgetl            [70] make_empty_image
 [679] parse_net_options(list*, network*) [51] fill_cpu   [71] make_image
 [680] set_train_only_bn(network) [56] find_arg           [44] make_list
 [681] fill_network_boxes(network*, int, int, float, float, int*, int, detection*, int) [61] find_char_arg [62] make_maxpool_layer
  [11] parse_convolutional(list*, size_params) [67] find_float_arg [98] make_network
 [660] get_workspace_size16(layer) [58] find_int_arg      [99] make_network_boxes
 [661] get_workspace_size32(layer) [59] find_replace      [78] make_route_layer
 [658] string_to_layer_type(char*) [5] forward_convolutional_layer [100] make_upsample_layer
 [663] find_replace_extension(char*, char*, char*, char*) [16] forward_maxpool_layer [79] make_yolo_layer
 [673] get_classes_multipliers(char*, int, float) [17] forward_maxpool_layer_avx [4] network_predict
 [662] load_convolutional_weights(layer, _IO_FILE*) [3] forward_network [33] option_find
 [682] trim(char*)            [73] forward_route_layer    [60] option_find_float
   [8] gemm_nn(int, int, int, int, float*, int, float*, int, float*, int) [86] forward_upsample_layer [40] option_find_float_quiet
 [683] read_cfg(char*)        [29] forward_yolo_layer     [43] option_find_int
 [668] free_node(node*)       [57] free_convolutional_batchnorm [35] option_find_int_quiet
 [656] stbi__get8(stbi__context*) [87] free_detections    [47] option_find_str
 [659] stbi__get16be(stbi__context*) [68] free_image      [63] option_find_str_quiet
 [655] resample_row_1(unsigned char*, unsigned char*, unsigned char*, int, int) [48] free_layer [41] option_insert
 [674] stbi__hdr_info(stbi__context*, int*, int*, int*) [49] free_layer_custom [50] option_unused
  [23] stbi__load_main(stbi__context*, int*, int*, int*, int, stbi__result_info*, int) [69] free_list [10] parse_network_cfg_custom
  [31] stbi__idct_block(unsigned char*, int, short*) [88] free_list_contents_kvp [12] rand_uniform
 [653] stbi__stdio_read(void*, char*, int) [89] free_network [101] read_boxes
 [666] stbi__stdio_skip(void*, int) [90] free_ptrs       [102] read_data_cfg
 [669] stbi__malloc_mad2(int, int, int) [13] fuse_conv_batchnorm [42] read_option
 [684] stbi__malloc_mad3(int, int, int, int) [6] gemm    [103] replace_image_to_label
 [667] stbi__build_huffman(stbi__huffman*, int*) [7] gemm_cpu [20] resize_image
 [664] stbi__process_marker(stbi__jpeg*, int) [53] get_activation [64] scal_add_cpu
 [685] stbi__mad3sizes_valid(int, int, int, int) [54] get_convolutional_workspace_size [21] stbi_load
  [32] stbi__YCbCr_to_RGB_row(unsigned char*, unsigned char const*, unsigned char const*, unsigned char const*, int, int) [91] get_current_batch [22] stbi_load_from_file
 [654] stbi__resample_row_v_2(unsigned char*, unsigned char*, unsigned char*, int, int) [92] get_labels_custom [39] strip
  [25] stbi__decode_jpeg_image(stbi__jpeg*) [93] get_network_boxes [30] upsample_cpu
 [686] stbi__decode_jpeg_header(stbi__jpeg*, int) [74] get_network_output [1] validate_detector_map
  [27] stbi__grow_buffer_unsafe(stbi__jpeg*) [94] get_network_output_size [38] xcalloc_location
  [28] activate_array         [75] get_paths              [34] xmalloc_location
  [26] activate_array_cpu_custom [76] get_yolo_detections [65] xrealloc_location
  [24] add_bias               [14] im2col_cpu_ext         [80] yolo_num_detections
