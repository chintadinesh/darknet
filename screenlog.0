[[0;32m  OK  [0m] Removed slice system-getty.slice.
[[0;32m  OK  [0m] Closed Load/Save RF Kill Switch Status /dev/rfkill Watch.
[[0;32m  OK  [0m] Stopped target Timers.
         Stopping Daemon for power management...
[[0;32m  OK  [0m] Stopped Message of the Day.
         Stopping Authorization Manager...
         Stopping User Manager for UID 125...
         Stopping RealtimeKit Scheduling Policy Service...
         Stopping Session c38 of user gdm.
[[0;32m  OK  [0m] Stopped Discard unused blocks once a week.
[[0;32m  OK  [0m] Stopped Daily apt upgrade and clean activities.
[[0;32m  OK  [0m] Stopped Daily apt download activities.
[[0;32m  OK  [0m] Stopped Stop ureadahead data collection 45s after completed startup.
[[0;32m  OK  [0m] Stopped target Graphical Interface.
       [[0;32m  OK  [0m] Stopped Disk Manager.
[[0;32m  OK  [0m] Stopped Accounts Service.
[[0;32m  OK  [0m] Stopped Dispatcher daemon for systemd-networkd.
[[0;32m  OK  [0m] Stopped Deferred execution scheduler.
[[0;32m  OK  [0m] Stopped Modem Manager.
[[0;32m  OK  [0m] Stopped Regular background program processing daemon.
[[0;32m  OK  [0m] Stopped Run anacron jobs.
[[0;32m  OK  [0m] Stopped irqbalance daemon.
[[0;32m  OK  [0m] Stopped Make remote CUPS printers available locally.
[[0;32m  OK  [0m] Stopped Authorization Manager.
[[0;32m  OK  [0m] Stopped Unattended Upgrades Shutdown.
[[0;32m  OK  [0m] Stopped crash report submission daemon.
[[0;32m  OK  [0m] Stopped Serial Getty on ttyPS0.
[[0;32m  OK  [0m] Stopped OpenBSD Secure Shell server.
[[0;32m  OK  [0m] Stopped User Manager for UID 125.
[[0;32m  OK  [0m] Stopped Daemon for power management.
[[0;32m  OK  [0m] Stopped RealtimeKit Scheduling Policy Service.
[[0;32m  OK  [0m] Stopped Bluetooth service.
[[0;32m  OK  [0m] Stopped LSB: MD monitoring daemon.
[[0;32m  OK  [0m] Stopped Availability of block devices.
[[0;32m  OK  [0m] Stopped Save/Restore Sound Card State.
[[0;32m  OK  [0m] Stopped Tool to automatically colleâ€¦nd submit kernel crash signatures.
[[0;32m  OK  [0m] Stopped Session c38 of user gdm.
[[0;32m  OK  [0m] Stopped LXD - container startup/shutdown.
[[0;32m  OK  [0m] Stopped LSB: disk temperature monitoring daemon.
[[0;32m  OK  [0m] Stopped target Host and Network Name Lookups.
[[0;32m  OK  [0m] Removed slice system-serial\x2dgetty.slice.
[[0;32m  OK  [0m] Stopped target Network is Online.
[[0;32m  OK  [0m] Stopped Network Manager Wait Online.
[[0;32m  OK  [0m] Stopped Wait for Network to be Configured.
         Stopping Avahi mDNS/DNS-SD Stack...
         Stopping CUPS Scheduler...
[[0;32m  OK  [0m] Stopped Trigger anacron every hour.
[[0;32m  OK  [0m] Stopped target System Time Synchronized.
[[0;32m  OK  [0m] Stopped Avahi mDNS/DNS-SD Stack.
[[0;32m  OK  [0m] Stopped GNOME Display Manager.
[[0;32m  OK  [0m] Stopped LSB: automatic crash report generation.
[[0;32m  OK  [0m] Stopped LSB: Record successful boot for GRUB.
[[0;32m  OK  [0m] Stopped LSB: Speech Dispatcher.
[[0;32m  OK  [0m] Stopped Session c37 of user gdm.
[[0;32m  OK  [0m] Removed slice User Slice of gdm.
         Stopping Login Service...
         Stopping Permit User Sessions...
[[0;32m  OK  [0m] Stopped Login Service.
[[0;32m  OK  [0m] Stopped Permit User Sessions.
[[0;32m  OK  [0m] Stopped target Remote File Systems.
[[0;32m  OK  [0m] Stopped target Remote File Systems (Pre).
[[0;32m  OK  [0m] Stopped target Network.
         Stopping Network Name Resolution...
         Stopping WPA supplicant...
         Stopping Network Manager...
[[0;32m  OK  [0m] Stopped target User and Group Name Lookups.
[[0;32m  OK  [0m] Stopped WPA supplicant.
[[0;32m  OK  [0m] Stopped Network Name Resolution.
         Stopping Network Service...
[[0;32m  OK  [0m] Stopped Network Service.
[[0;32m  OK  [0m] Stopped CUPS Scheduler.
[[0;32m  OK  [0m] Stopped Network Manager.
[[0;32m  OK  [0m] Stopped target Network (Pre).
         Stopping D-Bus System Message Bus...
[[0;32m  OK  [0m] Stopped D-Bus System Message Bus.
[[0;32m  OK  [0m] Stopped target Basic System.
[[0;32m  OK  [0m] Stopped target Sockets.
[[0;32m  OK  [0m] Closed CUPS Scheduler.
[[0;32m  OK  [0m] Closed Socket activation for snappy daemon.
[[0;32m  OK  [0m] Closed LXD - unix socket.
[[0;32m  OK  [0m] Closed Avahi mDNS/DNS-SD Stack Activation Socket.
[[0;32m  OK  [0m] Closed Syslog Socket.
[[0;32m  OK  [0m] Closed ACPID Listen Socket.
[[0;32m  OK  [0m] Closed Open-iSCSI iscsid Socket.
[[0;32m  OK  [0m] Closed UUID daemon activation socket.
[[0;32m  OK  [0m] Stopped target Paths.
[[0;32m  OK  [0m] Stopped resolvconf-pull-resolved.path.
[[0;32m  OK  [0m] Stopped ACPI Events Check.
[[0;32m  OK  [0m] Stopped CUPS Scheduler.
[[0;32m  OK  [0m] Stopped target Slices.
[[0;32m  OK  [0m] Removed slice User and Session Slice.
[[0;32m  OK  [0m] Closed D-Bus System Message Bus Socket.
[[0;32m  OK  [0m] Stopped target System Initialization.
         Stopping Network Time Synchronization...
         Stopping Update UTMP about System Boot/Shutdown...
[[0;32m  OK  [0m] Stopped target Local Encrypted Volumes.
[[0;32m  OK  [0m] Stopped Forward Password Requests to Wall Directory Watch.
[[0;32m  OK  [0m] Stopped Dispatch Password Requests to Console Directory Watch.
         Stopping Load/Save Random Seed...
[[0;32m  OK  [0m] Stopped Apply Kernel Variables.
[[0;32m  OK  [0m] Stopped Load Kernel Modules.
[[0;32m  OK  [0m] Stopped Network Time Synchronization.
[[0;32m  OK  [0m] Stopped Load/Save Random Seed.
[[0;32m  OK  [0m] Stopped Update UTMP about System Boot/Shutdown.
[[0;32m  OK  [0m] Stopped Create Volatile Files and Directories.
[[0;32m  OK  [0m] Stopped target Local File Systems.
         Unmounting /run/user/125...
[[0;32m  OK  [0m] Unmounted /run/user/125.
[[0;32m  OK  [0m] Reached target Unmount All Filesystems.
[[0;32m  OK  [0m] Stopped target Local File Systems (Pre).
         Stopping Monitoring of LVM2 mirrorsâ€¦ng dmeventd or progress polling...
[[0;32m  OK  [0m] Stopped Remount Root and Kernel File Systems.
[[0;32m  OK  [0m] Stopped Create Static Device Nodes in /dev.
[[0;32m  OK  [0m] Stopped target Swap.
[[0;32m  OK  [0m] Reached target Shutdown.
[[0;32m  OK  [0m] Reached target Final Step.
         Starting Power-Off...
[[0;32m  OK  [0m] Stopped Monitoring of LVM2 mirrors,â€¦sing dmeventd or progress polling.
         Stopping LVM2 metadata daemon...
[[0;32m  OK  [0m] Stopped LVM2 metadata daemon.
Xilinx Zynq MP First Stage Boot Loader 
Release 2018.3   May 22 2020  -  18:20:23
PMUFW:	v1.1


U-Boot 2018.01 (May 22 2020 - 18:31:04 +0000)

Model: Avnet Ultra96 Rev1
Board: Xilinx ZynqMP
I2C:   ready
DRAM:  2 GiB
EL Level:	EL2
Chip ID:	zu3eg
Watchdog: Started
MMC:   mmc@ff160000: 0 (SD), mmc@ff170000: 1
reading uboot.env
In:    serial@ff010000
Out:   serial@ff010000
Err:   serial@ff010000
Model: Avnet Ultra96 Rev1
Board: Xilinx ZynqMP
Net:   Net Initialization Skipped
No ethernet found.
Hit any key to stop autoboot:  2  1  0 
Copying Linux from SD to RAM...
reading system.bit
5568795 bytes read in 411 ms (12.9 MiB/s)
  design filename = "ultra96v2_oob_wrapper;UserID=0XFFFFFFFF;Version=2018.3.1"
  part number = "xczu3eg-sbva484-1-e"
  date = "2020/12/21"
  time = "13:53:26"
  bytes in bitstream = 5568668
zynqmp_align_dma_buffer: Align buffer at 000000000100007f to 0000000000ffff80(swap 0)
reading uImage
14838336 bytes read in 1062 ms (13.3 MiB/s)
reading system.dtb
50873 bytes read in 20 ms (2.4 MiB/s)
## Booting kernel from Legacy Image at 03000000 ...
   Image Name:   4.14-xilinx-v2018.3
   Image Type:   AArch64 Linux Kernel Image (uncompressed)
   Data Size:    14838272 Bytes = 14.2 MiB
   Load Address: 00080000
   Entry Point:  00080000
   Verifying Checksum ... OK
## Flattened Device Tree blob at 02a00000
   Booting using the fdt blob at 0x2a00000
   Loading Kernel Image ... OK
   Loading Device Tree to 0000000007ff0000, end 0000000007fff6b8 ... OK

Starting kernel ...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 4.14.0-xilinx-v2018.3 (root@ultra96_McD) (gcc version 7.5.0 (Ubuntu/Linaro 7.5.0-3ubuntu1~18.04)) #1 SMP Sat Jun 6 20:02:49 BST 2020
[    0.000000] Boot CPU: AArch64 Processor [410fd034]
[    0.000000] Machine model: Avnet Ultra96 Rev1
[    0.000000] efi: Getting EFI parameters from FDT:
[    0.000000] efi: UEFI not found.
[    0.000000] cma: Reserved 256 MiB at 0x000000006fc00000
[    0.000000] psci: probing for conduit method from DT.
[    0.000000] psci: PSCIv1.1 detected in firmware.
[    0.000000] psci: Using standard PSCI v0.2 function IDs
[    0.000000] psci: MIGRATE_INFO_TYPE not supported.
[    0.000000] random: fast init done
[    0.000000] percpu: Embedded 21 pages/cpu @ffffffc07fe5f000 s46488 r8192 d31336 u86016
[    0.000000] Detected VIPT I-cache on CPU0
[    0.000000] CPU features: enabling workaround for ARM erratum 845719
[    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 512771
[    0.000000] Kernel command line: console=ttyPS0,115200 root=/dev/mmcblk0p2 rw rootwait earlyprintk
[    0.000000] PID hash table entries: 4096 (order: 3, 32768 bytes)
[    0.000000] Dentry cache hash table entries: 262144 (order: 9, 2097152 bytes)
[    0.000000] Inode-cache hash table entries: 131072 (order: 8, 1048576 bytes)
[    0.000000] Memory: 1768260K/2079744K available (10044K kernel code, 666K rwdata, 3240K rodata, 512K init, 2360K bss, 49340K reserved, 262144K cma-reserved)
[    0.000000] Virtual kernel memory layout:
[    0.000000]     modules : 0xffffff8000000000 - 0xffffff8008000000   (   128 MB)
[    0.000000]     vmalloc : 0xffffff8008000000 - 0xffffffbebfff0000   (   250 GB)
[    0.000000]       .text : 0xffffff8008080000 - 0xffffff8008a50000   ( 10048 KB)
[    0.000000]     .rodata : 0xffffff8008a50000 - 0xffffff8008d80000   (  3264 KB)
[    0.000000]       .init : 0xffffff8008d80000 - 0xffffff8008e00000   (   512 KB)
[    0.000000]       .data : 0xffffff8008e00000 - 0xffffff8008ea6a00   (   667 KB)
[    0.000000]        .bss : 0xffffff8008ea6a00 - 0xffffff80090f4db0   (  2361 KB)
[    0.000000]     fixed   : 0xffffffbefe7fd000 - 0xffffffbefec00000   (  4108 KB)
[    0.000000]     PCI I/O : 0xffffffbefee00000 - 0xffffffbeffe00000   (    16 MB)
[    0.000000]     vmemmap : 0xffffffbf00000000 - 0xffffffc000000000   (     4 GB maximum)
[    0.000000]               0xffffffbf00000000 - 0xffffffbf01bfc800   (    27 MB actual)
[    0.000000]     memory  : 0xffffffc000000000 - 0xffffffc07ff00000   (  2047 MB)
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU event tracing is enabled.
[    0.000000] 	RCU restricting CPUs from NR_CPUS=8 to nr_cpu_ids=4.
[    0.000000] RCU: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=4
[    0.000000] NR_IRQS: 64, nr_irqs: 64, preallocated irqs: 0
[    0.000000] GIC: Adjusting CPU interface base to 0x00000000f902f000
[    0.000000] GIC: Using split EOI/Deactivate mode
[    0.000000] arch_timer: cp15 timer(s) running at 100.00MHz (phys).
[    0.000000] clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x171024e7e0, max_idle_ns: 440795205315 ns
[    0.000003] sched_clock: 56 bits at 100MHz, resolution 10ns, wraps every 4398046511100ns
[    0.000359] Console: colour dummy device 80x25
[    0.000385] Calibrating delay loop (skipped), value calculated using timer frequency.. 200.00 BogoMIPS (lpj=400000)
[    0.000394] pid_max: default: 32768 minimum: 301
[    0.000514] Mount-cache hash table entries: 4096 (order: 3, 32768 bytes)
[    0.000528] Mountpoint-cache hash table entries: 4096 (order: 3, 32768 bytes)
[    0.001315] ASID allocator initialised with 65536 entries
[    0.001366] Hierarchical SRCU implementation.
[    0.001721] EFI services will not be available.
[    0.001747] zynqmp_plat_init Platform Management API v1.1
[    0.001752] zynqmp_plat_init Trustzone version v1.0
[    0.001865] smp: Bringing up secondary CPUs ...
[    0.002151] Detected VIPT I-cache on CPU1
[    0.002191] CPU1: Booted secondary processor [410fd034]
[    0.002499] Detected VIPT I-cache on CPU2
[    0.002518] CPU2: Booted secondary processor [410fd034]
[    0.002803] Detected VIPT I-cache on CPU3
[    0.002821] CPU3: Booted secondary processor [410fd034]
[    0.002865] smp: Brought up 1 node, 4 CPUs
[    0.002879] SMP: Total of 4 processors activated.
[    0.002886] CPU features: detected feature: 32-bit EL0 Support
[    0.002894] CPU: All CPU(s) started at EL2
[    0.002910] alternatives: patching kernel code
[    0.003652] devtmpfs: initialized
[    0.009576] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645041785100000 ns
[    0.009596] futex hash table entries: 1024 (order: 5, 131072 bytes)
[    0.016087] xor: measuring software checksum speed
[    0.056064]    8regs     :  2303.000 MB/sec
[    0.096093]    8regs_prefetch:  2053.000 MB/sec
[    0.136125]    32regs    :  2831.000 MB/sec
[    0.176154]    32regs_prefetch:  2456.000 MB/sec
[    0.176159] xor: using function: 32regs (2831.000 MB/sec)
[    0.176261] pinctrl core: initialized pinctrl subsystem
[    0.177038] NET: Registered protocol family 16
[    0.177816] cpuidle: using governor menu
[    0.178427] vdso: 2 pages (1 code @ ffffff8008a56000, 1 data @ ffffff8008e04000)
[    0.178440] hw-breakpoint: found 6 breakpoint and 4 watchpoint registers.
[    0.179049] DMA: preallocated 256 KiB pool for atomic allocations
[    0.200636] reset_zynqmp reset-controller: Xilinx zynqmp reset driver probed
[    0.201216] ARM CCI_400_r1 PMU driver probed
[    0.205881] zynqmp-pinctrl ff180000.pinctrl: zynqmp pinctrl initialized
[    0.216805] HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.284364] raid6: int64x1  gen()   456 MB/s
[    0.352420] raid6: int64x1  xor()   443 MB/s
[    0.420493] raid6: int64x2  gen()   690 MB/s
[    0.488498] raid6: int64x2  xor()   605 MB/s
[    0.556539] raid6: int64x4  gen()  1043 MB/s
[    0.624594] raid6: int64x4  xor()   765 MB/s
[    0.692639] raid6: int64x8  gen()   982 MB/s
[    0.760679] raid6: int64x8  xor()   751 MB/s
[    0.828746] raid6: neonx1   gen()   726 MB/s
[    0.896752] raid6: neonx1   xor()   852 MB/s
[    0.964805] raid6: neonx2   gen()  1169 MB/s
[    1.032875] raid6: neonx2   xor()  1207 MB/s
[    1.100939] raid6: neonx4   gen()  1505 MB/s
[    1.168955] raid6: neonx4   xor()  1440 MB/s
[    1.237031] raid6: neonx8   gen()  1666 MB/s
[    1.305058] raid6: neonx8   xor()  1532 MB/s
[    1.305062] raid6: using algorithm neonx8 gen() 1666 MB/s
[    1.305066] raid6: .... xor() 1532 MB/s, rmw enabled
[    1.305071] raid6: using neon recovery algorithm
[    1.305804] XGpio: /amba_pl@0/gpio@a0020000: registered, base is 511
[    1.305923] PLL: shutdown
[    1.305940] zynqmp_pll_disable() clock disable failed for iopll_int, ret = -13
[    1.306044] XGpio: /amba_pl@0/gpio@a0020000: dual channel registered, base is 510
[    1.306278] XGpio: /amba_pl@0/gpio@a0021000: registered, base is 509
[    1.306516] XGpio: /amba_pl@0/gpio@a0022000: registered, base is 507
[    1.306635] PLL: shutdown
[    1.306747] XGpio: /amba_pl@0/gpio@a0022000: dual channel registered, base is 505
[    1.307096] XGpio: /amba_pl@0/gpio@a0025000: registered, base is 495
[    1.308343] SCSI subsystem initialized
[    1.308568] usbcore: registered new interface driver usbfs
[    1.308605] usbcore: registered new interface driver hub
[    1.308648] usbcore: registered new device driver usb
[    1.308715] media: Linux media interface: v0.10
[    1.308739] Linux video capture interface: v2.00
[    1.308791] pps_core: LinuxPPS API ver. 1 registered
[    1.308796] pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.308815] PTP clock support registered
[    1.308843] EDAC MC: Ver: 3.0.0
[    1.308990] PLL: shutdown
[    1.309385] zynqmp-ipi ff9905c0.mailbox: Probed ZynqMP IPI Mailbox driver.
[    1.309640] FPGA manager framework
[    1.309765] fpga-region fpga-full: FPGA Region probed
[    1.309896] Advanced Linux Sound Architecture Driver Initialized.
[    1.310219] Bluetooth: Core ver 2.22
[    1.310245] NET: Registered protocol family 31
[    1.310249] Bluetooth: HCI device and connection manager initialized
[    1.310258] Bluetooth: HCI socket layer initialized
[    1.310265] Bluetooth: L2CAP socket layer initialized
[    1.310289] Bluetooth: SCO socket layer initialized
[    1.311000] clocksource: Switched to clocksource arch_sys_counter
[    1.311092] VFS: Disk quotas dquot_6.6.0
[    1.311143] VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    1.315593] NET: Registered protocol family 2
[    1.315968] TCP established hash table entries: 16384 (order: 5, 131072 bytes)
[    1.316079] TCP bind hash table entries: 16384 (order: 6, 262144 bytes)
[    1.316450] TCP: Hash tables configured (established 16384 bind 16384)
[    1.316554] UDP hash table entries: 1024 (order: 3, 32768 bytes)
[    1.316593] UDP-Lite hash table entries: 1024 (order: 3, 32768 bytes)
[    1.316734] NET: Registered protocol family 1
[    1.317038] RPC: Registered named UNIX socket transport module.
[    1.317042] RPC: Registered udp transport module.
[    1.317046] RPC: Registered tcp transport module.
[    1.317049] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    1.317636] hw perfevents: no interrupt-affinity property for /pmu, guessing.
[    1.317810] hw perfevents: enabled with armv8_pmuv3 PMU driver, 7 counters available
[    1.318710] audit: initializing netlink subsys (disabled)
[    1.319151] audit: type=2000 audit(1.312:1): state=initialized audit_enabled=0 res=1
[    1.320270] workingset: timestamp_bits=62 max_order=19 bucket_order=0
[    1.321029] NFS: Registering the id_resolver key type
[    1.321053] Key type id_resolver registered
[    1.321057] Key type id_legacy registered
[    1.321069] nfs4filelayout_init: NFSv4 File Layout Driver Registering...
[    1.321089] jffs2: version 2.2. (NAND) Â© 2001-2006 Red Hat, Inc.
[    1.346106] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 247)
[    1.346119] io scheduler noop registered
[    1.346124] io scheduler deadline registered
[    1.346141] io scheduler cfq registered (default)
[    1.346146] io scheduler mq-deadline registered
[    1.346150] io scheduler kyber registered
[    1.347851] xilinx-dpdma fd4c0000.dma: Xilinx DPDMA engine is probed
[    1.348288] xilinx-zynqmp-dma fd500000.dma: ZynqMP DMA driver Probe success
[    1.348445] xilinx-zynqmp-dma fd510000.dma: ZynqMP DMA driver Probe success
[    1.348599] xilinx-zynqmp-dma fd520000.dma: ZynqMP DMA driver Probe success
[    1.348752] xilinx-zynqmp-dma fd530000.dma: ZynqMP DMA driver Probe success
[    1.348908] xilinx-zynqmp-dma fd540000.dma: ZynqMP DMA driver Probe success
[    1.349067] xilinx-zynqmp-dma fd550000.dma: ZynqMP DMA driver Probe success
[    1.349221] xilinx-zynqmp-dma fd560000.dma: ZynqMP DMA driver Probe success
[    1.349378] xilinx-zynqmp-dma fd570000.dma: ZynqMP DMA driver Probe success
[    1.349605] xilinx-zynqmp-dma ffa80000.dma: ZynqMP DMA driver Probe success
[    1.349762] xilinx-zynqmp-dma ffa90000.dma: ZynqMP DMA driver Probe success
[    1.349917] xilinx-zynqmp-dma ffaa0000.dma: ZynqMP DMA driver Probe success
[    1.350073] xilinx-zynqmp-dma ffab0000.dma: ZynqMP DMA driver Probe success
[    1.350226] xilinx-zynqmp-dma ffac0000.dma: ZynqMP DMA driver Probe success
[    1.350385] xilinx-zynqmp-dma ffad0000.dma: ZynqMP DMA driver Probe success
[    1.350541] xilinx-zynqmp-dma ffae0000.dma: ZynqMP DMA driver Probe success
[    1.350700] xilinx-zynqmp-dma ffaf0000.dma: ZynqMP DMA driver Probe success
[    1.378603] Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
[    1.380600] a0000000.serial: ttyS3 at MMIO 0xa0001000 (irq = 51, base_baud = 6250000) is a 16550A
[    1.381107] a0010000.serial: ttyS1 at MMIO 0xa0011000 (irq = 52, base_baud = 6250000) is a 16550A
[    1.384103] cacheinfo: Unable to detect cache hierarchy for CPU 0
[    1.388750] brd: module loaded
[    1.392974] loop: module loaded
[    1.394034] mtdoops: mtd device (mtddev=name/number) must be supplied
[    1.396402] libphy: Fixed MDIO Bus: probed
[    1.397480] tun: Universal TUN/TAP device driver, 1.6
[    1.397695] CAN device driver interface
[    1.398887] usbcore: registered new interface driver asix
[    1.398963] usbcore: registered new interface driver ax88179_178a
[    1.399028] usbcore: registered new interface driver cdc_ether
[    1.399056] usbcore: registered new interface driver net1080
[    1.399087] usbcore: registered new interface driver cdc_subset
[    1.399114] usbcore: registered new interface driver zaurus
[    1.399159] usbcore: registered new interface driver cdc_ncm
[    1.399626] xilinx-axipmon ffa00000.perf-monitor: Probed Xilinx APM
[    1.400204] ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.400209] ehci-pci: EHCI PCI platform driver
[    1.400554] usbcore: registered new interface driver uas
[    1.400593] usbcore: registered new interface driver usb-storage
[    1.401208] rtc_zynqmp ffa60000.rtc: rtc core: registered ffa60000.rtc as rtc0
[    1.401273] i2c /dev entries driver
[    1.402276] IR NEC protocol handler initialized
[    1.402280] IR RC5(x/sz) protocol handler initialized
[    1.402284] IR RC6 protocol handler initialized
[    1.402287] IR JVC protocol handler initialized
[    1.402291] IR Sony protocol handler initialized
[    1.402295] IR SANYO protocol handler initialized
[    1.402299] IR Sharp protocol handler initialized
[    1.402304] IR MCE Keyboard/mouse protocol handler initialized
[    1.402307] IR XMP protocol handler initialized
[    1.404020] usbcore: registered new interface driver uvcvideo
[    1.404024] USB Video Class driver (1.1.1)
[    1.405083] cdns-wdt fd4d0000.watchdog: Xilinx Watchdog Timer at ffffff80091ad000 with timeout 60s
[    1.405400] cdns-wdt ff150000.watchdog: Xilinx Watchdog Timer at ffffff80091b5000 with timeout 10s
[    1.405621] Bluetooth: HCI UART driver ver 2.3
[    1.405629] Bluetooth: HCI UART protocol H4 registered
[    1.405633] Bluetooth: HCI UART protocol BCSP registered
[    1.405661] Bluetooth: HCI UART protocol LL registered
[    1.405665] Bluetooth: HCI UART protocol ATH3K registered
[    1.405669] Bluetooth: HCI UART protocol Three-wire (H5) registered
[    1.405716] Bluetooth: HCI UART protocol Intel registered
[    1.405720] Bluetooth: HCI UART protocol QCA registered
[    1.405759] usbcore: registered new interface driver bcm203x
[    1.405789] usbcore: registered new interface driver bpa10x
[    1.405821] usbcore: registered new interface driver bfusb
[    1.405855] usbcore: registered new interface driver btusb
[    1.405860] Bluetooth: Generic Bluetooth SDIO driver ver 0.1
[    1.405914] usbcore: registered new interface driver ath3k
[    1.406051] EDAC MC: ECC not enabled
[    1.406233] EDAC DEVICE0: Giving out device to module zynqmp-ocm-edac controller zynqmp_ocm: DEV ff960000.memory-controller (INTERRUPT)
[    1.407429] sdhci: Secure Digital Host Controller Interface driver
[    1.407434] sdhci: Copyright(c) Pierre Ossman
[    1.407439] sdhci-pltfm: SDHCI platform and OF driver helper
[    1.451225] mmc0: SDHCI controller on ff160000.mmc [ff160000.mmc] using ADMA 64-bit
[    1.457721] ledtrig-cpu: registered to indicate activity on CPUs
[    1.457907] usbcore: registered new interface driver usbhid
[    1.457911] usbhid: USB HID core driver
[    1.460136] fpga_manager fpga0: Xilinx ZynqMP FPGA Manager registered
[    1.461612] usbcore: registered new interface driver snd-usb-audio
[    1.462577] pktgen: Packet Generator for packet performance testing. Version: 2.75
[    1.464815] Netfilter messages via NETLINK v0.30.
[    1.464958] ip_tables: (C) 2000-2006 Netfilter Core Team
[    1.465128] Initializing XFRM netlink socket
[    1.465208] NET: Registered protocol family 10
[    1.465655] Segment Routing with IPv6
[    1.465702] ip6_tables: (C) 2000-2006 Netfilter Core Team
[    1.465834] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    1.466204] NET: Registered protocol family 17
[    1.466217] NET: Registered protocol family 15
[    1.466236] bridge: filtering via arp/ip/ip6tables is no longer available by default. Update your scripts to load br_netfilter if you need this.
[    1.466242] Ebtables v2.0 registered
[    1.466352] can: controller area network core (rev 20170425 abi 9)
[    1.466391] NET: Registered protocol family 29
[    1.466396] can: raw protocol (rev 20170425)
[    1.466401] can: broadcast manager protocol (rev 20170425 t)
[    1.466408] can: netlink gateway (rev 20170425) max_hops=1
[    1.466725] Bluetooth: RFCOMM TTY layer initialized
[    1.466734] Bluetooth: RFCOMM socket layer initialized
[    1.466752] Bluetooth: RFCOMM ver 1.11
[    1.466760] Bluetooth: BNEP (Ethernet Emulation) ver 1.3
[    1.466763] Bluetooth: BNEP filters: protocol multicast
[    1.466771] Bluetooth: BNEP socket layer initialized
[    1.466775] Bluetooth: HIDP (Human Interface Emulation) ver 1.2
[    1.466782] Bluetooth: HIDP socket layer initialized
[    1.466933] 9pnet: Installing 9P2000 support
[    1.466958] Key type dns_resolver registered
[    1.467459] registered taskstats version 1
[    1.467838] Btrfs loaded, crc32c=crc32c-generic
[    1.474572] ff000000.serial: ttyPS2 at MMIO 0xff000000 (irq = 40, base_baud = 6249999) is a xuartps
[    1.475142] ff010000.serial: ttyPS0 at MMIO 0xff010000 (irq = 41, base_baud = 6249999) is a xuartps
[    1.621170] mmc0: new high speed SDHC card at address aaaa
[    1.628665] mmcblk0: mmc0:aaaa SC32G 29.7 GiB 
[    1.636349]  mmcblk0: p1 p2
[    3.038833] console [ttyPS0] enabled
[    3.043877] xilinx-psgtr fd400000.zynqmp_phy: Lane:1 type:8 protocol:4 pll_locked:yes
[    3.052143] PLL: shutdown
[    3.054843] PLL: shutdown
[    3.057943] PLL: enable
[    3.060483] PLL: shutdown
[    3.064149] PLL: enable
[    3.066668] xilinx-dp-snd-codec fd4a0000.zynqmp-display:zynqmp_dp_snd_codec0: Xilinx DisplayPort Sound Codec probed
[    3.077372] xilinx-dp-snd-pcm zynqmp_dp_snd_pcm0: Xilinx DisplayPort Sound PCM probed
[    3.085426] xilinx-dp-snd-pcm zynqmp_dp_snd_pcm1: Xilinx DisplayPort Sound PCM probed
[    3.093840] xilinx-dp-snd-card fd4a0000.zynqmp-display:zynqmp_dp_snd_card: xilinx-dp-snd-codec-dai <-> xilinx-dp-snd-codec-dai mapping ok
[    3.106282] xilinx-dp-snd-card fd4a0000.zynqmp-display:zynqmp_dp_snd_card: xilinx-dp-snd-codec-dai <-> xilinx-dp-snd-codec-dai mapping ok
[    3.119044] xilinx-dp-snd-card fd4a0000.zynqmp-display:zynqmp_dp_snd_card: Xilinx DisplayPort Sound Card probed
[    3.129229] OF: graph: no port node found in /amba/zynqmp-display@fd4a0000
[    3.136238] [drm] Supports vblank timestamp caching Rev 2 (21.10.2013).
[    3.142846] [drm] No driver support for vblank timestamp query.
[    3.148836] xlnx-drm xlnx-drm.0: bound fd4a0000.zynqmp-display (ops 0xffffff8008b080e8)
[    4.235012] [drm] Cannot find any crtc or sizes
[    4.239749] [drm] Initialized xlnx 1.0.0 20130509 for fd4a0000.zynqmp-display on minor 0
[    4.247849] zynqmp-display fd4a0000.zynqmp-display: ZynqMP DisplayPort Subsystem driver probed
[    4.257477] xilinx-psgtr fd400000.zynqmp_phy: Lane:2 type:0 protocol:3 pll_locked:yes
[    4.268942] xilinx-psgtr fd400000.zynqmp_phy: Lane:3 type:1 protocol:3 pll_locked:yes
[    4.278977] xhci-hcd xhci-hcd.0.auto: xHCI Host Controller
[    4.284481] xhci-hcd xhci-hcd.0.auto: new USB bus registered, assigned bus number 1
[    4.292369] xhci-hcd xhci-hcd.0.auto: hcc params 0x0238f625 hci version 0x100 quirks 0x22010010
[    4.301112] xhci-hcd xhci-hcd.0.auto: irq 72, io mem 0xfe300000
[    4.307173] usb usb1: New USB device found, idVendor=1d6b, idProduct=0002
[    4.313957] usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1
[    4.321176] usb usb1: Product: xHCI Host Controller
[    4.326044] usb usb1: Manufacturer: Linux 4.14.0-xilinx-v2018.3 xhci-hcd
[    4.332736] usb usb1: SerialNumber: xhci-hcd.0.auto
[    4.337916] hub 1-0:1.0: USB hub found
[    4.341685] hub 1-0:1.0: 1 port detected
[    4.345792] xhci-hcd xhci-hcd.0.auto: xHCI Host Controller
[    4.351278] xhci-hcd xhci-hcd.0.auto: new USB bus registered, assigned bus number 2
[    4.358977] usb usb2: We don't know the algorithms for LPM for this host, disabling LPM.
[    4.367134] usb usb2: New USB device found, idVendor=1d6b, idProduct=0003
[    4.373918] usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=1
[    4.381137] usb usb2: Product: xHCI Host Controller
[    4.386004] usb usb2: Manufacturer: Linux 4.14.0-xilinx-v2018.3 xhci-hcd
[    4.392697] usb usb2: SerialNumber: xhci-hcd.0.auto
[    4.397818] hub 2-0:1.0: USB hub found
[    4.401581] hub 2-0:1.0: 1 port detected
[    4.407273] i2c i2c-0: Added multiplexed i2c bus 2
[    4.412205] i2c i2c-0: Added multiplexed i2c bus 3
[    4.417123] i2c i2c-0: Added multiplexed i2c bus 4
[    4.422047] i2c i2c-0: Added multiplexed i2c bus 5
[    4.427572] tps65086 6-005e: Failed to read revision register
[    4.433426] i2c i2c-0: Added multiplexed i2c bus 6
[    4.438821] ina2xx 7-0040: error configuring the device: -6
[    4.444439] i2c i2c-0: Added multiplexed i2c bus 7
[    4.449372] i2c i2c-0: Added multiplexed i2c bus 8
[    4.454295] i2c i2c-0: Added multiplexed i2c bus 9
[    4.459089] pca954x 0-0075: registered 8 multiplexed busses for I2C switch pca9548
[    4.466692] i2c i2c-0: Failed to register i2c client pca9548 at 0x75 (-16)
[    4.473562] i2c i2c-0: of_i2c: Failure registering /amba/i2c@ff030000/i2cswitch@75
[    4.481122] i2c i2c-0: Failed to create I2C device for /amba/i2c@ff030000/i2cswitch@75
[    4.489034] cdns-i2c ff030000.i2c: 100 kHz mmio ff030000 irq 31
[    4.496789] sdhci-arasan ff170000.mmc: allocated mmc-pwrseq
[    4.547007] mmc1: SDHCI controller on ff170000.mmc [ff170000.mmc] using ADMA 64-bit
[    4.562071] input: gpio-keys as /devices/platform/gpio-keys/input/input0
[    4.569047] rtc_zynqmp ffa60000.rtc: setting system clock to 1970-01-01 00:00:06 UTC (6)
[    4.577138] of_cfs_init
[    4.579601] of_cfs_init: OK
[    4.582661] PLL: shutdown
[    4.586195] ALSA device list:
[    4.589151]   #0: DisplayPort monitor
[    4.597893] EXT4-fs (mmcblk0p2): couldn't mount as ext3 due to feature incompatibilities
[    4.615854] mmc1: new high speed SDIO card at address 0001
[    4.624684] EXT4-fs (mmcblk0p2): mounted filesystem with ordered data mode. Opts: (null)
[    4.632795] VFS: Mounted root (ext4 filesystem) on device 179:2.
[    4.647886] devtmpfs: mounted
[    4.651062] Freeing unused kernel memory: 512K
[    4.735012] usb 1-1: new high-speed USB device number 2 using xhci-hcd
[    4.887516] usb 1-1: New USB device found, idVendor=0424, idProduct=2744
[    4.894216] usb 1-1: New USB device strings: Mfr=1, Product=2, SerialNumber=0
[    4.901349] usb 1-1: Product: USB2744
[    4.905001] usb 1-1: Manufacturer: Microchip Tech
[    4.935151] hub 1-1:1.0: USB hub found
[    4.938928] hub 1-1:1.0: 4 ports detected
[    5.015069] usb 2-1: new SuperSpeed USB device number 2 using xhci-hcd
[    5.039379] usb 2-1: New USB device found, idVendor=0424, idProduct=5744
[    5.046070] usb 2-1: New USB device strings: Mfr=2, Product=3, SerialNumber=0
[    5.053198] usb 2-1: Product: USB5744
[    5.056864] usb 2-1: Manufacturer: Microchip Tech
[    5.063097] hub 2-1:1.0: USB hub found
[    5.066868] hub 2-1:1.0: 3 ports detected
[    5.159552] systemd[1]: System time before build time, advancing clock.
[    5.190190] systemd[1]: systemd 237 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD -IDN2 +IDN -PCRE2 default-hierarchy=hybrid)
[    5.216259] systemd[1]: Detected architecture arm64.

Welcome to [1mUbuntu 18.04.5 LTS[0m!

[    5.255919] systemd[1]: Set hostname to <EE382N4>.
[    5.271038] usb 1-1.4: new high-speed USB device number 3 using xhci-hcd
[    5.379734] usb 1-1.4: New USB device found, idVendor=0424, idProduct=2740
[    5.386626] usb 1-1.4: New USB device strings: Mfr=1, Product=2, SerialNumber=0
[    5.393933] usb 1-1.4: Product: Hub Controller
[    5.398376] usb 1-1.4: Manufacturer: Microchip Tech
[    5.511037] [drm] Cannot find any crtc or sizes
[    5.786626] systemd[1]: File /lib/systemd/system/systemd-journald.service:36 configures an IP firewall (IPAddressDeny=any), but the local system does not support BPF/cgroup based firewalling.
[    5.803674] systemd[1]: Proceeding WITHOUT firewalling in effect! (This warning is only shown for the first loaded unit using IP firewalling.)
[    6.017339] systemd[1]: Reached target User and Group Name Lookups.
[[0;32m  OK  [0m] Reached target User and Group Name Lookups.
[    6.035377] systemd[1]: Created slice User and Session Slice.
[[0;32m  OK  [0m] Created slice User and Session Slice.
[    6.051152] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[[0;32m  OK  [0m] Started Forward Password Requests to Wall Directory Watch.
[    6.075100] systemd[1]: Reached target Swap.
[[0;32m  OK  [0m] Reached target Swap.
[    6.091291] systemd[1]: Created slice System Slice.
[[0;32m  OK  [0m] Created slice System Slice.
[[0;32m  OK  [0m] Listening on Device-mapper event daemon FIFOs.
[[0;32m  OK  [0m] Listening on udev Kernel Socket.
[[0;32m  OK  [0m] Listening on fsck to fsckd communication Socket.
[[0;32m  OK  [0m] Listening on Journal Audit Socket.
[[0;32m  OK  [0m] Listening on LVM2 metadata daemon socket.
[[0;32m  OK  [0m] Listening on Syslog Socket.
[[0;32m  OK  [0m] Listening on Journal Socket (/dev/log).
[[0;32m  OK  [0m] Listening on LVM2 poll daemon socket.
[[0;32m  OK  [0m] Listening on /dev/initctl Compatibility Named Pipe.
[[0;32m  OK  [0m] Listening on Journal Socket.
         Starting Uncomplicated firewall...
         Mounting POSIX Message Queue File System...
         Starting Load Kernel Modules...
         Starting Remount Root and Kernel File Systems...
         Starting Journal Service...
         Mounting Kernel Debug File System...
         Starting Monitoring of LVM2 mirrorsâ€¦ng dmeventd or progress polling...
         Mounting Huge Pages File System...
[[0;32m  OK  [0m] Listening on udev Control Socket.
         Starting udev Coldplug all Devices...
         Starting Create Static Device Nodes in /dev...
[[0;32m  OK  [0m] Started Read required files in advance.
         Starting Set the console keyboard layout...
[[0;32m  OK  [0m] Created slice system-serial\x2dgetty.slice.
[[0;32m  OK  [0m] Reached target Slices.
[[0;32m  OK  [0m] Started Journal Service.
[[0;32m  OK  [0m] Started Uncomplicated firewall.
[[0;32m  OK  [0m] Mounted POSIX Message Queue File System.
[[0;32m  OK  [0m] Started Load Kernel Modules.
[[0;32m  OK  [0m] Mounted Kernel Debug File System.
[[0;32m  OK  [0m] Mounted Huge Pages File System.
[[0;32m  OK  [0m] Started LVM2 metadata daemon.
         Starting Apply Kernel Variables...
[    6.651718] EXT4-fs (mmcblk0p2): re-mounted. Opts: errors=remount-ro
         Mounting Kernel Configuration File System...
[[0;32m  OK  [0m] Started Remount Root and Kernel File Systems.
[[0;32m  OK  [0m] Mounted Kernel Configuration File System.
         Starting Flush Journal to Persistent Storage...
         Starting Load/Save Random Seed...
[    6.769980] systemd-journald[1813]: Received request to flush runtime journal from PID 1
[[0;32m  OK  [0m] Started Apply Kernel Variables.
[[0;32m  OK  [0m] Started Create Static Device Nodes in /dev.
[[0;32m  OK  [0m] Started Load/Save Random Seed.
         Starting udev Kernel Device Manager...
[[0;32m  OK  [0m] Started udev Coldplug all Devices.
[[0;32m  OK  [0m] Started Set the console keyboard layout.
[[0;32m  OK  [0m] Started udev Kernel Device Manager.
[[0;32m  OK  [0m] Started Dispatch Password Requests to Console Directory Watch.
[[0;32m  OK  [0m] Reached target Local Encrypted Volumes.
[[0;32m  OK  [0m] Started Flush Journal to Persistent Storage.
[[0;32m  OK  [0m] Reached target Sound Card.
[[0;32m  OK  [0m] Found device /dev/ttyPS0.
[[0;32m  OK  [0m] Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[[0;32m  OK  [0m] Started Monitoring of LVM2 mirrors,â€¦sing dmeventd or progress polling.
[[0;32m  OK  [0m] Reached target Local File Systems (Pre).
[[0;32m  OK  [0m] Reached target Local File Systems.
         Starting Set console font and keymap...
         Starting ebtables ruleset management...
         Starting Create Volatile Files and Directories...
         Starting Tell Plymouth To Write Out Runtime Data...
         Starting Clean up any mess left by 0dns-up...
[[0;32m  OK  [0m] Started Set console font and keymap.
[[0;32m  OK  [0m] Started Tell Plymouth To Write Out Runtime Data.
[[0;32m  OK  [0m] Started Clean up any mess left by 0dns-up.
[[0;32m  OK  [0m] Started Create Volatile Files and Directories.
         Starting Network Time Synchronization...
         Starting Update UTMP about System Boot/Shutdown...
         Starting Nameserver information manager...
[[0;32m  OK  [0m] Started Nameserver information manager.
[[0;32m  OK  [0m] Started Update UTMP about System Boot/Shutdown.
[[0;32m  OK  [0m] Started ebtables ruleset management.
[[0;32m  OK  [0m] Reached target Network (Pre).
         Starting Raise network interfaces...
         Starting Network Service...
[[0;32m  OK  [0m] Started Network Time Synchronization.
[[0;32m  OK  [0m] Reached target System Time Synchronized.
[[0;32m  OK  [0m] Reached target System Initialization.
[[0;32m  OK  [0m] Listening on D-Bus System Message Bus Socket.
[[0;32m  OK  [0m] Listening on CUPS Scheduler.
[[0;32m  OK  [0m] Started Trigger anacron every hour.
[[0;32m  OK  [0m] Started Discard unused blocks once a week.
[[0;32m  OK  [0m] Listening on ACPID Listen Socket.
[[0;32m  OK  [0m] Started CUPS Scheduler.
[[0;32m  OK  [0m] Listening on Avahi mDNS/DNS-SD Stack Activation Socket.
[[0;32m  OK  [0m] Started Message of the Day.
[[0;32m  OK  [0m] Started resolvconf-pull-resolved.path.
[[0;32m  OK  [0m] Listening on Open-iSCSI iscsid Socket.
         Starting Socket activation for snappy daemon.
[[0;32m  OK  [0m] Started Daily Cleanup of Temporary Directories.
[[0;32m  OK  [0m] Started ACPI Events Check.
[[0;32m  OK  [0m] Reached target Paths.
[[0;32m  OK  [0m] Started Daily apt download activities.
[[0;32m  OK  [0m] Listening on UUID daemon activation socket.
[[0;32m  OK  [0m] Started Daily apt upgrade and clean activities.
[[0;32m  OK  [0m] Reached target Timers.
         Starting LXD - unix socket.
[[0;32m  OK  [0m] Started Network Service.
[[0;32m  OK  [0m] Listening on Socket activation for snappy daemon.
[[0;32m  OK  [0m] Listening on LXD - unix socket.
[[0;32m  OK  [0m] Reached target Sockets.
[[0;32m  OK  [0m] Reached target Basic System.
[[0;32m  OK  [0m] Started Run anacron jobs.
[[0;32m  OK  [0m] Started CUPS Scheduler.
         Starting Avahi mDNS/DNS-SD Stack...
[[0;32m  OK  [0m] Started FUSE filesystem for LXC.
         Starting Dispatcher daemon for systemd-networkd...
         Starting LXD - container startup/shutdown...
         Starting Initialize hardware monitoring sensors...
[[0;32m  OK  [0m] Started Set the CPU Frequency Scaling governor.
         Starting Login Service...
[[0;32m  OK  [0m] Started D-Bus System Message Bus.
[[0;32m  OK  [0m] Started Login Service.
         Starting WPA supplicant...
         Starting LSB: MD monitoring daemon...
[[0;32m  OK  [0m] Started Regular background program processing daemon.
[[0;32m  OK  [0m] Started irqbalance daemon.
[[0;32m  OK  [0m] Started Deferred execution scheduler.
         Starting Network Manager...
         Starting LSB: Record successful boot for GRUB...
         Starting Modem Manager...
         Starting Disk Manager...
         Starting System Logging Service...
         Starting Save/Restore Sound Card State...
         Starting Restore /etc/resolv.conf iâ€¦fore the ppp link was shut down...
         Starting Accounts Service...
         Starting Snap Daemon...
         Starting Wait for Network to be Configured...
         Starting Network Name Resolution...
[[0;1;31mFAILED[0m] Failed to start Raise network interfaces.
See 'systemctl status networking.service' for details.
[[0;32m  OK  [0m] Started LSB: MD monitoring daemon.
[[0;32m  OK  [0m] Started Restore /etc/resolv.conf ifâ€¦before the ppp link was shut down.
[[0;32m  OK  [0m] Started Wait for Network to be Configured.
[[0;32m  OK  [0m] Started Initialize hardware monitoring sensors.
[[0;32m  OK  [0m] Started Save/Restore Sound Card State.
[[0;32m  OK  [0m] Started Avahi mDNS/DNS-SD Stack.
[[0;32m  OK  [0m] Started WPA supplicant.
[[0;32m  OK  [0m] Started Make remote CUPS printers available locally.
[[0;32m  OK  [0m] Started Network Name Resolution.
[[0;32m  OK  [0m] Started System Logging Service.
[[0;32m  OK  [0m] Reached target Host and Network Name Lookups.
         Starting resolvconf-pull-resolved.service...
[[0;32m  OK  [0m] Started resolvconf-pull-resolved.service.
[[0;32m  OK  [0m] Started LXD - container startup/shutdown.
[[0;32m  OK  [0m] Stopped FUSE filesystem for LXC.
[[0;32m  OK  [0m] Started FUSE filesystem for LXC.
         Starting Authorization Manager...
[[0;32m  OK  [0m] Started LSB: Record successful boot for GRUB.
[[0;32m  OK  [0m] Stopped FUSE filesystem for LXC.
[[0;32m  OK  [0m] Started FUSE filesystem for LXC.
[[0;32m  OK  [0m] Stopped FUSE filesystem for LXC.
[[0;32m  OK  [0m] Started FUSE filesystem for LXC.
         Starting Hostname Service...
[[0;32m  OK  [0m] Started Authorization Manager.
[[0;32m  OK  [0m] Started Accounts Service.
[[0;32m  OK  [0m] Stopped FUSE filesystem for LXC.
[[0;32m  OK  [0m] Started FUSE filesystem for LXC.
[[0;32m  OK  [0m] Started Hostname Service.
[[0;32m  OK  [0m] Started Network Manager.
[[0;32m  OK  [0m] Reached target Network.
[[0;32m  OK  [0m] Started Unattended Upgrades Shutdown.
         Starting Network Manager Wait Online...
         Starting Network Manager Script Dispatcher Service...
[[0;32m  OK  [0m] Started Disk Manager.
[[0;32m  OK  [0m] Started Network Manager Script Dispatcher Service.
[[0;32m  OK  [0m] Stopped FUSE filesystem for LXC.
[[0;1;31mFAILED[0m] Failed to start FUSE filesystem for LXC.
See 'systemctl status lxcfs.service' for details.
[[0;32m  OK  [0m] Started Modem Manager.
[[0;32m  OK  [0m] Started Dispatcher daemon for systemd-networkd.
[[0;32m  OK  [0m] Started Network Manager Wait Online.
[[0;32m  OK  [0m] Reached target Network is Online.
         Starting OpenBSD Secure Shell server...
[[0;32m  OK  [0m] Started crash report submission daemon.
         Starting Availability of block devices...
[[0;32m  OK  [0m] Reached target Remote File Systems (Pre).
[[0;32m  OK  [0m] Reached target Remote File Systems.
         Starting LSB: Speech Dispatcher...
         Starting Tool to automatically collâ€¦ submit kernel crash signatures...
         Starting Permit User Sessions...
         Starting LSB: disk temperature monitoring daemon...
         Starting LSB: automatic crash report generation...
[[0;32m  OK  [0m] Started Availability of block devices.
[[0;32m  OK  [0m] Started Permit User Sessions.
         Starting Hold until boot process finishes up...
         Starting GNOME Display Manager...
[[0;32m  OK  [0m] Started LSB: Speech Dispatcher.
[[0;32m  OK  [0m] Started Snap Daemon.
[[0;32m  OK  [0m] Started LSB: disk temperature monitoring daemon.
[[0;32m  OK  [0m] Started LSB: automatic crash report generation.
[[0;32m  OK  [0m] Started Hold until boot process finishes up.
[[0;32m  OK  [0m] Started Tool to automatically colleâ€¦nd submit kernel crash signatures.
[[0;32m  OK  [0m] Started OpenBSD Secure Shell server.
         Starting Set console scheme...
[[0;32m  OK  [0m] Started Serial Getty on ttyPS0.
[[0;32m  OK  [0m] Reached target Login Prompts.
         Starting Wait until snapd is fully seeded...
[[0;32m  OK  [0m] Started Set console scheme.
[[0;32m  OK  [0m] Created slice system-getty.slice.
[[0;32m  OK  [0m] Started GNOME Display Manager.
[[0;32m  OK  [0m] Started Wait until snapd is fully seeded.
[[0;32m  OK  [0m] Reached target Multi-User System.
[[0;32m  OK  [0m] Reached target Graphical Interface.
[[0;32m  OK  [0m] Started Stop ureadahead data collection 45s after completed startup.
         Starting Update UTMP about System Runlevel Changes...
[[0;32m  OK  [0m] Started Update UTMP about System Runlevel Changes.

Ubuntu 18.04.5 LTS EE382N4 ttyPS0

EE382N4 login: untr   ltra96
Password: 
Last login: Thu Jul 22 10:43:09 CDT 2021 on ttyPS0
Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.14.0-xilinx-v2018.3 aarch64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Thu Sep  2 19:06:11 CDT 2021

  System load: 0.27               Memory usage: 6%   Processes:       115
  Usage of /:  32.4% of 28.15GB   Swap usage:   0%   Users logged in: 0

 * Super-optimized for small spaces - read how we shrank the memory
   footprint of MicroK8s to make it the smallest full K8s around.

   https://ubuntu.com/blog/microk8s-memory-optimisation

57 updates can be applied immediately.
43 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

New release '20.04.3 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


ultra96@EE382N4:~$ 
ultra96@EE382N4:~$ 
ultra96@EE382N4:~$ ls
examples.desktop  wifi_pass.bkp
ultra96@EE382N4:~$ git clone sudo halt[K[K[K[K[K[K[K[K[Khttps://github.com/CHINTADINESH/darknet
Cloning into 'darknet'...
fatal: unable to access 'https://github.com/CHINTADINESH/darknet/': Could not resolve host: github.com
ultra96@EE382N4:~$ ifconfig
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 642  bytes 40800 (40.8 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 642  bytes 40800 (40.8 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ultra96@EE382N4:~$ cat /root/wpa[K[K[K[K[K[K[K[K[K[K[K[K[Kls /root/
ls: cannot open directory '/root/': Permission denied
ultra96@EE382N4:~$ sudo cat /root/wpasd_[K[K[K[Ka_supplicant.conf
[sudo] password for ultra96: 
ctrl_interface=/var/run/wpa_supplicant
ctrl_interface_group=0
update_config=1


network={
        ssid="SpectrumSetup-FE"
        #psk="voyagegallon593"
        psk=5348181c402c51c77cff5435a44447ab23d599502a7e0c30bf5ebe00d8c6e157
}
ultra96@EE382N4:~$ sudo /root/wifi.h[Ksh
-----------------------------------------------------
Insert WILC kernel module
wilc_sdio             118784  0
Bring up the wlan0 interface
Successfully initialized wpa_supplicant
udhcpc: started, v1.27.2
udhcpc: sending discover
udhcpc: sending discover
udhcpc: sending discover
udhcpc: sending discover
udhcpc: sending discover
udhcpc: sending discover
udhcpc: sending discover
udhcpc: sending discover
udhcpc: sending select for 192.168.1.4
udhcpc: lease of 192.168.1.4 obtained, lease time 43200
ultra96@EE382N4:~$ pgi[K[King www.google.com
PING www.google.com (216.58.193.132) 56(84) bytes of data.
64 bytes from atl14s08-in-f132.1e100.net (216.58.193.132): icmp_seq=1 ttl=116 time=29.9 ms
64 bytes from atl14s08-in-f132.1e100.net (216.58.193.132): icmp_seq=2 ttl=116 time=28.5 ms
^C
--- www.google.com ping statistics ---
3 packets transmitted, 2 received, 33% packet loss, time 2002ms
rtt min/avg/max/mdev = 28.588/29.245/29.903/0.679 ms
ultra96@EE382N4:~$ kkk[K[K[Kset -o vi
ultra96@EE382N4:~$ set -o viping www.google.com[1Psudo /root/wifi.sh[C[C[C[C[Ccat /root/wpa_supplicant.conf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[16P/root/wifi.sh[C[C[C[C[Ccat /root/wpa_supplicant.conf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls /root/[K[1Pifconfiggit clone https://github.com/CHINTADINESH/darknet[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
Cloning into 'darknet'...
Username for 'https://github.com': CHINTADINESH
Password for 'https://CHINTADINESH@github.com': 
remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.
fatal: Authentication failed for 'https://github.com/CHINTADINESH/darknet/'
ultra96@EE382N4:~$ https://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@github.com/CHHINTADINESH/darknet.gitjj[K[K[K[K[K[K`
> 
> 
> ^C

ultra96@EE382N4:~$ 
ultra96@EE382N4:~$ ii[K[Khttps://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@github.com/CHHINTADINESH/darknet.git
-bash: https://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@github.com/CHINTADINESH/darknet.git: No such file or directory
ultra96@EE382N4:~$ git clone https://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@gitthub.com/CHINTADINESH/darknet.git
Cloning into 'darknet'...
remote: Enumerating objects: 15315, done.[K
remote: Counting objects:  14% (1/7)[Kremote: Counting objects:  28% (2/7)[Kremote: Counting objects:  42% (3/7)[Kremote: Counting objects:  57% (4/7)[Kremote: Counting objects:  71% (5/7)[Kremote: Counting objects:  85% (6/7)[Kremote: Counting objects: 100% (7/7)[Kremote: Counting objects: 100% (7/7), done.[K
remote: Compressing objects:  25% (1/4)[Kremote: Compressing objects:  50% (2/4)[Kremote: Compressing objects:  75% (3/4)[Kremote: Compressing objects: 100% (4/4)[Kremote: Compressing objects: 100% (4/4), done.[K
Receiving objects:   0% (1/15315)   Receiving objects:   1% (154/15315)   Receiving objects:   2% (307/15315)   Receiving objects:   3% (460/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:   4% (613/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:   5% (766/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:   6% (919/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:   7% (1073/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:   8% (1226/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:   9% (1379/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:   9% (1426/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:  10% (1532/15315), 148.01 KiB | 258.00 KiB/s   Receiving objects:  11% (1685/15315), 444.01 KiB | 408.00 KiB/s   Receiving objects:  12% (1838/15315), 444.01 KiB | 408.00 KiB/s   Receiving objects:  13% (1991/15315), 444.01 KiB | 408.00 KiB/s   Receiving objects:  14% (2145/15315), 444.01 KiB | 408.00 KiB/s   Receiving objects:  15% (2298/15315), 444.01 KiB | 408.00 KiB/s   Receiving objects:  16% (2451/15315), 444.01 KiB | 408.00 KiB/s   Receiving objects:  17% (2604/15315), 444.01 KiB | 408.00 KiB/s   Receiving objects:  18% (2757/15315), 444.01 KiB | 408.00 KiB/s   Receiving objects:  19% (2910/15315), 780.01 KiB | 454.00 KiB/s   Receiving objects:  20% (3063/15315), 780.01 KiB | 454.00 KiB/s   Receiving objects:  20% (3068/15315), 780.01 KiB | 454.00 KiB/s   Receiving objects:  21% (3217/15315), 1.11 MiB | 511.00 KiB/s   Receiving objects:  22% (3370/15315), 1.11 MiB | 511.00 KiB/s   Receiving objects:  22% (3459/15315), 1.27 MiB | 470.00 KiB/s   Receiving objects:  22% (3464/15315), 1.55 MiB | 350.00 KiB/s   Receiving objects:  22% (3465/15315), 1.89 MiB | 363.00 KiB/s   Receiving objects:  22% (3465/15315), 1.94 MiB | 301.00 KiB/s   Receiving objects:  22% (3467/15315), 2.08 MiB | 304.00 KiB/s   Receiving objects:  23% (3523/15315), 2.31 MiB | 295.00 KiB/s   Receiving objects:  24% (3676/15315), 2.31 MiB | 295.00 KiB/s   Receiving objects:  25% (3829/15315), 2.31 MiB | 295.00 KiB/s   Receiving objects:  26% (3982/15315), 2.31 MiB | 295.00 KiB/s   Receiving objects:  27% (4136/15315), 2.31 MiB | 295.00 KiB/s   Receiving objects:  27% (4233/15315), 2.75 MiB | 320.00 KiB/s   Receiving objects:  28% (4289/15315), 2.75 MiB | 320.00 KiB/s   Receiving objects:  28% (4310/15315), 3.74 MiB | 394.00 KiB/s   Receiving objects:  28% (4311/15315), 4.79 MiB | 586.00 KiB/s   Receiving objects:  28% (4312/15315), 5.29 MiB | 644.00 KiB/s   Receiving objects:  29% (4442/15315), 5.29 MiB | 644.00 KiB/s   Receiving objects:  30% (4595/15315), 5.93 MiB | 878.00 KiB/s   Receiving objects:  31% (4748/15315), 5.93 MiB | 878.00 KiB/s   Receiving objects:  32% (4901/15315), 5.93 MiB | 878.00 KiB/s   Receiving objects:  33% (5054/15315), 5.93 MiB | 878.00 KiB/s   Receiving objects:  34% (5208/15315), 5.93 MiB | 878.00 KiB/s   Receiving objects:  35% (5361/15315), 5.93 MiB | 878.00 KiB/s   Receiving objects:  36% (5514/15315), 6.61 MiB | 996.00 KiB/s   Receiving objects:  36% (5580/15315), 6.61 MiB | 996.00 KiB/s   Receiving objects:  37% (5667/15315), 6.61 MiB | 996.00 KiB/s   Receiving objects:  38% (5820/15315), 6.61 MiB | 996.00 KiB/s   Receiving objects:  39% (5973/15315), 7.15 MiB | 1.04 MiB/s   Receiving objects:  40% (6126/15315), 7.15 MiB | 1.04 MiB/s   Receiving objects:  41% (6280/15315), 7.15 MiB | 1.04 MiB/s   Receiving objects:  42% (6433/15315), 7.15 MiB | 1.04 MiB/s   Receiving objects:  43% (6586/15315), 7.15 MiB | 1.04 MiB/s   Receiving objects:  44% (6739/15315), 7.15 MiB | 1.04 MiB/s   Receiving objects:  45% (6892/15315), 7.92 MiB | 1.10 MiB/s   Receiving objects:  46% (7045/15315), 7.92 MiB | 1.10 MiB/s   Receiving objects:  46% (7093/15315), 7.92 MiB | 1.10 MiB/s   Receiving objects:  47% (7199/15315), 7.92 MiB | 1.10 MiB/s   Receiving objects:  48% (7352/15315), 7.92 MiB | 1.10 MiB/s   Receiving objects:  49% (7505/15315), 8.53 MiB | 1.13 MiB/s   Receiving objects:  50% (7658/15315), 8.53 MiB | 1.13 MiB/s   Receiving objects:  51% (7811/15315), 8.53 MiB | 1.13 MiB/s   Receiving objects:  52% (7964/15315), 8.53 MiB | 1.13 MiB/s   Receiving objects:  53% (8117/15315), 8.53 MiB | 1.13 MiB/s   Receiving objects:  54% (8271/15315), 8.53 MiB | 1.13 MiB/s   Receiving objects:  55% (8424/15315), 8.53 MiB | 1.13 MiB/s   Receiving objects:  56% (8577/15315), 8.53 MiB | 1.13 MiB/s   Receiving objects:  57% (8730/15315), 9.26 MiB | 1.19 MiB/s   Receiving objects:  58% (8883/15315), 9.26 MiB | 1.19 MiB/s   Receiving objects:  59% (9036/15315), 9.26 MiB | 1.19 MiB/s   Receiving objects:  59% (9057/15315), 9.26 MiB | 1.19 MiB/s   Receiving objects:  60% (9189/15315), 9.26 MiB | 1.19 MiB/s   Receiving objects:  61% (9343/15315), 9.26 MiB | 1.19 MiB/s   Receiving objects:  62% (9496/15315), 9.95 MiB | 1.22 MiB/s   Receiving objects:  63% (9649/15315), 9.95 MiB | 1.22 MiB/s   Receiving objects:  64% (9802/15315), 9.95 MiB | 1.22 MiB/s   Receiving objects:  65% (9955/15315), 9.95 MiB | 1.22 MiB/s   Receiving objects:  66% (10108/15315), 10.47 MiB | 1.22 MiB/s   Receiving objects:  66% (10124/15315), 10.47 MiB | 1.22 MiB/s   Receiving objects:  67% (10262/15315), 10.47 MiB | 1.22 MiB/s   Receiving objects:  68% (10415/15315), 10.47 MiB | 1.22 MiB/s   Receiving objects:  69% (10568/15315), 10.47 MiB | 1.22 MiB/s   Receiving objects:  70% (10721/15315), 10.94 MiB | 1.22 MiB/s   Receiving objects:  71% (10874/15315), 10.94 MiB | 1.22 MiB/s   Receiving objects:  72% (11027/15315), 10.94 MiB | 1.22 MiB/s   Receiving objects:  73% (11180/15315), 10.94 MiB | 1.22 MiB/s   Receiving objects:  74% (11334/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  75% (11487/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  75% (11552/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  76% (11640/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  77% (11793/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  78% (11946/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  79% (12099/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  80% (12252/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  81% (12406/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  82% (12559/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  83% (12712/15315), 11.50 MiB | 1.19 MiB/s   Receiving objects:  84% (12865/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  85% (13018/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  86% (13171/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  87% (13325/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  88% (13478/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  89% (13631/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  90% (13784/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  91% (13937/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  92% (14090/15315), 12.18 MiB | 1.19 MiB/s   Receiving objects:  92% (14182/15315), 13.11 MiB | 1.27 MiB/s   Receiving objects:  93% (14243/15315), 13.11 MiB | 1.27 MiB/s   Receiving objects:  94% (14397/15315), 13.11 MiB | 1.27 MiB/s   Receiving objects:  95% (14550/15315), 13.11 MiB | 1.27 MiB/s   Receiving objects:  96% (14703/15315), 13.11 MiB | 1.27 MiB/s   Receiving objects:  97% (14856/15315), 13.11 MiB | 1.27 MiB/s   Receiving objects:  98% (15009/15315), 13.11 MiB | 1.27 MiB/s   Receiving objects:  99% (15162/15315), 13.11 MiB | 1.27 MiB/s   remote: Total 15315 (delta 1), reused 5 (delta 1), pack-reused 15308[K
Receiving objects: 100% (15315/15315), 13.69 MiB | 1.24 MiB/s   Receiving objects: 100% (15315/15315), 13.72 MiB | 803.00 KiB/s, done.
Resolving deltas:   0% (0/10401)   Resolving deltas:   1% (147/10401)   Resolving deltas:   2% (213/10401)   Resolving deltas:   3% (313/10401)   Resolving deltas:   4% (436/10401)   Resolving deltas:   5% (540/10401)   Resolving deltas:   7% (764/10401)   Resolving deltas:   9% (986/10401)   Resolving deltas:  10% (1066/10401)   Resolving deltas:  11% (1178/10401)   Resolving deltas:  12% (1260/10401)   Resolving deltas:  13% (1424/10401)   Resolving deltas:  14% (1512/10401)   Resolving deltas:  15% (1564/10401)   Resolving deltas:  16% (1672/10401)   Resolving deltas:  17% (1785/10401)   Resolving deltas:  18% (1889/10401)   Resolving deltas:  19% (2016/10401)   Resolving deltas:  20% (2091/10401)   Resolving deltas:  21% (2187/10401)   Resolving deltas:  22% (2321/10401)   Resolving deltas:  24% (2501/10401)   Resolving deltas:  25% (2629/10401)   Resolving deltas:  26% (2724/10401)   Resolving deltas:  27% (2816/10401)   Resolving deltas:  28% (2919/10401)   Resolving deltas:  29% (3055/10401)   Resolving deltas:  30% (3141/10401)   Resolving deltas:  31% (3233/10401)   Resolving deltas:  32% (3346/10401)   Resolving deltas:  33% (3447/10401)   Resolving deltas:  34% (3614/10401)   Resolving deltas:  35% (3641/10401)   Resolving deltas:  36% (3808/10401)   Resolving deltas:  37% (3854/10401)   Resolving deltas:  38% (3953/10401)   Resolving deltas:  39% (4065/10401)   Resolving deltas:  40% (4165/10401)   Resolving deltas:  41% (4265/10401)   Resolving deltas:  42% (4370/10401)   Resolving deltas:  43% (4530/10401)   Resolving deltas:  44% (4583/10401)   Resolving deltas:  45% (4715/10401)   Resolving deltas:  46% (4797/10401)   Resolving deltas:  47% (4907/10401)   Resolving deltas:  48% (5004/10401)   Resolving deltas:  49% (5098/10401)   Resolving deltas:  50% (5208/10401)   Resolving deltas:  51% (5332/10401)   Resolving deltas:  52% (5410/10401)   Resolving deltas:  53% (5513/10401)   Resolving deltas:  54% (5622/10401)   Resolving deltas:  55% (5721/10401)   Resolving deltas:  56% (5828/10401)   Resolving deltas:  57% (5946/10401)   Resolving deltas:  58% (6048/10401)   Resolving deltas:  59% (6165/10401)   Resolving deltas:  60% (6244/10401)   Resolving deltas:  61% (6357/10401)   Resolving deltas:  62% (6449/10401)   Resolving deltas:  63% (6576/10401)   Resolving deltas:  64% (6663/10401)   Resolving deltas:  65% (6813/10401)   Resolving deltas:  66% (6876/10401)   Resolving deltas:  67% (6976/10401)   Resolving deltas:  68% (7088/10401)   Resolving deltas:  69% (7188/10401)   Resolving deltas:  70% (7281/10401)   Resolving deltas:  71% (7395/10401)   Resolving deltas:  72% (7495/10401)   Resolving deltas:  73% (7595/10401)   Resolving deltas:  74% (7697/10401)   Resolving deltas:  75% (7817/10401)   Resolving deltas:  76% (7931/10401)   Resolving deltas:  77% (8011/10401)   Resolving deltas:  78% (8137/10401)   Resolving deltas:  79% (8229/10401)   Resolving deltas:  80% (8328/10401)   Resolving deltas:  81% (8425/10401)   Resolving deltas:  82% (8534/10401)   Resolving deltas:  83% (8633/10401)   Resolving deltas:  84% (8741/10401)   Resolving deltas:  85% (8842/10401)   Resolving deltas:  86% (8946/10401)   Resolving deltas:  87% (9058/10401)   Resolving deltas:  88% (9154/10401)   Resolving deltas:  89% (9258/10401)   Resolving deltas:  90% (9376/10401)   Resolving deltas:  91% (9465/10401)   Resolving deltas:  92% (9578/10401)   Resolving deltas:  93% (9757/10401)   Resolving deltas:  94% (9829/10401)   Resolving deltas:  95% (9888/10401)   Resolving deltas:  96% (10003/10401)   Resolving deltas:  97% (10147/10401)   Resolving deltas:  98% (10194/10401)   Resolving deltas:  99% (10308/10401)   Resolving deltas: 100% (10401/10401)   Resolving deltas: 100% (10401/10401), done.
ultra96@EE382N4:~$ git pull 
fatal: not a git repository (or any of the parent directories): .git
ultra96@EE382N4:~$ git pull ori[K[K[K[K[K[K[K[K[K[K[K[Kls
darknet  examples.desktop  wifi_pass.bkp
ultra96@EE382N4:~$ cd darknet/
ultra96@EE382N4:~/darknet$ ls
3rdparty		darknet_video.py       net_cam_v4.sh
build			data		       README.md
build.ps1		image_yolov3.sh        results
cfg			image_yolov4.sh        scripts
cmake			include		       src
CMakeLists.txt		json_mjpeg_streams.sh  trash
DarknetConfig.cmake.in	LICENSE		       vcpkg.json
darknet_images.py	Makefile	       video_yolov3.sh
darknet.py		net_cam_v3.sh	       video_yolov4.sh
ultra96@EE382N4:~/darknet$ git pull
remote: Enumerating objects: 5, done.[K
remote: Counting objects:  20% (1/5)[Kremote: Counting objects:  40% (2/5)[Kremote: Counting objects:  60% (3/5)[Kremote: Counting objects:  80% (4/5)[Kremote: Counting objects: 100% (5/5)[Kremote: Counting objects: 100% (5/5), done.[K
remote: Compressing objects: 100% (1/1)[Kremote: Compressing objects: 100% (1/1), done.[K
remote: Total 3 (delta 2), reused 3 (delta 2), pack-reused 0[K
Unpacking objects:  33% (1/3)   Unpacking objects:  66% (2/3)   Unpacking objects: 100% (3/3)   Unpacking objects: 100% (3/3), done.
From https://github.com/CHINTADINESH/darknet
   d838966..ffca246  master     -> origin/master
Updating d838966..ffca246
Fast-forward
 README.md | 14 [32m++++++++++++[m[31m--[m
 1 file changed, 12 insertions(+), 2 deletions(-)
ultra96@EE382N4:~/darknet$ git [K[K[K[Kgit pull
remote: Enumerating objects: 5, done.[K
remote: Counting objects:  20% (1/5)[Kremote: Counting objects:  40% (2/5)[Kremote: Counting objects:  60% (3/5)[Kremote: Counting objects:  80% (4/5)[Kremote: Counting objects: 100% (5/5)[Kremote: Counting objects: 100% (5/5), done.[K
remote: Compressing objects: 100% (1/1)[Kremote: Compressing objects: 100% (1/1), done.[K
remote: Total 3 (delta 2), reused 3 (delta 2), pack-reused 0[K
Unpacking objects:  33% (1/3)   Unpacking objects:  66% (2/3)   Unpacking objects: 100% (3/3)   Unpacking objects: 100% (3/3), done.
From https://github.com/CHINTADINESH/darknet
   ffca246..b63dc85  master     -> origin/master
Updating ffca246..b63dc85
Fast-forward
 Makefile | 17 [32m++++++++++++++++[m[31m-[m
 1 file changed, 16 insertions(+), 1 deletion(-)
ultra96@EE382N4:~/darknet$ git log
[33mcommit b63dc850964ab2bb9117fc01eb75b56a983d973d[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31m[m [33m[m[33m[m[1;36m[m[1;32m[m[33m[m[1;31m[m[33m[m[1;31morigin/HEAD[m[33m)[m[m
Author: CHINTADINESH <cdineshrdy@gmail.com>[m
Date:   Sat Sep 11 13:27:53 2021 -0500[m
[m
    Some Makefile changes[m
[m
[33mcommit ffca2466d41dd311123bee5173786aabcdb94a8f[m[m
Author: CHINTADINESH <cdineshrdy@gmail.com>[m
Date:   Sat Sep 11 13:23:44 2021 -0500[m
[m
    Some changes in REEDME[m
[m
[33mcommit d8389669df78ff4c24a82469eaaadde1f7a07dbe[m[m
Author: CHINTADINESH <cdineshrdy@gmail.com>[m
Date:   Sat Sep 11 13:02:27 2021 -0500[m
[m
    Added custom section in the Readme file[m
[m
[33mcommit ea6aec81ed82aebe503b2302fa048ac0654270bc[m[m
Author: CHINTADINESH <cdineshrdy@gmail.com>[m
Date:   Sat Sep 11 12:43:27 2021 -0500[m
[m
:[K[Kultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ [H[Jultra96@EE382N4:~/darknet$ i[Kvim Makefile 
[1;24r[27m[24m[0m[H[J[24;1H"Makefile" 214L, 6160C[2;1Hâ–½[6n[2;1H  [1;1H[1;1H[4mGPU[24m=0
[4mCUDNN[24m=0
[4mCUDNN_HALF[24m=0
[4mOPENCV[24m=0
[4mAVX[24m=0
[4mOPENMP[24m=0
[4mLIBSO[24m=0
[4mZED_CAMERA[24m=0
[4mZED_CAMERA_v2_8[24m=0

[1m# set GPU=1 and CUDNN=1 to speedup on GPU
# set CUDNN_HALF=1 to further speedup 3 x times (Mixed-precision on Tensor Coress[13;1H) GPU: Volta, Xavier, Turing and higher
# set AVX=1 and OPENMP=1 to speedup on CPU (if error occurs then set AVX=0)
# set ZED_CAMERA=1 to enable ZED SDK 3.0 and above
# set ZED_CAMERA_v2_8=1 to enable ZED SDK 2.X[0m

[4mUSE_CPP[24m=1
[4mUSE_PROFILING[24m=1
[4mDEBUG[24m=0

[1m# For cross compiling set this variable[0m
[4mUSE_CROSS[24m=1[24;63H1,1[11CTop[1;1H[24;53Hj[1;1H[24;53H [2;1H[24;63H2[2;1H[24;53Hj[2;1H[24;53H [3;1H[24;63H3[3;1H[24;53Hj[3;1H[24;53H [4;1H[24;63H4[4;1H[24;53Hj[4;1H[24;53H [5;1H[24;63H5[5;1H[24;53Hj[5;1H[24;53H [6;1H[24;63H6[6;1H[24;53Hj[6;1H[24;53H [7;1H[24;63H7[7;1H[24;53Hj[7;1H[24;53H [8;1H[24;63H8[8;1H[24;53Hj[8;1H[24;53H [9;1H[24;63H9[9;1H[24;53Hj[9;1H[24;53H [10;1H[24;63H10,0-1[10;1H[24;53Hj[10;1H[24;53H [11;1H[24;64H1,1  [11;1H[24;53Hj[11;1H[24;53H [12;1H[24;64H2[12;1H[24;53Hj[12;1H[24;53H [14;1H[24;64H3[14;1H[24;53Hj[14;1H[24;53H [15;1H[24;64H4[15;1H[24;53Hj[15;1H[24;53H [16;1H[24;64H5[16;1H[24;53Hj[16;1H[24;53H [17;1H[24;64H6,0-1[17;1H[24;53Hj[17;1H[24;53H [18;1H[24;64H7,1  [18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;1H[K[24;63H18,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4mARCH[24m= -gencode arch=compute_35,code=sm_35 [1m\[0m[24;63H[K[24;63H19,1[11C1%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m      [0m-gencode arch=compute_50,code=[sm_50,compute_50] [1m\[0m[24;63H[K[24;63H20,0-1[9C1%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m      [0m-gencode arch=compute_52,code=[sm_52,compute_52] [1m\[0m[24;63H[K[24;63H21,1[11C2%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m            [0m-gencode arch=compute_61,code=[sm_61,compute_61][24;63H[K[24;63H22,1[11C2%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H23,0-1[9C3%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4mOS [24m:= [4m$([24m[1mshell[0m[4m uname)[24m[24;63H[K[24;63H24,1[11C3%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H25,1[11C4%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m# GeForce RTX 3070, 3080, 3090[0m[24;63H[K[24;63H26,1[11C4%[18;1H[24;53Hj[18;1H[24;53H [18;8H[1;23r[23;1H
[1;24r[23;1H[1m# ARCH= -gencode arch=compute_86,code=[sm_86,compute_86][0m[24;63H[K[24;63H27,1-8[9C5%[18;8H[24;53Hj[18;8H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H28,0-1[9C5%[18;1H[24;53Hj[18;1H[24;53H [17;1H[1;23r[1;1H[2M[1;24r[22;1H[1m# Kepler GeForce GTX 770, GTX 760, GT 740
# ARCH= -gencode arch=compute_30,code=sm_30[0m[24;63H[K[24;63H29,1[11C6%[17;1H[24;53Hj[17;1H[24;53H [18;1H[24;63H30,0-1[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H31,1[11C6%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m# Tesla A100 (GA100), DGX-A100, RTX 3080[0m[24;63H[K[24;63H32,1[11C7%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m# ARCH= -gencode arch=compute_80,code=[sm_80,compute_80][0m[24;63H[K[24;63H33,0-1[9C7%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H34,1[11C8%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m# Tesla V100[0m[24;63H[K[24;63H35,1[11C8%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m# ARCH= -gencode arch=compute_70,code=[sm_70,compute_70][0m[24;63H[K[24;63H36,0-1[9C9%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H37,1[11C9%[18;1H[24;53Hk[18;1H[24;53H [17;1H[24;64H6,0-1[17;1H[24;53Hk[17;1H[24;53H [16;1H[24;64H5,1  [16;1H[24;53Hk[16;1H[24;53H [15;1H[24;64H4[15;1H[24;53Hk[15;1H[24;53H [14;1H[24;64H3,0-1[14;1H[24;53Hk[14;1H[24;53H [13;1H[24;64H2,1  [13;1H[24;53Hk[13;1H[24;53H [12;1H[24;64H1[12;1H[24;53Hk[12;1H[24;53H [11;1H[24;64H0,0-1[11;1H[24;53Hk[11;1H[24;53H [10;1H[24;63H29,1  [10;1H[24;53Hk[10;1H[24;53H [9;1H[24;64H8,0-1[9;1H[24;53Hk[9;1H[24;53H [8;8H[24;64H7,1-8[8;8H[24;53Hk[8;8H[24;53H [7;1H[24;64H6,1  [7;1H[24;53Hk[7;1H[24;53H [6;1H[24;64H5[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mDEBUG[24m=0[24;63H[K[24;63H24,1[11C9%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mUSE_PROFILING[24m=1[24;63H[K[24;63H23,0-1[9C8%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mUSE_CPP[24m=1[24;63H[K[24;63H22,1[11C8%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H21,1[11C7%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[1m# set ZED_CAMERA_v2_8=1 to enable ZED SDK 2.X[0m[24;63H[K[24;63H20,0-1[9C7%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[1m# set ZED_CAMERA=1 to enable ZED SDK 3.0 and above[0m[24;63H[K[24;63H19,1[11C6%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[1m# set AVX=1 and OPENMP=1 to speedup on CPU (if error occurs then set AVX=0)[0m[24;63H[K[24;63H18,1[11C6%[6;1H[24;53Hk[6;1H[24;53H [7;1H[1;23r[1;1H[2L[1;24r[1;1H[1m# set CUDNN_HALF=1 to further speedup 3 x times (Mixed-precision on Tensor Coress[2;1H) GPU: Volta, Xavier, Turing and higher[0m[24;63H[K[24;63H17,1[11C5%[7;1H[24;53Hk[7;1H[24;53H [6;1H[24;64H6,0-1[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[1m# set GPU=1 and CUDNN=1 to speedup on GPU[0m[24;63H[K[24;63H15,1[11C5%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H14,1[11C4%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mZED_CAMERA_v2_8[24m=0[24;63H[K[24;63H13,1[11C4%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[2L[1;24r[1;1H[4mLIBSO[24m=0
[4mZED_CAMERA[24m=0[24;63H[K[24;63H12,1[11C3%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mOPENMP[24m=0[24;63H[K[24;63H11,1[11C2%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mAVX[24m=0[24;63H[K[24;63H10,0-1[9C2%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mOPENCV[24m=0[24;63H[K[24;63H9,1[12C1%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mCUDNN_HALF[24m=0[24;63H[K[24;63H8,1[12C1%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mCUDNN[24m=0[24;63H[K[24;63H7,1[12C0%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mGPU[24m=0[24;63H[K[24;63H6,1[11CTop[6;1H[24;53Hk[6;1H[24;53H [5;1H[24;63H5[5;1H[24;53Hk[5;1H[24;53H [4;1H[24;63H4[4;1H[24;53Hk[4;1H[24;53H [3;1H[24;63H3[3;1H[24;53Hk[3;1H[24;53H [2;1H[24;63H2[2;1H[24;53Hk[2;1H[24;53H [1;1H[24;63H1[1;1H[24;53Hk[1;1H[24;53H [1;1H[24;53Hk[1;1H[24;53H [1;1H[24;53Hk[1;1H[24;53H [1;1H[24;53Hk[1;1H[24;53H [1;1H[24;53Hk[1;1H[24;53H [1;1H[24;53Hk[1;1H[24;53H [1;1H[24;53Hk[1;1H[24;53H [1;1H[24;53Hj[1;1H[24;53H [2;1H[24;63H2[2;1H[24;53Hj[2;1H[24;53H [3;1H[24;63H3[3;1H[24;53Hj[3;1H[24;53H [4;1H[24;63H4[4;1H[24;53Hj[4;1H[24;53H [5;1H[24;63H5[5;1H[24;53Hj[5;1H[24;53H [6;1H[24;63H6[6;1H[24;53Hj[6;1H[24;53H [7;1H[24;63H7[7;1H[24;53Hj[7;1H[24;53H [8;1H[24;63H8[8;1H[24;53Hj[8;1H[24;53H [9;1H[24;63H9[9;1H[24;53Hj[9;1H[24;53H [10;1H[24;63H10,0-1[10;1H[24;53Hj[10;1H[24;53H [11;1H[24;64H1,1  [11;1H[24;53Hj[11;1H[24;53H [12;1H[24;64H2[12;1H[24;53Hj[12;1H[24;53H [14;1H[24;64H3[14;1H[24;53Hj[14;1H[24;53H [15;1H[24;64H4[15;1H[24;53Hj[15;1H[24;53H [16;1H[24;64H5[16;1H[24;53Hj[16;1H[24;53H [17;1H[24;64H6,0-1[17;1H[24;53Hj[17;1H[24;53H [18;1H[24;64H7,1  [18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H18,1[11C0%[18;1H[24;53Hk[18;1H[24;53H [17;1H[24;64H7[17;1H[24;53HR[17;1H[24;53H [17;1H[24;1H[1m-- REPLACE --[0m[24;63H[K[24;63H17,1[11C0%[17;1H[24;1H[K[17;1H[24;53H^[[17;1H[24;53H  [17;1H[24;63H17,1[11C0%[17;1H[24;53Hl[17;1H[24;53H [17;2H[24;66H2[17;2H[24;53Hl[17;2H[24;53H [17;3H[24;66H3[17;3H[24;53Hl[17;3H[24;53H [17;4H[24;66H4[17;4H[24;53Hl[17;4H[24;53H [17;5H[24;66H5[17;5H[24;53Hl[17;5H[24;53H [17;6H[24;66H6[17;6H[24;53Hl[17;6H[24;53H [17;7H[24;66H7[17;7H[24;53Hl[17;7H[24;53H [17;8H[24;66H8[17;8H[24;53Hl[17;8H[24;53H [17;9H[24;66H9[17;9H[24;53Hl[17;9H[24;53H [17;9H[24;53Hl[17;9H[24;53H [17;9H[24;53Hr[17;9H[24;54H0[17;9H[24;53H  [17;9H0[24;53H^[[17;9H[24;53H  [17;9H[24;53Hj[17;9H[24;53H [18;9H[24;64H8[18;9H[24;53Hl[18;9H[24;53H [18;10H[24;66H10[18;10H[24;53Hl[18;10H[24;53H [18;11H[24;67H1[18;11H[24;53Hl[18;11H[24;53H [18;12H[24;67H2[18;12H[24;53Hl[18;12H[24;53H [18;13H[24;67H3[18;13H[24;53Hl[18;13H[24;53H [18;14H[24;67H4[18;14H[24;53Hl[18;14H[24;53H [18;15H[24;67H5[18;15H[24;53Hl[18;15H[24;53H [18;15H[24;53Hl[18;15H[24;53H [18;15H[24;53Hl[18;15H[24;53H [18;15H[24;53Hr[18;15H[24;54H0[18;15H[24;53H  [18;15H0[24;53Hj[18;15H[24;53H [18;7H[1;23r[23;1H
[1;24r[23;1H[4mARCH[24m= -gencode arch=compute_35,code=sm_35 [1m\[0m[24;63H[K[24;63H19,7[11C1%[18;7H[24;53Hj[18;7H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m      [0m-gencode arch=compute_50,code=[sm_50,compute_50] [1m\[0m[24;63H[K[24;63H20,0-1[9C1%[18;1H[24;53Hj[18;1H[24;53H [18;15H[1;23r[23;1H
[1;24r[23;1H[1m      [0m-gencode arch=compute_52,code=[sm_52,compute_52] [1m\[0m[24;63H[K[24;63H21,15[10C2%[18;15H[24;53Hj[18;15H[24;53H [18;11H[1;23r[23;1H
[1;24r[23;1H[1m            [0m-gencode arch=compute_61,code=[sm_61,compute_61][24;63H[K[24;63H22,11[10C2%[18;11H[24;53Hj[18;11H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H23,0-1[9C3%[18;1H[24;53Hj[18;1H[24;53H [18;15H[1;23r[23;1H
[1;24r[23;1H[4mOS [24m:= [4m$([24m[1mshell[0m[4m uname)[24m[24;63H[K[24;63H24,15[10C3%[18;15H[24;53Hk[18;15H[24;53H [17;1H[24;64H3,0-1[17;1H[24;53Hk[17;1H[24;53H [16;11H[24;64H2,11 [16;11H[24;53Hr[16;11H[24;54H0[16;11H[24;53H  [16;11H0[24;53H^[[16;11H[24;53H  [16;11H[24;53H^[[16;11H[24;53H  [16;11H[24;53Hk[16;11H[24;53H [15;11H[24;64H1[15;11H[24;53Hj[15;11H[24;53H [16;11H[24;64H2[16;11H[24;53Hj[16;11H[24;53H [17;1H[24;64H3,0-1[17;1H[24;53Hj[17;1H[24;53H [18;11H[24;64H4,11 [18;11H[24;53Hj[18;11H[24;53H [18;11H[1;23r[23;1H
[1;24r[24;63H[K[24;63H25,11[10C4%[18;11H[24;53Hj[18;11H[24;53H [18;11H[1;23r[23;1H
[1;24r[23;1H[1m# GeForce RTX 3070, 3080, 3090[0m[24;63H[K[24;63H26,11[10C4%[18;11H[24;53Hj[18;11H[24;53H [18;11H[1;23r[23;1H
[1;24r[23;1H[1m# ARCH= -gencode arch=compute_86,code=[sm_86,compute_86][0m[24;63H[K[24;63H27,4-11[8C5%[18;11H[24;53Hj[18;11H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H28,0-1[9C5%[18;1H[24;53Hj[18;1H[24;53H [17;11H[1;23r[1;1H[2M[1;24r[22;1H[1m# Kepler GeForce GTX 770, GTX 760, GT 740
# ARCH= -gencode arch=compute_30,code=sm_30[0m[24;63H[K[24;63H29,11[10C6%[17;11H[24;53Hj[17;11H[24;53H [18;1H[24;63H30,0-1[18;1H[24;53Hj[18;1H[24;53H [18;11H[1;23r[23;1H
[1;24r[24;63H[K[24;63H31,11[10C6%[18;11H[24;53Hj[18;11H[24;53H [18;11H[1;23r[23;1H
[1;24r[23;1H[1m# Tesla A100 (GA100), DGX-A100, RTX 3080[0m[24;63H[K[24;63H32,11[10C7%[18;11H[24;53Hj[18;11H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m# ARCH= -gencode arch=compute_80,code=[sm_80,compute_80][0m[24;63H[K[24;63H33,0-1[9C7%[18;1H[24;53Hj[18;1H[24;53H [18;11H[1;23r[23;1H
[1;24r[24;63H[K[24;63H34,11[10C8%[18;11H[24;53Hj[18;11H[24;53H [18;11H[1;23r[23;1H
[1;24r[23;1H[1m# Tesla V100[0m[24;63H[K[24;63H35,11[10C8%[18;11H[24;53Hj[18;11H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m# ARCH= -gencode arch=compute_70,code=[sm_70,compute_70][0m[24;63H[K[24;63H36,0-1[9C9%[18;1H[24;53Hj[18;1H[24;53H [18;11H[1;23r[23;1H
[1;24r[24;63H[K[24;63H37,11[10C9%[18;11H[24;53Hk[18;11H[24;53H [17;1H[24;64H6,0-1[17;1H[24;53Hk[17;1H[24;53H [16;11H[24;64H5,11 [16;11H[24;53Hk[16;11H[24;53H [15;11H[24;64H4[15;11H[24;53Hk[15;11H[24;53H [14;1H[24;64H3,0-1[14;1H[24;53Hk[14;1H[24;53H [13;11H[24;64H2,11 [13;11H[24;53Hk[13;11H[24;53H [12;11H[24;64H1[12;11H[24;53Hk[12;11H[24;53H [11;1H[24;64H0,0-1[11;1H[24;53Hk[11;1H[24;53H [10;11H[24;63H29,11 [10;11H[24;53Hk[10;11H[24;53H [9;1H[24;64H8,0-1[9;1H[24;53Hk[9;1H[24;53H [8;11H[24;64H7,4-11[8;11H[24;53Hk[8;11H[24;53H [7;11H[24;64H6,11  [7;11H[24;53Hk[7;11H[24;53H [6;11H[24;64H5[6;11H[24;53Hk[6;11H[24;53H [6;11H[1;23r[1;1H[L[1;24r[1;1H[4mDEBUG[24m=0[24;63H[K[24;63H24,11[10C9%[6;11H[24;53Hk[6;11H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[4mUSE_PROFILING[24m=0[24;63H[K[24;63H23,0-1[9C8%[6;1H[24;53Hk[6;1H[24;53H [6;11H[1;23r[1;1H[L[1;24r[1;1H[4mUSE_CPP[24m=0[24;63H[K[24;63H22,11[10C8%[6;11H[24;53Hk[6;11H[24;53H [6;11H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H21,11[10C7%[6;11H[24;53H:[6;11H[24;53H[K[24;1H:w"Makefile" 214L, 6160C written[6;11H[24;63H21,11[10C7%[24;63H[K[24;63H21,11[10C7%[6;11H[24;53H:[6;11H[24;1H[K[24;1H:q[24;1H[K[24;1Hultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ make clean
rm -rf ./obj/image_opencv.o ./obj/http_stream.o ./obj/gemm.o ./obj/utils.o ./obj/dark_cuda.o ./obj/convolutional_layer.o ./obj/list.o ./obj/image.o ./obj/activations.o ./obj/im2col.o ./obj/col2im.o ./obj/blas.o ./obj/crop_layer.o ./obj/dropout_layer.o ./obj/maxpool_layer.o ./obj/softmax_layer.o ./obj/data.o ./obj/matrix.o ./obj/network.o ./obj/connected_layer.o ./obj/cost_layer.o ./obj/parser.o ./obj/option_list.o ./obj/darknet.o ./obj/detection_layer.o ./obj/captcha.o ./obj/route_layer.o ./obj/writing.o ./obj/box.o ./obj/nightmare.o ./obj/normalization_layer.o ./obj/avgpool_layer.o ./obj/coco.o ./obj/dice.o ./obj/yolo.o ./obj/detector.o ./obj/layer.o ./obj/compare.o ./obj/classifier.o ./obj/local_layer.o ./obj/swag.o ./obj/shortcut_layer.o ./obj/representation_layer.o ./obj/activation_layer.o ./obj/rnn_layer.o ./obj/gru_layer.o ./obj/rnn.o ./obj/rnn_vid.o ./obj/crnn_layer.o ./obj/demo.o ./obj/tag.o ./obj/cifar.o ./obj/go.o ./obj/batchnorm_layer.o ./obj/art.o ./obj/region_layer.o ./obj/reorg_layer.o ./obj/reorg_old_layer.o ./obj/super.o ./obj/voxel.o ./obj/tree.o ./obj/yolo_layer.o ./obj/gaussian_yolo_layer.o ./obj/upsample_layer.o ./obj/lstm_layer.o ./obj/conv_lstm_layer.o ./obj/scale_channels_layer.o ./obj/sam_layer.o darknet  
ultra96@EE382N4:~/darknet$ make
mkdir -p ./obj/
mkdir -p backup
chmod +x *.sh
g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/image_opencv.cpp -o obj/image_opencv.o
g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/http_stream.cpp -o obj/http_stream.o
[01m[K./src/http_stream.cpp:[m[K In member function â€˜[01m[Kbool JSON_sender::write(const char*)[m[Kâ€™:
[01m[K./src/http_stream.cpp:253:21:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kn[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                 int [01;35m[Kn[m[K = _write(client, outputbuf, outlen);
                     [01;35m[K^[m[K
[01m[K./src/http_stream.cpp:[m[K In function â€˜[01m[Kvoid set_track_id(detection*, int, float, float, float, int, int, int)[m[Kâ€™:
[01m[K./src/http_stream.cpp:867:27:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [[01;35m[K-Wsign-compare[m[K]
         for (int i = 0; [01;35m[Ki < v.size()[m[K; ++i) {
                         [01;35m[K~~^~~~~~~~~~[m[K
[01m[K./src/http_stream.cpp:875:33:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [[01;35m[K-Wsign-compare[m[K]
     for (int old_id = 0; [01;35m[Kold_id < old_dets.size()[m[K; ++old_id) {
                          [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K./src/http_stream.cpp:894:31:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [[01;35m[K-Wsign-compare[m[K]
     for (int index = 0; [01;35m[Kindex < new_dets_num*old_dets.size()[m[K; ++index) {
                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K./src/http_stream.cpp:930:28:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [[01;35m[K-Wsign-compare[m[K]
     if ([01;35m[Kold_dets_dq.size() > deque_size[m[K) old_dets_dq.pop_front();
         [01;35m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/gemm.c -o obj/gemm.o
[01m[K./src/gemm.c:[m[K In function â€˜[01m[Kconvolution_2d[m[Kâ€™:
[01m[K./src/gemm.c:2044:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kout_w[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     const int [01;35m[Kout_w[m[K = (w + 2 * pad - ksize) / stride + 1;    // output_width=input_width for stride=1 and pad=1
               [01;35m[K^~~~~[m[K
[01m[K./src/gemm.c:2043:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kout_h[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     const int [01;35m[Kout_h[m[K = (h + 2 * pad - ksize) / stride + 1;    // output_height=input_height for stride=1 and pad=1
               [01;35m[K^~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/utils.c -o obj/utils.o
[01m[K./src/utils.c:[m[K In function â€˜[01m[Kcustom_hash[m[Kâ€™:
[01m[K./src/utils.c:1061:12:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around assignment used as truth value [[01;35m[K-Wparentheses[m[K]
     while ([01;35m[Kc[m[K = *str++)
            [01;35m[K^[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/dark_cuda.c -o obj/dark_cuda.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/convolutional_layer.c -o obj/convolutional_layer.o
[01m[K./src/convolutional_layer.c:[m[K In function â€˜[01m[Kresize_convolutional_layer[m[Kâ€™:
[01m[K./src/convolutional_layer.c:897:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kold_h[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     int [01;35m[Kold_h[m[K = l->h;
         [01;35m[K^~~~~[m[K
[01m[K./src/convolutional_layer.c:896:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kold_w[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     int [01;35m[Kold_w[m[K = l->w;
         [01;35m[K^~~~~[m[K
[01m[K./src/convolutional_layer.c:[m[K In function â€˜[01m[Kforward_convolutional_layer[m[Kâ€™:
[01m[K./src/convolutional_layer.c:1341:32:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kt_intput_size[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                         size_t [01;35m[Kt_intput_size[m[K = binary_transpose_align_input(k, n, state.workspace, &l.t_bit_input, ldb_align, l.bit_align);
                                [01;35m[K^~~~~~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/list.c -o obj/list.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/image.c -o obj/image.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/activations.c -o obj/activations.o
[01m[K./src/activations.c:[m[K In function â€˜[01m[Kactivate[m[Kâ€™:
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KRELU6[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
     [01;35m[Kswitch[m[K(a){
     [01;35m[K^~~~~~[m[K
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KSWISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KMISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KHARD_MISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KNORM_CHAN[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KNORM_CHAN_SOFTMAX[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KNORM_CHAN_SOFTMAX_MAXVAL[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:[m[K In function â€˜[01m[Kgradient[m[Kâ€™:
[01m[K./src/activations.c:310:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KSWISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
     [01;35m[Kswitch[m[K(a){
     [01;35m[K^~~~~~[m[K
[01m[K./src/activations.c:310:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KMISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:310:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KHARD_MISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/im2col.c -o obj/im2col.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/col2im.c -o obj/col2im.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/blas.c -o obj/blas.o
[01m[K./src/blas.c:[m[K In function â€˜[01m[Kbackward_shortcut_multilayer_cpu[m[Kâ€™:
[01m[K./src/blas.c:207:21:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kout_index[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                 int [01;35m[Kout_index[m[K = id;
                     [01;35m[K^~~~~~~~~[m[K
[01m[K./src/blas.c:[m[K In function â€˜[01m[Kfind_sim[m[Kâ€™:
[01m[K./src/blas.c:597:59:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
         printf(" Error: find_sim(): sim isn't found: i = [01;35m[K%d[m[K, j = %d, z = %d \n", i, j, z);
                                                          [01;35m[K~^[m[K
                                                          [32m[K%ld[m[K
[01m[K./src/blas.c:597:67:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 3 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
         printf(" Error: find_sim(): sim isn't found: i = %d, j = [01;35m[K%d[m[K, z = %d \n", i, j, z);
                                                                  [01;35m[K~^[m[K
                                                                  [32m[K%ld[m[K
[01m[K./src/blas.c:597:75:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 4 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
   printf(" Error: find_sim(): sim isn't found: i = %d, j = %d, z = [01;35m[K%d[m[K \n", i, j, z);
                                                                    [01;35m[K~^[m[K
                                                                          [32m[K%ld[m[K
[01m[K./src/blas.c:[m[K In function â€˜[01m[Kfind_P_constrastive[m[Kâ€™:
[01m[K./src/blas.c:611:68:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
         printf(" Error: find_P_constrastive(): P isn't found: i = [01;35m[K%d[m[K, j = %d, z = %d \n", i, j, z);
                                                                   [01;35m[K~^[m[K
                                                                   [32m[K%ld[m[K
[01m[K./src/blas.c:611:76:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 3 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  printf(" Error: find_P_constrastive(): P isn't found: i = %d, j = [01;35m[K%d[m[K, z = %d \n", i, j, z);
                                                                    [01;35m[K~^[m[K
                                                                           [32m[K%ld[m[K
[01m[K./src/blas.c:611:84:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 4 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 " Error: find_P_constrastive(): P isn't found: i = %d, j = %d, z = [01;35m[K%d[m[K \n", i, j, z);
                                                                    [01;35m[K~^[m[K
                                                                                   [32m[K%ld[m[K
[01m[K./src/blas.c:[m[K In function â€˜[01m[KP_constrastive_f[m[Kâ€™:
[01m[K./src/blas.c:651:79:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 3 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 rintf(stderr, " Error: in P_constrastive must be i != l, while i = [01;35m[K%d[m[K, l = %d \n", i, l);
                                                                    [01;35m[K~^[m[K
                                                                              [32m[K%ld[m[K
[01m[K./src/blas.c:651:87:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 4 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 derr, " Error: in P_constrastive must be i != l, while i = %d, l = [01;35m[K%d[m[K \n", i, l);
                                                                    [01;35m[K~^[m[K
                                                                                      [32m[K%ld[m[K
[01m[K./src/blas.c:[m[K In function â€˜[01m[KP_constrastive[m[Kâ€™:
[01m[K./src/blas.c:785:79:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 3 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 rintf(stderr, " Error: in P_constrastive must be i != l, while i = [01;35m[K%d[m[K, l = %d \n", i, l);
                                                                    [01;35m[K~^[m[K
                                                                              [32m[K%ld[m[K
[01m[K./src/blas.c:785:87:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 4 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 derr, " Error: in P_constrastive must be i != l, while i = %d, l = [01;35m[K%d[m[K \n", i, l);
                                                                    [01;35m[K~^[m[K
                                                                                      [32m[K%ld[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/crop_layer.c -o obj/crop_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/dropout_layer.c -o obj/dropout_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/maxpool_layer.c -o obj/maxpool_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/softmax_layer.c -o obj/softmax_layer.o
[01m[K./src/softmax_layer.c:[m[K In function â€˜[01m[Kmake_contrastive_layer[m[Kâ€™:
[01m[K./src/softmax_layer.c:203:101:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 9 has type â€˜[01m[Ksize_t {aka const long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  %4d x%4d x%4d x emb_size %4d x batch: %4d  classes = %4d, step = [01;35m[K%4d[m[K \n", w, h, l.n, l.embedding_size, batch, l.classes, step);
                                                                   [01;35m[K~~^[m[K
                                                                                                   [32m[K%4ld[m[K
[01m[K./src/softmax_layer.c:[m[K In function â€˜[01m[Kforward_contrastive_layer[m[Kâ€™:
[01m[K./src/softmax_layer.c:244:27:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kmax_truth[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
                     float [01;35m[Kmax_truth[m[K = 0;
                           [01;35m[K^~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/data.c -o obj/data.o
[01m[K./src/data.c:[m[K In function â€˜[01m[Kload_data_detection[m[Kâ€™:
[01m[K./src/data.c:1409:43:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kr_scale[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
     float r1 = 0, r2 = 0, r3 = 0, r4 = 0, [01;35m[Kr_scale[m[K;
                                           [01;35m[K^~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/matrix.c -o obj/matrix.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/network.c -o obj/network.o
[01m[K./src/network.c:[m[K In function â€˜[01m[Ktrain_network_waitkey[m[Kâ€™:
[01m[K./src/network.c:435:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kema_period[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         int [01;35m[Kema_period[m[K = (net.max_batches - ema_start_point - 1000) * (1.0 - net.ema_alpha);
             [01;35m[K^~~~~~~~~~[m[K
At top level:
[01m[K./src/network.c:1269:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Krelu[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 static float [01;35m[Krelu[m[K(float src) {
              [01;35m[K^~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/connected_layer.c -o obj/connected_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/cost_layer.c -o obj/cost_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/parser.c -o obj/parser.o
[01m[K./src/parser.c:[m[K In function â€˜[01m[Ksave_implicit_weights[m[Kâ€™:
[01m[K./src/parser.c:1909:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ki[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     int [01;35m[Ki[m[K;
         [01;35m[K^[m[K
[01m[K./src/parser.c:[m[K In function â€˜[01m[Kget_classes_multipliers[m[Kâ€™:
[01m[K./src/parser.c:438:29:[m[K [01;35m[Kwarning: [m[Kargument 1 range [18446744071562067968, 18446744073709551615] exceeds maximum object size 9223372036854775807 [[01;35m[K-Walloc-size-larger-than=[m[K]
         [01;35m[Kclasses_multipliers = (float *)calloc(classes_counters, sizeof(float))[m[K;
         [01;35m[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K./src/parser.c:3:0[m[K:
[01m[K/usr/include/stdlib.h:541:14:[m[K [01;36m[Knote: [m[Kin a call to allocation function â€˜[01m[Kcalloc[m[Kâ€™ declared here
 extern void *[01;36m[Kcalloc[m[K (size_t __nmemb, size_t __size)
              [01;36m[K^~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/option_list.c -o obj/option_list.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/darknet.c -o obj/darknet.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/detection_layer.c -o obj/detection_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/captcha.c -o obj/captcha.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/route_layer.c -o obj/route_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/writing.c -o obj/writing.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/box.c -o obj/box.o
[01m[K./src/box.c:[m[K In function â€˜[01m[Kbox_iou_kind[m[Kâ€™:
[01m[K./src/box.c:154:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KMSE[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
     [01;35m[Kswitch[m[K(iou_kind) {
     [01;35m[K^~~~~~[m[K
[01m[K./src/box.c:[m[K In function â€˜[01m[Kdiounms_sort[m[Kâ€™:
[01m[K./src/box.c:898:27:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kbeta_prob[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                     float [01;35m[Kbeta_prob[m[K = pow(dets[j].prob[k], 2) / sum_prob;
                           [01;35m[K^~~~~~~~~[m[K
[01m[K./src/box.c:897:27:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kalpha_prob[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                     float [01;35m[Kalpha_prob[m[K = pow(dets[i].prob[k], 2) / sum_prob;
                           [01;35m[K^~~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/nightmare.c -o obj/nightmare.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/normalization_layer.c -o obj/normalization_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/avgpool_layer.c -o obj/avgpool_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/coco.c -o obj/coco.o
[01m[K./src/coco.c:[m[K In function â€˜[01m[Kvalidate_coco_recall[m[Kâ€™:
[01m[K./src/coco.c:248:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kbase[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     char *[01;35m[Kbase[m[K = "results/comp4_det_test_";
           [01;35m[K^~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/dice.c -o obj/dice.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/yolo.c -o obj/yolo.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/detector.c -o obj/detector.o
[01m[K./src/detector.c:[m[K In function â€˜[01m[Ktrain_detector[m[Kâ€™:
[01m[K./src/detector.c:386:72:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around â€˜[01m[K&&[m[Kâ€™ within â€˜[01m[K||[m[Kâ€™ [[01;35m[K-Wparentheses[m[K]
          [01;35m[K(iteration >= (iter_save + 1000) || iteration % 1000 == 0) && net.max_batches < 10000[m[K)
          [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K./src/detector.c:319:13:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kdraw_precision[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
         int [01;35m[Kdraw_precision[m[K = 0;
             [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K./src/detector.c:67:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_contrastive_acc[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_contrastive_acc[m[K = 0;
           [01;35m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K./src/detector.c:[m[K In function â€˜[01m[Kprint_cocos[m[Kâ€™:
[01m[K./src/detector.c:486:29:[m[K [01;35m[Kwarning: [m[Kformat not a string literal and no format arguments [[01;35m[K-Wformat-security[m[K]
                 fprintf(fp, [01;35m[Kbuff[m[K);
                             [01;35m[K^~~~[m[K
[01m[K./src/detector.c:[m[K In function â€˜[01m[Keliminate_bdd[m[Kâ€™:
[01m[K./src/detector.c:579:21:[m[K [01;35m[Kwarning: [m[Kstatement with no effect [[01;35m[K-Wunused-value[m[K]
                     [01;35m[Kfor[m[K (k; buf[k + n] != '\0'; k++)
                     [01;35m[K^~~[m[K
[01m[K./src/detector.c:[m[K In function â€˜[01m[Kvalidate_detector[m[Kâ€™:
[01m[K./src/detector.c:700:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kmkd2[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         int [01;35m[Kmkd2[m[K = make_directory(buff2, 0777);
             [01;35m[K^~~~[m[K
[01m[K./src/detector.c:698:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kmkd[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         int [01;35m[Kmkd[m[K = make_directory(buff, 0777);
             [01;35m[K^~~[m[K
[01m[K./src/detector.c:[m[K In function â€˜[01m[Kvalidate_detector_map[m[Kâ€™:
[01m[K./src/detector.c:1315:24:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kcur_prob[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
                 double [01;35m[Kcur_prob[m[K = 0;
                        [01;35m[K^~~~~~~~[m[K
[01m[K./src/detector.c:1336:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kclass_recall[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         float [01;35m[Kclass_recall[m[K = (float)tp_for_thresh_per_class[i] / ((float)tp_for_thresh_per_class[i] + (float)(truth_classes_count[i] - tp_for_thresh_per_class[i]));
               [01;35m[K^~~~~~~~~~~~[m[K
[01m[K./src/detector.c:1335:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kclass_precision[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         float [01;35m[Kclass_precision[m[K = (float)tp_for_thresh_per_class[i] / ((float)tp_for_thresh_per_class[i] + (float)fp_for_thresh_per_class[i]);
               [01;35m[K^~~~~~~~~~~~~~~[m[K
At top level:
[01m[K./src/detector.c:452:12:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kget_coco_image_id[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 static int [01;35m[Kget_coco_image_id[m[K(char *filename)
            [01;35m[K^~~~~~~~~~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/layer.c -o obj/layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/compare.c -o obj/compare.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/classifier.c -o obj/classifier.o
[01m[K./src/classifier.c:[m[K In function â€˜[01m[Ktrain_classifier[m[Kâ€™:
[01m[K./src/classifier.c:190:13:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kdraw_precision[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
         int [01;35m[Kdraw_precision[m[K = 0;
             [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K./src/classifier.c:146:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kcount[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     int [01;35m[Kcount[m[K = 0;
         [01;35m[K^~~~~[m[K
[01m[K./src/classifier.c:35:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_contrastive_acc[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_contrastive_acc[m[K = 0;
           [01;35m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K./src/classifier.c:[m[K In function â€˜[01m[Kpredict_classifier[m[Kâ€™:
[01m[K./src/classifier.c:855:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktime[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     clock_t [01;35m[Ktime[m[K;
             [01;35m[K^~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/local_layer.c -o obj/local_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/swag.c -o obj/swag.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/shortcut_layer.c -o obj/shortcut_layer.o
[01m[K./src/shortcut_layer.c:[m[K In function â€˜[01m[Kmake_shortcut_layer[m[Kâ€™:
[01m[K./src/shortcut_layer.c:55:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kscale[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         float [01;35m[Kscale[m[K = sqrt(2. / l.nweights);
               [01;35m[K^~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/representation_layer.c -o obj/representation_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/activation_layer.c -o obj/activation_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/rnn_layer.c -o obj/rnn_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/gru_layer.c -o obj/gru_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/rnn.c -o obj/rnn.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/rnn_vid.c -o obj/rnn_vid.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/crnn_layer.c -o obj/crnn_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/demo.c -o obj/demo.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/tag.c -o obj/tag.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/cifar.c -o obj/cifar.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/go.c -o obj/go.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/batchnorm_layer.c -o obj/batchnorm_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/art.c -o obj/art.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/region_layer.c -o obj/region_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/reorg_layer.c -o obj/reorg_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/reorg_old_layer.c -o obj/reorg_old_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/super.c -o obj/super.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/voxel.c -o obj/voxel.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/tree.c -o obj/tree.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/yolo_layer.c -o obj/yolo_layer.o
[01m[K./src/yolo_layer.c:[m[K In function â€˜[01m[Kprocess_batch[m[Kâ€™:
[01m[K./src/yolo_layer.c:426:25:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kbest_match_t[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
                     int [01;35m[Kbest_match_t[m[K = 0;
                         [01;35m[K^~~~~~~~~~~~[m[K
[01m[K./src/yolo_layer.c:[m[K In function â€˜[01m[Kforward_yolo_layer[m[Kâ€™:
[01m[K./src/yolo_layer.c:707:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_anyobj[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_anyobj[m[K = 0;
           [01;35m[K^~~~~~~~~~[m[K
[01m[K./src/yolo_layer.c:706:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_obj[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_obj[m[K = 0;
           [01;35m[K^~~~~~~[m[K
[01m[K./src/yolo_layer.c:705:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_cat[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_cat[m[K = 0;
           [01;35m[K^~~~~~~[m[K
[01m[K./src/yolo_layer.c:704:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Krecall75[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Krecall75[m[K = 0;
           [01;35m[K^~~~~~~~[m[K
[01m[K./src/yolo_layer.c:703:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Krecall[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Krecall[m[K = 0;
           [01;35m[K^~~~~~[m[K
[01m[K./src/yolo_layer.c:702:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_ciou_loss[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_ciou_loss[m[K = 0;
           [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K./src/yolo_layer.c:701:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_diou_loss[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_diou_loss[m[K = 0;
           [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K./src/yolo_layer.c:698:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_ciou[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_ciou[m[K = 0;
           [01;35m[K^~~~~~~~[m[K
[01m[K./src/yolo_layer.c:697:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_diou[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_diou[m[K = 0;
           [01;35m[K^~~~~~~~[m[K
[01m[K./src/yolo_layer.c:696:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_giou[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_giou[m[K = 0;
           [01;35m[K^~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/gaussian_yolo_layer.c -o obj/gaussian_yolo_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/upsample_layer.c -o obj/upsample_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/lstm_layer.c -o obj/lstm_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/conv_lstm_layer.c -o obj/conv_lstm_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/scale_channels_layer.c -o obj/scale_channels_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast -c ./src/sam_layer.c -o obj/sam_layer.o
g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -Ofast obj/image_opencv.o obj/http_stream.o obj/gemm.o obj/utils.o obj/dark_cuda.o obj/convolutional_layer.o obj/list.o obj/image.o obj/activations.o obj/im2col.o obj/col2im.o obj/blas.o obj/crop_layer.o obj/dropout_layer.o obj/maxpool_layer.o obj/softmax_layer.o obj/data.o obj/matrix.o obj/network.o obj/connected_layer.o obj/cost_layer.o obj/parser.o obj/option_list.o obj/darknet.o obj/detection_layer.o obj/captcha.o obj/route_layer.o obj/writing.o obj/box.o obj/nightmare.o obj/normalization_layer.o obj/avgpool_layer.o obj/coco.o obj/dice.o obj/yolo.o obj/detector.o obj/layer.o obj/compare.o obj/classifier.o obj/local_layer.o obj/swag.o obj/shortcut_layer.o obj/representation_layer.o obj/activation_layer.o obj/rnn_layer.o obj/gru_layer.o obj/rnn.o obj/rnn_vid.o obj/crnn_layer.o obj/demo.o obj/tag.o obj/cifar.o obj/go.o obj/batchnorm_layer.o obj/art.o obj/region_layer.o obj/reorg_layer.o obj/reorg_old_layer.o obj/super.o obj/voxel.o obj/tree.o obj/yolo_layer.o obj/gaussian_yolo_layer.o obj/upsample_layer.o obj/lstm_layer.o obj/conv_lstm_layer.o obj/scale_channels_layer.o obj/sam_layer.o -o darknet -lm -pthread
ultra96@EE382N4:~/darknet$ echo $?
0
ultra96@EE382N4:~/darknet$ echo $?[3Pmake cleanvim Makefile [6Pgit logpullls[Kcd darknet/ls[Kgit pull clone https://ghp_0Os18cbeSB0Mse9xTDueidXouJzRBX2xxWm9e@github.com/CHINTADINESH/darknet.git[Ahttps://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@githu[10Pb.com/CHINTADINESH/darknet.git`   

[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pgit clone https://github.com/CHINTADINESH/darknet
[K
[K
[K[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cset -o vi[Kping www.google.com[10Pset -o vigit clone https://github.com/CHINTADINESH/darknet[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Chttps://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@githuub.com/CHINTADINESH/darknet`

[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C.git
[K
[K[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Agit clone https://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@github.com/CHINTADINESH/darknet.git[Apull [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd darknet/ls[Kgit pull[1Plogvim Makefile [3Pmake clean[Kecho $?[K
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ ^C

ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ git status
On branch master
Your branch is up-to-date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	[31mmodified:   Makefile[m

no changes added to commit (use "git add" and/or "git commit -a")
ultra96@EE382N4:~/darknet$ vim README.md 
[1;24r[27m[24m[0m[H[J[24;1H"README.md" 816L, 66040C[2;1Hâ–½[6n[2;1H  [1;1H[1;1H[1m# Yolo v4, v3 and v2 for Windows and Linux

## EE382M soc notes
-[0m [[4mLab1 setup link[24m]([4mhttp://users.ece.utexas.edu/~gerstl/ece382m_f21/labs/lab1.htt[5;1Hm[24m)
[1m### Steps
1.[0m Connect the board and turn it on. Make sure the corresponding device appears  [8;1Hin the /dev directory
[1m2.[0m use screen to connect to the boards terminal
[1m    ```bash[0m
    sudo screen -L /dev/ttyUSB1 115200
[1m    ```[0m


[7m**[0m For a graceful shutdown, please use the fillowing command
[1m```bash[0m
sudo halt
[1m```

## (neural networks for object detection)[0m

Paper YOLO v4: https://arxiv.org/abs/2004.10934[24;63H1,1[11CTop[1;1H[24;53Hj[1;1H[24;53H [2;1H[24;63H2,0-1[2;1H[24;53Hj[2;1H[24;53H [3;1H[24;63H3,1  [3;1H[24;53Hj[3;1H[24;53H [4;1H[24;63H4[4;1H[24;53Hj[4;1H[24;53H [6;1H[24;63H5[6;1H[24;53Hj[6;1H[24;53H [7;1H[24;63H6[7;1H[24;53Hj[7;1H[24;53H [9;1H[24;63H7[9;1H[24;53Hj[9;1H[24;53H [10;1H[24;63H8[10;1H[24;53Hj[10;1H[24;53H [11;1H[24;63H9[11;1H[24;53Hj[11;1H[24;53H [12;1H[24;63H10,1[12;1H[24;53Hk[12;1H[24;53H [11;1H[24;63H9,1 [11;1H[24;53Ho[11;1H[24;53H [12;1H[24;1H[1m-- INSERT --[0m[24;13H[K[24;63H10,1[10CTop[12;23r[12;1H[L[1;24r[24;63H[K[24;63H10,1[10CTop[12;1H[24;1H[K[24;63H10,0-1[8CTop[12;1H[24;53Hu[12;1H[24;1H1 line less; before #1  1 seconds ago[24;53H[K[11;1H[12;23r[23;1H
[1;24r[24;1H[K[24;63H9,1[11CTop[11;1H[24;53Hj[11;1H[24;53H [12;1H[24;63H10,1[12;1H[24;53Hi[12;1H[24;53H [12;1H[24;1H[1m-- INSERT --[0m[24;63H[K[24;63H10,1[10CTop[12;1H[24;1H[K[12;1H[24;53H^[[12;1H[24;53H  [12;1H[24;63H10,1[10CTop[12;1H[24;53Hk[12;1H[24;53H [11;1H[24;63H9,1 [11;1H[24;53Hk[11;1H[24;53H [10;1H[24;63H8[10;1H[24;53Hj[10;1H[24;53H [11;1H[24;63H9[11;1H[24;53Hj[11;1H[24;53H [12;1H[24;63H10,1[12;1H[24;53Ho[12;1H[24;53H [13;1H[24;1H[1m-- INSERT --[0m[24;63H[K[24;63H11,1[10CTop[13;23r[13;1H[L[1;24r[24;63H[K[24;63H11,1[10CTop[13;1H3[24;66H2[13;2H.[24;66H3[13;3H[24;66H4[13;4H[24;1H[K[13;3H[24;53H^[[13;3H[24;53H  [13;4H[24;63H11,3[10CTop[13;3H[24;53Hk[13;3H[24;53H [12;3H[24;64H0[12;3H[24;53Hd[12;3H[24;54Hd[12;3H[24;53H  [12;1H[12;23r[23;1H
[1;24r[15;1H**
```bash[24;63H[K[24;63H10,1[10CTop[12;1H[24;53H$[12;1H[24;53H [12;3H[24;66H3[12;3H[24;53Ha[12;3H[24;53H [12;4H[24;1H[1m-- INSERT --[0m[24;63H[K[24;63H10,4[10CTop[12;4HW[24;66H5[12;5He[24;66H6[12;6H[24;66H7[12;7Hn[24;66H8[12;8Ho[24;66H9[12;9Ht[24;66H10[12;10Hi[24;67H1[12;11Hc[24;67H2[12;12He[24;67H3[12;13H[24;67H4[12;14H[24;67H3[12;13H[12;12H[K[24;67H2[12;12H[12;11H[K[24;67H1[12;11H[12;10H[K[24;67H0[12;10H[12;9H[K[24;66H9 [12;9H[12;8H[K[24;66H8[12;8H[12;7H[K[24;66H7[12;7H[24;66H6[12;6H[12;5H[K[24;66H5[12;5H[12;4H[K[24;66H4[12;4Hf[24;66H5[12;5Hi[24;66H6[12;6H[12;5H[K[24;66H5[12;5H[12;4H[K[24;66H4[12;4Hf[24;66H5[12;5H[12;4H[K[24;66H4[12;4HI[24;66H5[12;5Hf[24;66H6[12;6H[24;66H7[12;7Hy[24;66H8[12;8Ho[24;66H9[12;9Hu[24;66H10[12;10H[24;67H1[12;11Ha[24;67H2[12;12Hr[24;67H3[12;13He[24;67H4[12;14H[24;67H5[12;15Hn[24;67H6[12;16Hn[24;67H7[12;17Ho[24;67H8[12;18Ht[24;67H9[12;19H[24;66H20[12;20Hw[24;67H1[12;21Ho[24;67H2[12;22Hr[24;67H3[12;23Hk[24;67H4[12;24H[12;23H[K[24;67H3[12;23H[12;22H[K[24;67H2[12;22H[12;21H[K[24;67H1[12;21H[12;20H[K[24;67H0[12;20H[24;66H19[12;19H[12;18H[K[24;67H8[12;18H[12;17H[K[24;67H7[12;17H[12;16H[K[24;67H6[12;16Ho[24;67H7[12;17Ht[24;67H8[12;18H[24;67H9[12;19Hw[24;66H20[12;20Ho[24;67H1[12;21Hr[24;67H2[12;22Hk[24;67H3[12;23Hi[24;67H4[12;24Hn[24;67H5[12;25Hg[24;67H6[12;26H[24;67H7[12;27Ho[24;67H8[12;28Hn[24;67H9[12;29Ht[24;66H30[12;30Hh[24;67H1[12;31H[12;30H[K[24;67H0[12;30H[24;67H1[12;31Ht[24;67H2[12;32Hh[24;67H3[12;33H[12;32H[K[24;67H2[12;32H[12;31H[K[24;67H1[12;31H[24;67H0[12;30H[12;29H[K[24;66H29[12;29H[12;28H[K[24;67H8[12;28Hn[24;67H9[12;29H[24;66H30[12;30Ht[24;67H1[12;31Hh[24;67H2[12;32He[24;67H3[12;33H[24;67H4[12;34Hb[24;67H5[12;35Ha[24;67H6[12;36Ho[24;67H7[12;37Hr[24;67H8[12;38Hd[24;67H9[12;39H,[24;66H40[12;40H[24;67H1[12;41Hc[24;67H2[12;42H[24;67H3[12;43Hc[24;67H4[12;44Ho[24;67H5[12;45Hd[24;67H6[12;46He[24;67H7[12;47H[24;67H8[12;48Hm[24;67H9[12;49Hi[24;66H50[12;50Hg[24;67H1[12;51Hh[24;67H2[12;52Ht[24;67H3[12;53H[24;67H4[12;54Hb[24;67H5[12;55He[24;67H6[12;56H[24;67H7[12;57Ht[24;67H8[12;58Hh[24;67H9[12;59Hr[24;66H60[12;60Ho[24;67H1[12;61Hu[24;67H2[12;62H[12;61H[K[24;67H1[12;61Hw[24;67H2[12;62Hi[24;67H3[12;63Hn[24;67H4[12;64Hg[24;67H5[12;65H[24;67H6[12;66Ha[24;67H7[12;67Hn[24;67H8[12;68H[24;67H9[12;69H[24;67H8[12;68H[12;67H[K[24;67H7[12;67H[12;66H[K[24;67H6[12;66He[24;67H7[12;67Hr[24;67H8[12;68Hr[24;67H9[12;69Ho[24;66H70[12;70Hr[24;67H1[12;71Hs[24;67H2[12;72H.[24;67H3[12;73H[24;67H4[12;74HP[24;67H5[12;75Hl[24;67H6[12;76He[24;67H7[12;77Ha[24;67H8[12;78Hs[24;67H9[12;79He[24;66H80[12;80H[24;67H1[13;1H[13;23r[13;1H[L[1;24r[13;1Hu[24;63H[K[24;63H10,82[9CTop[13;2Hs[24;67H3[13;3He[24;67H4[13;4H[24;67H5[13;5Hc[24;67H6[13;6Hp[24;67H7[13;7Hp[24;67H8[13;8H[13;7H[K[24;67H7[13;7H[13;6H[K[24;67H6[13;6H[13;5H[K[24;67H5[13;5Hg[24;67H6[13;6H+[24;67H7[13;7H+[24;67H8[13;8H[24;67H9[13;9Hw[24;66H90[13;10Hh[24;67H1[13;11Hi[24;67H2[13;12Hl[24;67H3[13;13He[24;67H4[13;14H[24;67H5[13;15Hc[24;67H6[13;16Ho[24;67H7[13;17Hm[24;67H8[13;18Hp[24;67H9[13;19Hi[24;66H100[13;20Hl[24;68H1[13;21He[24;68H2[13;22H[13;21H[K[24;68H1[13;21Hi[24;68H2[13;22Hn[24;68H3[13;23Hg[24;68H4[13;24H.[24;68H5[13;25H[24;68H6[13;26H[24;1H[K[13;25H[24;53H^[[13;25H[24;53H  [13;26H[24;63H10,105[8CTop[13;25H[24;53H^[[13;25H[24;53H  [13;25H[24;53H^[[13;25H[24;53H  [13;25H[24;53H>[13;25H[24;54H<20>[13;25H[24;53H     [12;9H        3. If you are not working on the baord, c code might be throwing errors..[13;1H Please use g++ while compiling.[24;66H2-9[12;9H[24;53Hu[12;9H[24;1H1 change; before #5  1 seconds ago[24;53H[K[13;25H[12;1H3. If you are not working on the baord, c code might be throwing errors. Please  [13;1Huse g++ while compiling. [13;26H[K[24;63H10,105[8CTop[13;25H[24;53Hj[13;25H[24;53H [14;1H[24;64H1,0-1[14;1H[24;53Hk[14;1H[24;53H [13;25H[24;64H0,105[13;25H[24;53Hh[13;25H[24;53H [13;24H[24;68H4[13;24H[24;53Hh[13;24H[24;53H [13;23H[24;68H3[13;23H[24;53Hk[13;23H[24;53H [11;38H[24;63H9,38  [11;38H[24;53HJ[11;38H[24;53H [11;39H[11;23r[23;1H
[1;24r[11;1H    sudo screen -L /dev/ttyUSB1 115200 3. If you are not working on the baord, cc[12;1H code might be throwing errors. Please use g++ while compiling.[24;1H[K[24;63H9,39[10CTop[11;39H[24;53Hu[11;39H[24;1H1 more line; before #6  1 seconds ago[24;53H[K[11;38H[13;23r[13;1H[L[1;24r[11;40H[K[12;1H3. If you are not working on the baord, c code might be throwing errors. Please  [13;1Huse g++ while compiling.[24;1H[K[24;63H9,38[10CTop[11;38H[24;53Hj[11;38H[24;53H [12;38H[24;63H10,38[12;38H[24;53HJ[12;38H[24;53H [13;26H[12;23r[23;1H
[1;24r[12;1H3. If you are not working on the baord, c code might be throwing errors. Please  [13;1Huse g++ while compiling.[24;63H[K[24;63H10,106[8CTop[13;26H[24;53Hu[13;26H[24;1H1 more line; before #7  1 seconds ago[24;53H[K[12;38H[14;23r[14;1H[L[1;24r[24;1H[K[24;63H10,38[9CTop[12;38H[24;53HJ[12;38H[24;53H [13;26H[12;23r[23;1H
[1;24r[12;1H3. If you are not working on the baord, c code might be throwing errors. Please  [13;1Huse g++ while compiling.[24;63H[K[24;63H10,106[8CTop[13;26H[24;53H:[13;26H[24;53H[K[24;1H:w"README.md" 815L, 66138C written[13;26H[24;63H10,106[8CTop[24;63H[K[24;63H10,106[8CTop[13;26H[24;53H:[13;26H[24;1H[K[24;1H:q[24;1H[K[24;1Hultra96@EE382N4:~/darknet$ vim README.md 
[1;24r[27m[24m[0m[H[J[24;1H"README.md" 815L, 66138C[2;1Hâ–½[6n[2;1H  [1;1H[1;1H[1m# Yolo v4, v3 and v2 for Windows and Linux

## EE382M soc notes
-[0m [[4mLab1 setup link[24m]([4mhttp://users.ece.utexas.edu/~gerstl/ece382m_f21/labs/lab1.htt[5;1Hm[24m)
[1m### Steps
1.[0m Connect the board and turn it on. Make sure the corresponding device appears  [8;1Hin the /dev directory
[1m2.[0m use screen to connect to the boards terminal
[1m    ```bash[0m
    sudo screen -L /dev/ttyUSB1 115200
3. If you are not working on the baord, c code might be throwing errors. Please  [13;1Huse g++ while compiling.

** For a graceful shutdown, please use the fillowing command
```bash
sudo halt
[1m```

## (neural networks for object detection)[0m

Paper YOLO v4: https://arxiv.org/abs/2004.10934[24;63H1,1[11CTop[1;1H[24;53Hj[1;1H[24;53H [2;1H[24;63H2,0-1[2;1H[24;53Hj[2;1H[24;53H [3;1H[24;63H3,1  [3;1H[24;53Hj[3;1H[24;53H [4;1H[24;63H4[4;1H[24;53Hj[4;1H[24;53H [6;1H[24;63H5[6;1H[24;53Hj[6;1H[24;53H [7;1H[24;63H6[7;1H[24;53Hj[7;1H[24;53H [9;1H[24;63H7[9;1H[24;53Hj[9;1H[24;53H [10;1H[24;63H8[10;1H[24;53Hj[10;1H[24;53H [11;1H[24;63H9[11;1H[24;53Hj[11;1H[24;53H [12;1H[24;63H10,1[12;1H[24;53Hj[12;1H[24;53H [14;1H[24;64H1,0-1[14;1H[24;53Hk[14;1H[24;53H [12;1H[24;64H0,1  [12;1H[24;53H$[12;1H[24;53H [13;26H[24;67H06[13;26H[24;53Hi[13;26H[24;53H [13;26H[24;1H[1m-- INSERT --[0m[24;13H[K[24;63H10,106[8CTop[13;26HA[24;68H7[13;27Hl[24;68H8[13;28Hs[24;68H9[13;29Ho[24;67H10[13;30H,[24;68H1[13;31H[24;68H2[13;32Hm[24;68H3[13;33Ha[24;68H4[13;34Hk[24;68H5[13;35He[24;68H6[13;36H[24;68H7[13;37Hs[24;68H8[13;38Hu[24;68H9[13;39Hr[24;67H20[13;40He[24;68H1[13;41H[24;68H2[13;42Ht[24;68H3[13;43Hh[24;68H4[13;44Ha[24;68H5[13;45Ht[24;68H6[13;46H[24;68H7[13;47H[24;68H6[13;46H [24;68H5[13;45H [24;68H4[13;44H [24;68H3[13;43H [24;68H2[13;42H[24;68H1[13;41H [24;68H0[13;40H [24;67H19[13;39H [24;68H8[13;38H [24;68H7[13;37H[24;68H6[13;36H [24;68H5[13;35H [24;68H4[13;34H [24;68H3[13;33H [24;68H2[13;32Hs[24;68H3[13;33He[24;68H4[13;34Ht[24;68H5[13;35H[24;68H6[13;36Hp[24;68H7[13;37Hr[24;68H8[13;38Ho[24;68H9[13;39Hf[24;67H20[13;40Hi[24;68H1[13;41Hl[24;68H2[13;42Hi[24;68H3[13;43Hn[24;68H4[13;44Hg[24;68H5[13;45H[24;68H6[13;46Ht[24;68H7[13;47Ho[24;68H8[13;48H[24;68H9[13;49H[24;68H8[13;48H [24;68H7[13;47H [24;68H6[13;46Ha[24;68H7[13;47Hp[24;68H8[13;48Hp[24;68H9[13;49Hr[24;67H30[13;50Ho[24;68H1[13;51Hp[24;68H2[13;52Hr[24;68H3[13;53Hi[24;68H4[13;54Ha[24;68H5[13;55Ht[24;68H6[13;56He[24;68H7[13;57Hl[24;68H8[13;58Hy[24;68H9[13;59H.[24;67H40[13;60H[24;1H[K[13;59H[24;53H^[[13;59H[24;53H  [13;60H[24;63H10,139[8CTop[13;59H[24;53Hk[13;59H[24;53H [11;38H[24;63H9,38  [11;38H[24;53Hj[11;38H[24;53H [13;59H[24;63H10,139[13;59H[24;53H:[13;59H[24;53H[K[24;1H:w"README.md" 815L, 66172C written[13;59H[24;63H10,139[8CTop[24;63H[K[24;63H10,139[8CTop[13;59H[24;53Ho[13;59H[24;53H [14;1H[24;1H[1m-- INSERT --[0m[24;13H[K[24;63H11,1[10CTop[14;23r[14;1H[L[1;24r[24;63H[K[24;63H11,1[10CTop[14;1H4[24;66H2[14;2H.[24;66H3[14;3H[24;66H4[14;4H[24;1H[K[14;3H[24;53H^[[14;3H[24;53H  [14;4H[24;63H11,3[10CTop[14;3H[24;53Hk[14;3H[24;53H [12;3H[24;64H0[12;3H[24;53Hj[12;3H[24;53H [14;3H[24;64H1[14;3H[24;53H:[14;3H[24;53H[K[24;1H:w"README.md" 816L, 66176C written[14;3H[24;63H11,3[10CTop[24;63H[K[24;63H11,3[10CTop[14;3H[24;53H:[14;3H[24;1H[K[24;1H:q[24;1H[K[24;1Hultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ wget https://pjreddie.com/media/files/yolov3-tiny.weigghts
--2021-09-11 13:35:42--  https://pjreddie.com/media/files/yolov3-tiny.weights
Resolving pjreddie.com (pjreddie.com)... 128.208.4.108
Connecting to pjreddie.com (pjreddie.com)|128.208.4.108|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 35434956 (34M) [application/octet-stream]
Saving to: â€˜yolov3-tiny.weightsâ€™

yolov3-tiny.weights   0%[                    ]       0  --.-KB/s               yolov3-tiny.weights   0%[                    ]  23.70K  83.8KB/s               yolov3-tiny.weights   0%[                    ]  39.70K  81.1KB/s               yolov3-tiny.weights   0%[                    ]  55.70K  62.1KB/s               yolov3-tiny.weights   0%[                    ]  71.70K  64.9KB/s               yolov3-tiny.weights   0%[                    ] 103.70K  68.7KB/s               yolov3-tiny.weights   0%[                    ] 119.70K  69.5KB/s               yolov3-tiny.weights   0%[                    ] 135.70K  60.7KB/s               yolov3-tiny.weights   0%[                    ] 167.70K  46.9KB/s    eta 12m 15syolov3-tiny.weights   0%[                    ] 183.70K  46.4KB/s    eta 12m 15syolov3-tiny.weights   0%[                    ] 231.70K  54.2KB/s    eta 12m 15syolov3-tiny.weights   0%[                    ] 263.70K  55.5KB/s    eta 10m 19syolov3-tiny.weights   0%[                    ] 279.70K  55.0KB/s    eta 10m 19syolov3-tiny.weights   0%[                    ] 311.70K  56.4KB/s    eta 10m 19syolov3-tiny.weights   0%[                    ] 343.70K  57.0KB/s    eta 10m 1s yolov3-tiny.weights   1%[                    ] 359.70K  56.1KB/s    eta 10m 1s yolov3-tiny.weights   1%[                    ] 391.70K  56.4KB/s    eta 10m 1s yolov3-tiny.weights   1%[                    ] 471.70K  65.1KB/s    eta 8m 44s yolov3-tiny.weights   1%[                    ] 583.70K  76.7KB/s    eta 8m 44s yolov3-tiny.weights   1%[                    ] 663.70K  84.4KB/s    eta 8m 44s yolov3-tiny.weights   2%[                    ] 743.70K  92.4KB/s    eta 8m 44s yolov3-tiny.weights   2%[                    ] 903.70K   111KB/s    eta 5m 9s  yolov3-tiny.weights   3%[                    ]   1.04M   132KB/s    eta 5m 9s  yolov3-tiny.weights   3%[                    ]   1.15M   145KB/s    eta 5m 9s  yolov3-tiny.weights   3%[                    ]   1.30M   166KB/s    eta 5m 9s  yolov3-tiny.weights   4%[                    ]   1.55M   209KB/s    eta 5m 9s  yolov3-tiny.weights   5%[>                   ]   1.79M   285KB/s    eta 2m 48s yolov3-tiny.weights   5%[>                   ]   2.01M   331KB/s    eta 2m 48s yolov3-tiny.weights   6%[>                   ]   2.23M   390KB/s    eta 2m 48s yolov3-tiny.weights   7%[>                   ]   2.43M   436KB/s    eta 2m 48s yolov3-tiny.weights   7%[>                   ]   2.49M   463KB/s    eta 2m 48s yolov3-tiny.weights   7%[>                   ]   2.68M   528KB/s    eta 2m 3s  yolov3-tiny.weights   8%[>                   ]   2.82M   640KB/s    eta 2m 3s  yolov3-tiny.weights   9%[>                   ]   3.10M   711KB/s    eta 2m 3s  yolov3-tiny.weights   9%[>                   ]   3.32M   761KB/s    eta 2m 3s  yolov3-tiny.weights  10%[=>                  ]   3.60M   812KB/s    eta 97s    yolov3-tiny.weights  11%[=>                  ]   3.87M   873KB/s    eta 97s    yolov3-tiny.weights  12%[=>                  ]   4.08M   896KB/s    eta 97s    yolov3-tiny.weights  12%[=>                  ]   4.35M   944KB/s    eta 97s    yolov3-tiny.weights  13%[=>                  ]   4.65M   952KB/s    eta 97s    yolov3-tiny.weights  14%[=>                  ]   4.90M   966KB/s    eta 75s    yolov3-tiny.weights  15%[==>                 ]   5.29M  1021KB/s    eta 75s    yolov3-tiny.weights  16%[==>                 ]   5.52M  1.00MB/s    eta 75s    yolov3-tiny.weights  16%[==>                 ]   5.63M  1011KB/s    eta 75s    yolov3-tiny.weights  17%[==>                 ]   5.77M   991KB/s    eta 75s    yolov3-tiny.weights  17%[==>                 ]   5.90M   969KB/s    eta 65s    yolov3-tiny.weights  17%[==>                 ]   5.98M   958KB/s    eta 65s    yolov3-tiny.weights  18%[==>                 ]   6.16M   981KB/s    eta 65s    yolov3-tiny.weights  18%[==>                 ]   6.35M   993KB/s    eta 65s    yolov3-tiny.weights  19%[==>                 ]   6.73M  1009KB/s    eta 65s    yolov3-tiny.weights  20%[===>                ]   6.83M   936KB/s    eta 59s    yolov3-tiny.weights  20%[===>                ]   6.98M   931KB/s    eta 59s    yolov3-tiny.weights  21%[===>                ]   7.23M   945KB/s    eta 59s    yolov3-tiny.weights  21%[===>                ]   7.35M   909KB/s    eta 59s    yolov3-tiny.weights  22%[===>                ]   7.51M   852KB/s    eta 59s    yolov3-tiny.weights  22%[===>                ]   7.63M   815KB/s    eta 55s    yolov3-tiny.weights  23%[===>                ]   7.88M   768KB/s    eta 55s    yolov3-tiny.weights  24%[===>                ]   8.12M   771KB/s    eta 55s    yolov3-tiny.weights  24%[===>                ]   8.18M   695KB/s    eta 55s    yolov3-tiny.weights  24%[===>                ]   8.37M   712KB/s    eta 53s    yolov3-tiny.weights  25%[====>               ]   8.52M   716KB/s    eta 53s    yolov3-tiny.weights  25%[====>               ]   8.60M   686KB/s    eta 53s    yolov3-tiny.weights  25%[====>               ]   8.73M   681KB/s    eta 53s    yolov3-tiny.weights  26%[====>               ]   9.08M   741KB/s    eta 53s    yolov3-tiny.weights  27%[====>               ]   9.37M   670KB/s    eta 49s    yolov3-tiny.weights  28%[====>               ]   9.74M   739KB/s    eta 49s    yolov3-tiny.weights  30%[=====>              ]  10.24M   831KB/s    eta 49s    yolov3-tiny.weights  31%[=====>              ]  10.68M   866KB/s    eta 49s    yolov3-tiny.weights  32%[=====>              ]  10.88M   894KB/s    eta 49s    yolov3-tiny.weights  32%[=====>              ]  11.02M   886KB/s    eta 41s    yolov3-tiny.weights  33%[=====>              ]  11.23M   901KB/s    eta 41s    yolov3-tiny.weights  34%[=====>              ]  11.52M   944KB/s    eta 41s    yolov3-tiny.weights  34%[=====>              ]  11.77M   961KB/s    eta 41s    yolov3-tiny.weights  35%[======>             ]  12.07M   960KB/s    eta 41s    yolov3-tiny.weights  36%[======>             ]  12.32M  1.06MB/s    eta 37s    yolov3-tiny.weights  36%[======>             ]  12.43M  1.01MB/s    eta 37s    yolov3-tiny.weights  38%[======>             ]  12.98M  1.12MB/s    eta 37s    yolov3-tiny.weights  39%[======>             ]  13.38M  1.22MB/s    eta 37s    yolov3-tiny.weights  40%[=======>            ]  13.54M  1.09MB/s    eta 34s    yolov3-tiny.weights  41%[=======>            ]  14.12M  1.12MB/s    eta 34s    yolov3-tiny.weights  42%[=======>            ]  14.48M  1.24MB/s    eta 34s    yolov3-tiny.weights  43%[=======>            ]  14.63M  1.11MB/s    eta 34s    yolov3-tiny.weights  43%[=======>            ]  14.83M   935KB/s    eta 31s    yolov3-tiny.weights  45%[========>           ]  15.30M   957KB/s    eta 31s    yolov3-tiny.weights  46%[========>           ]  15.87M  1.01MB/s    eta 31s    yolov3-tiny.weights  47%[========>           ]  16.05M  1008KB/s    eta 31s    yolov3-tiny.weights  47%[========>           ]  16.15M   843KB/s    eta 28s    yolov3-tiny.weights  48%[========>           ]  16.48M   844KB/s    eta 28s    yolov3-tiny.weights  49%[========>           ]  16.83M   875KB/s    eta 28s    yolov3-tiny.weights  50%[=========>          ]  17.12M   873KB/s    eta 28s    yolov3-tiny.weights  51%[=========>          ]  17.27M   868KB/s    eta 28s    yolov3-tiny.weights  51%[=========>          ]  17.44M   856KB/s    eta 26s    yolov3-tiny.weights  51%[=========>          ]  17.46M   753KB/s    eta 26s    yolov3-tiny.weights  51%[=========>          ]  17.57M   693KB/s    eta 26s    yolov3-tiny.weights  53%[=========>          ]  18.01M   736KB/s    eta 26s    yolov3-tiny.weights  54%[=========>          ]  18.41M   832KB/s    eta 24s    yolov3-tiny.weights  54%[=========>          ]  18.58M   685KB/s    eta 24s    yolov3-tiny.weights  55%[==========>         ]  18.59M   597KB/s    eta 25s    yolov3-tiny.weights  55%[==========>         ]  18.59M   528KB/s    eta 25s    yolov3-tiny.weights  55%[==========>         ]  18.60M   485KB/s    eta 26s    yolov3-tiny.weights  62%[===========>        ]  21.04M   592KB/s    eta 21s    yolov3-tiny.weights  64%[===========>        ]  21.65M   673KB/s    eta 21s    yolov3-tiny.weights  64%[===========>        ]  21.74M   610KB/s    eta 21s    yolov3-tiny.weights  64%[===========>        ]  21.82M   574KB/s    eta 21s    yolov3-tiny.weights  64%[===========>        ]  21.85M   581KB/s    eta 19s    yolov3-tiny.weights  65%[============>       ]  21.99M   633KB/s    eta 19s    yolov3-tiny.weights  66%[============>       ]  22.48M   651KB/s    eta 19s    yolov3-tiny.weights  68%[============>       ]  23.05M   682KB/s    eta 19s    yolov3-tiny.weights  69%[============>       ]  23.38M   664KB/s    eta 16s    yolov3-tiny.weights  69%[============>       ]  23.63M   672KB/s    eta 16s    yolov3-tiny.weights  70%[=============>      ]  23.85M   726KB/s    eta 16s    yolov3-tiny.weights  71%[=============>      ]  24.02M   737KB/s    eta 16s    yolov3-tiny.weights  71%[=============>      ]  24.21M   717KB/s    eta 16s    yolov3-tiny.weights  72%[=============>      ]  24.41M   676KB/s    eta 14s    yolov3-tiny.weights  72%[=============>      ]  24.57M   711KB/s    eta 14s    yolov3-tiny.weights  73%[=============>      ]  24.77M   975KB/s    eta 14s    yolov3-tiny.weights  73%[=============>      ]  24.91M   888KB/s    eta 14s    yolov3-tiny.weights  74%[=============>      ]  25.19M   939KB/s    eta 14s    yolov3-tiny.weights  75%[==============>     ]  25.38M   978KB/s    eta 13s    yolov3-tiny.weights  75%[==============>     ]  25.57M  1.05MB/s    eta 13s    yolov3-tiny.weights  76%[==============>     ]  25.87M  1.10MB/s    eta 13s    yolov3-tiny.weights  76%[==============>     ]  25.98M  1.01MB/s    eta 13s    yolov3-tiny.weights  77%[==============>     ]  26.18M   969KB/s    eta 13s    yolov3-tiny.weights  77%[==============>     ]  26.27M   866KB/s    eta 11s    yolov3-tiny.weights  78%[==============>     ]  26.54M   868KB/s    eta 11s    yolov3-tiny.weights  79%[==============>     ]  26.85M   904KB/s    eta 11s    yolov3-tiny.weights  80%[===============>    ]  27.10M   930KB/s    eta 11s    yolov3-tiny.weights  80%[===============>    ]  27.29M   937KB/s    eta 11s    yolov3-tiny.weights  80%[===============>    ]  27.37M   899KB/s    eta 10s    yolov3-tiny.weights  81%[===============>    ]  27.48M   892KB/s    eta 10s    yolov3-tiny.weights  82%[===============>    ]  27.74M   931KB/s    eta 10s    yolov3-tiny.weights  82%[===============>    ]  27.91M   895KB/s    eta 10s    yolov3-tiny.weights  83%[===============>    ]  28.12M   934KB/s    eta 10s    yolov3-tiny.weights  84%[===============>    ]  28.41M   937KB/s    eta 8s     yolov3-tiny.weights  84%[===============>    ]  28.52M   923KB/s    eta 8s     yolov3-tiny.weights  84%[===============>    ]  28.71M   919KB/s    eta 8s     yolov3-tiny.weights  85%[================>   ]  28.80M   882KB/s    eta 8s     yolov3-tiny.weights  86%[================>   ]  29.12M   914KB/s    eta 8s     yolov3-tiny.weights  86%[================>   ]  29.33M   945KB/s    eta 7s     yolov3-tiny.weights  87%[================>   ]  29.44M   915KB/s    eta 7s     yolov3-tiny.weights  87%[================>   ]  29.73M   958KB/s    eta 7s     yolov3-tiny.weights  88%[================>   ]  30.02M   954KB/s    eta 7s     yolov3-tiny.weights  88%[================>   ]  30.04M   861KB/s    eta 5s     yolov3-tiny.weights  89%[================>   ]  30.41M   898KB/s    eta 5s     yolov3-tiny.weights  90%[=================>  ]  30.66M   921KB/s    eta 5s     yolov3-tiny.weights  91%[=================>  ]  30.91M   980KB/s    eta 5s     yolov3-tiny.weights  92%[=================>  ]  31.12M   959KB/s    eta 5s     yolov3-tiny.weights  92%[=================>  ]  31.30M   943KB/s    eta 4s     yolov3-tiny.weights  93%[=================>  ]  31.60M   957KB/s    eta 4s     yolov3-tiny.weights  94%[=================>  ]  31.88M   977KB/s    eta 4s     yolov3-tiny.weights  94%[=================>  ]  32.08M   980KB/s    eta 4s     yolov3-tiny.weights  96%[==================> ]  32.44M  1024KB/s    eta 4s     yolov3-tiny.weights  96%[==================> ]  32.58M   999KB/s    eta 2s     yolov3-tiny.weights  97%[==================> ]  32.82M   978KB/s    eta 2s     yolov3-tiny.weights  97%[==================> ]  32.91M   938KB/s    eta 2s     yolov3-tiny.weights  97%[==================> ]  33.05M   953KB/s    eta 2s     yolov3-tiny.weights  97%[==================> ]  33.08M   894KB/s    eta 2s     yolov3-tiny.weights  98%[==================> ]  33.23M   873KB/s    eta 1s     yolov3-tiny.weights  99%[==================> ]  33.46M   885KB/s    eta 1s     yolov3-tiny.weights  99%[==================> ]  33.74M   905KB/s    eta 1s     yolov3-tiny.weights 100%[===================>]  33.79M   899KB/s    in 48s     

2021-09-11 13:36:49 (720 KB/s) - â€˜yolov3-tiny.weightsâ€™ saved [35434956/35434956]

ultra96@EE382N4:~/darknet$ ls
3rdparty		darknet_video.py       README.md
backup			data		       results
build			image_yolov3.sh        scripts
build.ps1		image_yolov4.sh        src
cfg			include		       trash
cmake			json_mjpeg_streams.sh  vcpkg.json
CMakeLists.txt		LICENSE		       video_yolov3.sh
darknet			Makefile	       video_yolov4.sh
DarknetConfig.cmake.in	net_cam_v3.sh	       yolov3-tiny.weights
darknet_images.py	net_cam_v4.sh
darknet.py		obj
ultra96@EE382N4:~/darknet$ ./darknet detect cfg/yolov3-tiny.cfg yolov3-tiny.weighhts data/dog.jpg -save_labels
 GPU isn't used 
 OpenCV isn't used - data augmentation will be slow 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
   layer   filters  size/strd(dil)      input                output
   0 conv     16       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  16 0.150 BF
   1 max                2x 2/ 2    416 x 416 x  16 ->  208 x 208 x  16 0.003 BF
   2 conv     32       3 x 3/ 1    208 x 208 x  16 ->  208 x 208 x  32 0.399 BF
   3 max                2x 2/ 2    208 x 208 x  32 ->  104 x 104 x  32 0.001 BF
   4 conv     64       3 x 3/ 1    104 x 104 x  32 ->  104 x 104 x  64 0.399 BF
   5 max                2x 2/ 2    104 x 104 x  64 ->   52 x  52 x  64 0.001 BF
   6 conv    128       3 x 3/ 1     52 x  52 x  64 ->   52 x  52 x 128 0.399 BF
   7 max                2x 2/ 2     52 x  52 x 128 ->   26 x  26 x 128 0.000 BF
   8 conv    256       3 x 3/ 1     26 x  26 x 128 ->   26 x  26 x 256 0.399 BF
   9 max                2x 2/ 2     26 x  26 x 256 ->   13 x  13 x 256 0.000 BF
  10 conv    512       3 x 3/ 1     13 x  13 x 256 ->   13 x  13 x 512 0.399 BF
  11 max                2x 2/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.000 BF
  12 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF
  13 conv    256       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 256 0.089 BF
  14 conv    512       3 x 3/ 1     13 x  13 x 256 ->   13 x  13 x 512 0.399 BF
  15 conv    255       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 255 0.044 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13 		                           ->   13 x  13 x 256 
  18 conv    128       1 x 1/ 1     13 x  13 x 256 ->   13 x  13 x 128 0.011 BF
  19 upsample                 2x    13 x  13 x 128 ->   26 x  26 x 128
  20 route  19 8 	                           ->   26 x  26 x 384 
  21 conv    256       3 x 3/ 1     26 x  26 x 384 ->   26 x  26 x 256 1.196 BF
  22 conv    255       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 255 0.088 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 5.571 
avg_outputs = 341534 
Loading weights from yolov3-tiny.weights...
 seen 64, trained: 32013 K-images (500 Kilo-batches_64) 
Done! Loaded 24 layers from weights-file 
 Detection layer: 16 - type = 28 
 Detection layer: 23 - type = 28 
data/dog.jpg: Predicted in 11103.124000 milli-seconds.
dog: 81%
bicycle: 38%
car: 71%
truck: 42%
truck: 62%
car: 40%
Not compiled with OpenCV, saving to predictions.png instead
ultra96@EE382N4:~/darknet$ xdg-
xdg-desktop-icon          xdg-mime                  xdg-user-dir
xdg-desktop-menu          xdg-open                  xdg-user-dirs-gtk-update
xdg-email                 xdg-screensaver           xdg-user-dirs-update
xdg-icon-resource         xdg-settings              
ultra96@EE382N4:~/darknet$ xdg-
xdg-desktop-icon          xdg-mime                  xdg-user-dir
xdg-desktop-menu          xdg-open                  xdg-user-dirs-gtk-update
xdg-email                 xdg-screensaver           xdg-user-dirs-update
xdg-icon-resource         xdg-settings              
ultra96@EE382N4:~/darknet$ xdg-open predictions.jpg 
Error: no "view" rule for type "image/jpeg" passed its test case
       (for more information, add "--debug=1" on the command line)
/usr/bin/xdg-open: 851: /usr/bin/xdg-open: www-browser: not found
/usr/bin/xdg-open: 851: /usr/bin/xdg-open: links2: not found
/usr/bin/xdg-open: 851: /usr/bin/xdg-open: elinks: not found
/usr/bin/xdg-open: 851: /usr/bin/xdg-open: links: not found
/usr/bin/xdg-open: 851: /usr/bin/xdg-open: lynx: not found
/usr/bin/xdg-open: 851: /usr/bin/xdg-open: w3m: not found
xdg-open: no method available for opening 'predictions.jpg'
ultra96@EE382N4:~/darknet$ vim Makefile 
[1;24r[27m[24m[0m[H[J[24;1H"Makefile" 214L, 6160C[2;1Hâ–½[6n[2;1H  [1;1H[1;1H[4mGPU[24m=0
[4mCUDNN[24m=0
[4mCUDNN_HALF[24m=0
[4mOPENCV[24m=0
[4mAVX[24m=0
[4mOPENMP[24m=0
[4mLIBSO[24m=0
[4mZED_CAMERA[24m=0
[4mZED_CAMERA_v2_8[24m=0

[1m# set GPU=1 and CUDNN=1 to speedup on GPU
# set CUDNN_HALF=1 to further speedup 3 x times (Mixed-precision on Tensor Coress[13;1H) GPU: Volta, Xavier, Turing and higher
# set AVX=1 and OPENMP=1 to speedup on CPU (if error occurs then set AVX=0)
# set ZED_CAMERA=1 to enable ZED SDK 3.0 and above
# set ZED_CAMERA_v2_8=1 to enable ZED SDK 2.X[0m

[4mUSE_CPP[24m=0
[4mUSE_PROFILING[24m=0
[4mDEBUG[24m=0

[1m# For cross compiling set this variable[0m
[4mUSE_CROSS[24m=0[24;63H1,1[11CTop[1;1H[24;53Hj[1;1H[24;53H [2;1H[24;63H2[2;1H[24;53Hj[2;1H[24;53H [3;1H[24;63H3[3;1H[24;53Hj[3;1H[24;53H [4;1H[24;63H4[4;1H[24;53Hj[4;1H[24;53H [5;1H[24;63H5[5;1H[24;53Hj[5;1H[24;53H [6;1H[24;63H6[6;1H[24;53Hj[6;1H[24;53H [7;1H[24;63H7[7;1H[24;53Hj[7;1H[24;53H [8;1H[24;63H8[8;1H[24;53Hj[8;1H[24;53H [9;1H[24;63H9[9;1H[24;53Hj[9;1H[24;53H [10;1H[24;63H10,0-1[10;1H[24;53Hj[10;1H[24;53H [11;1H[24;64H1,1  [11;1H[24;53Hj[11;1H[24;53H [12;1H[24;64H2[12;1H[24;53Hj[12;1H[24;53H [14;1H[24;64H3[14;1H[24;53Hj[14;1H[24;53H [15;1H[24;64H4[15;1H[24;53Hj[15;1H[24;53H [16;1H[24;64H5[16;1H[24;53Hj[16;1H[24;53H [17;1H[24;64H6,0-1[17;1H[24;53Hj[17;1H[24;53H [18;1H[24;64H7,1  [18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;1H[K[24;63H18,1[11C0%[18;1H[24;53H$[18;1H[24;53H [18;15H[24;67H5[18;15H[24;53Ha[18;15H[24;53H [18;16H[24;1H[1m-- INSERT --[0m[24;63H[K[24;63H18,16[10C0%[18;16H[18;15H[K[24;67H5[18;15H1[24;67H6[18;16H[24;1H[K[18;15H[24;53H^[[18;15H[24;53H  [18;16H[24;63H18,15[10C0%[18;15H[24;53Hk[18;15H[24;53H [17;9H[24;64H7,9 [17;9H[24;53Hj[17;9H[24;53H [18;15H[24;64H8,15[18;15H[24;53H:[18;15H[24;53H[K[24;1H:w"Makefile" 214L, 6160C written[18;15H[24;63H18,15[10C0%[24;63H[K[24;63H18,15[10C0%[18;15H[24;53H:[18;15H[24;1H[K[24;1H:q[24;1H[K[24;1Hultra96@EE382N4:~/darknet$ make clean
rm -rf ./obj/image_opencv.o ./obj/http_stream.o ./obj/gemm.o ./obj/utils.o ./obj/dark_cuda.o ./obj/convolutional_layer.o ./obj/list.o ./obj/image.o ./obj/activations.o ./obj/im2col.o ./obj/col2im.o ./obj/blas.o ./obj/crop_layer.o ./obj/dropout_layer.o ./obj/maxpool_layer.o ./obj/softmax_layer.o ./obj/data.o ./obj/matrix.o ./obj/network.o ./obj/connected_layer.o ./obj/cost_layer.o ./obj/parser.o ./obj/option_list.o ./obj/darknet.o ./obj/detection_layer.o ./obj/captcha.o ./obj/route_layer.o ./obj/writing.o ./obj/box.o ./obj/nightmare.o ./obj/normalization_layer.o ./obj/avgpool_layer.o ./obj/coco.o ./obj/dice.o ./obj/yolo.o ./obj/detector.o ./obj/layer.o ./obj/compare.o ./obj/classifier.o ./obj/local_layer.o ./obj/swag.o ./obj/shortcut_layer.o ./obj/representation_layer.o ./obj/activation_layer.o ./obj/rnn_layer.o ./obj/gru_layer.o ./obj/rnn.o ./obj/rnn_vid.o ./obj/crnn_layer.o ./obj/demo.o ./obj/tag.o ./obj/cifar.o ./obj/go.o ./obj/batchnorm_layer.o ./obj/art.o ./obj/region_layer.o ./obj/reorg_layer.o ./obj/reorg_old_layer.o ./obj/super.o ./obj/voxel.o ./obj/tree.o ./obj/yolo_layer.o ./obj/gaussian_yolo_layer.o ./obj/upsample_layer.o ./obj/lstm_layer.o ./obj/conv_lstm_layer.o ./obj/scale_channels_layer.o ./obj/sam_layer.o darknet  
ultra96@EE382N4:~/darknet$ make
chmod +x *.sh
g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/image_opencv.cpp -o obj/image_opencv.o
g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/http_stream.cpp -o obj/http_stream.o
[01m[K./src/http_stream.cpp:[m[K In member function â€˜[01m[Kbool JSON_sender::write(const char*)[m[Kâ€™:
[01m[K./src/http_stream.cpp:253:21:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kn[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                 int [01;35m[Kn[m[K = _write(client, outputbuf, outlen);
                     [01;35m[K^[m[K
[01m[K./src/http_stream.cpp:[m[K In function â€˜[01m[Kvoid set_track_id(detection*, int, float, float, float, int, int, int)[m[Kâ€™:
[01m[K./src/http_stream.cpp:867:27:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [[01;35m[K-Wsign-compare[m[K]
         for (int i = 0; [01;35m[Ki < v.size()[m[K; ++i) {
                         [01;35m[K~~^~~~~~~~~~[m[K
[01m[K./src/http_stream.cpp:875:33:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [[01;35m[K-Wsign-compare[m[K]
     for (int old_id = 0; [01;35m[Kold_id < old_dets.size()[m[K; ++old_id) {
                          [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K./src/http_stream.cpp:894:31:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [[01;35m[K-Wsign-compare[m[K]
     for (int index = 0; [01;35m[Kindex < new_dets_num*old_dets.size()[m[K; ++index) {
                         [01;35m[K~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K./src/http_stream.cpp:930:28:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [[01;35m[K-Wsign-compare[m[K]
     if ([01;35m[Kold_dets_dq.size() > deque_size[m[K) old_dets_dq.pop_front();
         [01;35m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/gemm.c -o obj/gemm.o
[01m[K./src/gemm.c:[m[K In function â€˜[01m[Kconvolution_2d[m[Kâ€™:
[01m[K./src/gemm.c:2044:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kout_w[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     const int [01;35m[Kout_w[m[K = (w + 2 * pad - ksize) / stride + 1;    // output_width=input_width for stride=1 and pad=1
               [01;35m[K^~~~~[m[K
[01m[K./src/gemm.c:2043:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kout_h[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     const int [01;35m[Kout_h[m[K = (h + 2 * pad - ksize) / stride + 1;    // output_height=input_height for stride=1 and pad=1
               [01;35m[K^~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/utils.c -o obj/utils.o
[01m[K./src/utils.c:[m[K In function â€˜[01m[Kcustom_hash[m[Kâ€™:
[01m[K./src/utils.c:1061:12:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around assignment used as truth value [[01;35m[K-Wparentheses[m[K]
     while ([01;35m[Kc[m[K = *str++)
            [01;35m[K^[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/dark_cuda.c -o obj/dark_cuda.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/convolutional_layer.c -o obj/convolutional_layer.o
[01m[K./src/convolutional_layer.c:[m[K In function â€˜[01m[Kresize_convolutional_layer[m[Kâ€™:
[01m[K./src/convolutional_layer.c:897:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kold_h[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     int [01;35m[Kold_h[m[K = l->h;
         [01;35m[K^~~~~[m[K
[01m[K./src/convolutional_layer.c:896:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kold_w[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     int [01;35m[Kold_w[m[K = l->w;
         [01;35m[K^~~~~[m[K
[01m[K./src/convolutional_layer.c:[m[K In function â€˜[01m[Kforward_convolutional_layer[m[Kâ€™:
[01m[K./src/convolutional_layer.c:1341:32:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kt_intput_size[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                         size_t [01;35m[Kt_intput_size[m[K = binary_transpose_align_input(k, n, state.workspace, &l.t_bit_input, ldb_align, l.bit_align);
                                [01;35m[K^~~~~~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/list.c -o obj/list.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/image.c -o obj/image.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/activations.c -o obj/activations.o
[01m[K./src/activations.c:[m[K In function â€˜[01m[Kactivate[m[Kâ€™:
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KRELU6[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
     [01;35m[Kswitch[m[K(a){
     [01;35m[K^~~~~~[m[K
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KSWISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KMISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KHARD_MISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KNORM_CHAN[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KNORM_CHAN_SOFTMAX[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:79:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KNORM_CHAN_SOFTMAX_MAXVAL[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:[m[K In function â€˜[01m[Kgradient[m[Kâ€™:
[01m[K./src/activations.c:310:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KSWISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
     [01;35m[Kswitch[m[K(a){
     [01;35m[K^~~~~~[m[K
[01m[K./src/activations.c:310:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KMISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
[01m[K./src/activations.c:310:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KHARD_MISH[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/im2col.c -o obj/im2col.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/col2im.c -o obj/col2im.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/blas.c -o obj/blas.o
[01m[K./src/blas.c:[m[K In function â€˜[01m[Kbackward_shortcut_multilayer_cpu[m[Kâ€™:
[01m[K./src/blas.c:207:21:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kout_index[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                 int [01;35m[Kout_index[m[K = id;
                     [01;35m[K^~~~~~~~~[m[K
[01m[K./src/blas.c:[m[K In function â€˜[01m[Kfind_sim[m[Kâ€™:
[01m[K./src/blas.c:597:59:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
         printf(" Error: find_sim(): sim isn't found: i = [01;35m[K%d[m[K, j = %d, z = %d \n", i, j, z);
                                                          [01;35m[K~^[m[K
                                                          [32m[K%ld[m[K
[01m[K./src/blas.c:597:67:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 3 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
         printf(" Error: find_sim(): sim isn't found: i = %d, j = [01;35m[K%d[m[K, z = %d \n", i, j, z);
                                                                  [01;35m[K~^[m[K
                                                                  [32m[K%ld[m[K
[01m[K./src/blas.c:597:75:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 4 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
   printf(" Error: find_sim(): sim isn't found: i = %d, j = %d, z = [01;35m[K%d[m[K \n", i, j, z);
                                                                    [01;35m[K~^[m[K
                                                                          [32m[K%ld[m[K
[01m[K./src/blas.c:[m[K In function â€˜[01m[Kfind_P_constrastive[m[Kâ€™:
[01m[K./src/blas.c:611:68:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
         printf(" Error: find_P_constrastive(): P isn't found: i = [01;35m[K%d[m[K, j = %d, z = %d \n", i, j, z);
                                                                   [01;35m[K~^[m[K
                                                                   [32m[K%ld[m[K
[01m[K./src/blas.c:611:76:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 3 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  printf(" Error: find_P_constrastive(): P isn't found: i = %d, j = [01;35m[K%d[m[K, z = %d \n", i, j, z);
                                                                    [01;35m[K~^[m[K
                                                                           [32m[K%ld[m[K
[01m[K./src/blas.c:611:84:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 4 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 " Error: find_P_constrastive(): P isn't found: i = %d, j = %d, z = [01;35m[K%d[m[K \n", i, j, z);
                                                                    [01;35m[K~^[m[K
                                                                                   [32m[K%ld[m[K
[01m[K./src/blas.c:[m[K In function â€˜[01m[KP_constrastive_f[m[Kâ€™:
[01m[K./src/blas.c:651:79:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 3 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 rintf(stderr, " Error: in P_constrastive must be i != l, while i = [01;35m[K%d[m[K, l = %d \n", i, l);
                                                                    [01;35m[K~^[m[K
                                                                              [32m[K%ld[m[K
[01m[K./src/blas.c:651:87:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 4 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 derr, " Error: in P_constrastive must be i != l, while i = %d, l = [01;35m[K%d[m[K \n", i, l);
                                                                    [01;35m[K~^[m[K
                                                                                      [32m[K%ld[m[K
[01m[K./src/blas.c:[m[K In function â€˜[01m[KP_constrastive[m[Kâ€™:
[01m[K./src/blas.c:785:79:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 3 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 rintf(stderr, " Error: in P_constrastive must be i != l, while i = [01;35m[K%d[m[K, l = %d \n", i, l);
                                                                    [01;35m[K~^[m[K
                                                                              [32m[K%ld[m[K
[01m[K./src/blas.c:785:87:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 4 has type â€˜[01m[Ksize_t {aka long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
 derr, " Error: in P_constrastive must be i != l, while i = %d, l = [01;35m[K%d[m[K \n", i, l);
                                                                    [01;35m[K~^[m[K
                                                                                      [32m[K%ld[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/crop_layer.c -o obj/crop_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/dropout_layer.c -o obj/dropout_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/maxpool_layer.c -o obj/maxpool_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/softmax_layer.c -o obj/softmax_layer.o
[01m[K./src/softmax_layer.c:[m[K In function â€˜[01m[Kmake_contrastive_layer[m[Kâ€™:
[01m[K./src/softmax_layer.c:203:101:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 9 has type â€˜[01m[Ksize_t {aka const long unsigned int}[m[Kâ€™ [[01;35m[K-Wformat=[m[K]
  %4d x%4d x%4d x emb_size %4d x batch: %4d  classes = %4d, step = [01;35m[K%4d[m[K \n", w, h, l.n, l.embedding_size, batch, l.classes, step);
                                                                   [01;35m[K~~^[m[K
                                                                                                   [32m[K%4ld[m[K
[01m[K./src/softmax_layer.c:[m[K In function â€˜[01m[Kforward_contrastive_layer[m[Kâ€™:
[01m[K./src/softmax_layer.c:244:27:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kmax_truth[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
                     float [01;35m[Kmax_truth[m[K = 0;
                           [01;35m[K^~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/data.c -o obj/data.o
[01m[K./src/data.c:[m[K In function â€˜[01m[Kload_data_detection[m[Kâ€™:
[01m[K./src/data.c:1409:43:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kr_scale[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
     float r1 = 0, r2 = 0, r3 = 0, r4 = 0, [01;35m[Kr_scale[m[K;
                                           [01;35m[K^~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/matrix.c -o obj/matrix.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/network.c -o obj/network.o
[01m[K./src/network.c:[m[K In function â€˜[01m[Ktrain_network_waitkey[m[Kâ€™:
[01m[K./src/network.c:435:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kema_period[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         int [01;35m[Kema_period[m[K = (net.max_batches - ema_start_point - 1000) * (1.0 - net.ema_alpha);
             [01;35m[K^~~~~~~~~~[m[K
At top level:
[01m[K./src/network.c:1269:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Krelu[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 static float [01;35m[Krelu[m[K(float src) {
              [01;35m[K^~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/connected_layer.c -o obj/connected_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/cost_layer.c -o obj/cost_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/parser.c -o obj/parser.o
[01m[K./src/parser.c:[m[K In function â€˜[01m[Ksave_implicit_weights[m[Kâ€™:
[01m[K./src/parser.c:1909:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ki[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     int [01;35m[Ki[m[K;
         [01;35m[K^[m[K
[01m[K./src/parser.c:[m[K In function â€˜[01m[Kget_classes_multipliers[m[Kâ€™:
[01m[K./src/parser.c:438:29:[m[K [01;35m[Kwarning: [m[Kargument 1 range [18446744071562067968, 18446744073709551615] exceeds maximum object size 9223372036854775807 [[01;35m[K-Walloc-size-larger-than=[m[K]
         [01;35m[Kclasses_multipliers = (float *)calloc(classes_counters, sizeof(float))[m[K;
         [01;35m[K~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K./src/parser.c:3:0[m[K:
[01m[K/usr/include/stdlib.h:541:14:[m[K [01;36m[Knote: [m[Kin a call to allocation function â€˜[01m[Kcalloc[m[Kâ€™ declared here
 extern void *[01;36m[Kcalloc[m[K (size_t __nmemb, size_t __size)
              [01;36m[K^~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/option_list.c -o obj/option_list.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/darknet.c -o obj/darknet.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/detection_layer.c -o obj/detection_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/captcha.c -o obj/captcha.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/route_layer.c -o obj/route_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/writing.c -o obj/writing.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/box.c -o obj/box.o
[01m[K./src/box.c:[m[K In function â€˜[01m[Kbox_iou_kind[m[Kâ€™:
[01m[K./src/box.c:154:5:[m[K [01;35m[Kwarning: [m[Kenumeration value â€˜[01m[KMSE[m[Kâ€™ not handled in switch [[01;35m[K-Wswitch[m[K]
     [01;35m[Kswitch[m[K(iou_kind) {
     [01;35m[K^~~~~~[m[K
[01m[K./src/box.c:[m[K In function â€˜[01m[Kdiounms_sort[m[Kâ€™:
[01m[K./src/box.c:898:27:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kbeta_prob[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                     float [01;35m[Kbeta_prob[m[K = pow(dets[j].prob[k], 2) / sum_prob;
                           [01;35m[K^~~~~~~~~[m[K
[01m[K./src/box.c:897:27:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kalpha_prob[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
                     float [01;35m[Kalpha_prob[m[K = pow(dets[i].prob[k], 2) / sum_prob;
                           [01;35m[K^~~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/nightmare.c -o obj/nightmare.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/normalization_layer.c -o obj/normalization_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/avgpool_layer.c -o obj/avgpool_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/coco.c -o obj/coco.o
[01m[K./src/coco.c:[m[K In function â€˜[01m[Kvalidate_coco_recall[m[Kâ€™:
[01m[K./src/coco.c:248:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kbase[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     char *[01;35m[Kbase[m[K = "results/comp4_det_test_";
           [01;35m[K^~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/dice.c -o obj/dice.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/yolo.c -o obj/yolo.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/detector.c -o obj/detector.o
[01m[K./src/detector.c:[m[K In function â€˜[01m[Ktrain_detector[m[Kâ€™:
[01m[K./src/detector.c:386:72:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around â€˜[01m[K&&[m[Kâ€™ within â€˜[01m[K||[m[Kâ€™ [[01;35m[K-Wparentheses[m[K]
          [01;35m[K(iteration >= (iter_save + 1000) || iteration % 1000 == 0) && net.max_batches < 10000[m[K)
          [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K./src/detector.c:319:13:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kdraw_precision[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
         int [01;35m[Kdraw_precision[m[K = 0;
             [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K./src/detector.c:67:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_contrastive_acc[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_contrastive_acc[m[K = 0;
           [01;35m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K./src/detector.c:[m[K In function â€˜[01m[Kprint_cocos[m[Kâ€™:
[01m[K./src/detector.c:486:29:[m[K [01;35m[Kwarning: [m[Kformat not a string literal and no format arguments [[01;35m[K-Wformat-security[m[K]
                 fprintf(fp, [01;35m[Kbuff[m[K);
                             [01;35m[K^~~~[m[K
[01m[K./src/detector.c:[m[K In function â€˜[01m[Keliminate_bdd[m[Kâ€™:
[01m[K./src/detector.c:579:21:[m[K [01;35m[Kwarning: [m[Kstatement with no effect [[01;35m[K-Wunused-value[m[K]
                     [01;35m[Kfor[m[K (k; buf[k + n] != '\0'; k++)
                     [01;35m[K^~~[m[K
[01m[K./src/detector.c:[m[K In function â€˜[01m[Kvalidate_detector[m[Kâ€™:
[01m[K./src/detector.c:700:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kmkd2[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         int [01;35m[Kmkd2[m[K = make_directory(buff2, 0777);
             [01;35m[K^~~~[m[K
[01m[K./src/detector.c:698:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kmkd[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         int [01;35m[Kmkd[m[K = make_directory(buff, 0777);
             [01;35m[K^~~[m[K
[01m[K./src/detector.c:[m[K In function â€˜[01m[Kvalidate_detector_map[m[Kâ€™:
[01m[K./src/detector.c:1315:24:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kcur_prob[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
                 double [01;35m[Kcur_prob[m[K = 0;
                        [01;35m[K^~~~~~~~[m[K
[01m[K./src/detector.c:1336:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kclass_recall[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         float [01;35m[Kclass_recall[m[K = (float)tp_for_thresh_per_class[i] / ((float)tp_for_thresh_per_class[i] + (float)(truth_classes_count[i] - tp_for_thresh_per_class[i]));
               [01;35m[K^~~~~~~~~~~~[m[K
[01m[K./src/detector.c:1335:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kclass_precision[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         float [01;35m[Kclass_precision[m[K = (float)tp_for_thresh_per_class[i] / ((float)tp_for_thresh_per_class[i] + (float)fp_for_thresh_per_class[i]);
               [01;35m[K^~~~~~~~~~~~~~~[m[K
At top level:
[01m[K./src/detector.c:452:12:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kget_coco_image_id[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
 static int [01;35m[Kget_coco_image_id[m[K(char *filename)
            [01;35m[K^~~~~~~~~~~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/layer.c -o obj/layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/compare.c -o obj/compare.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/classifier.c -o obj/classifier.o
[01m[K./src/classifier.c:[m[K In function â€˜[01m[Ktrain_classifier[m[Kâ€™:
[01m[K./src/classifier.c:190:13:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kdraw_precision[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
         int [01;35m[Kdraw_precision[m[K = 0;
             [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K./src/classifier.c:146:9:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kcount[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     int [01;35m[Kcount[m[K = 0;
         [01;35m[K^~~~~[m[K
[01m[K./src/classifier.c:35:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_contrastive_acc[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_contrastive_acc[m[K = 0;
           [01;35m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K./src/classifier.c:[m[K In function â€˜[01m[Kpredict_classifier[m[Kâ€™:
[01m[K./src/classifier.c:855:13:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktime[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     clock_t [01;35m[Ktime[m[K;
             [01;35m[K^~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/local_layer.c -o obj/local_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/swag.c -o obj/swag.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/shortcut_layer.c -o obj/shortcut_layer.o
[01m[K./src/shortcut_layer.c:[m[K In function â€˜[01m[Kmake_shortcut_layer[m[Kâ€™:
[01m[K./src/shortcut_layer.c:55:15:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kscale[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
         float [01;35m[Kscale[m[K = sqrt(2. / l.nweights);
               [01;35m[K^~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/representation_layer.c -o obj/representation_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/activation_layer.c -o obj/activation_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/rnn_layer.c -o obj/rnn_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/gru_layer.c -o obj/gru_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/rnn.c -o obj/rnn.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/rnn_vid.c -o obj/rnn_vid.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/crnn_layer.c -o obj/crnn_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/demo.c -o obj/demo.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/tag.c -o obj/tag.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/cifar.c -o obj/cifar.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/go.c -o obj/go.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/batchnorm_layer.c -o obj/batchnorm_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/art.c -o obj/art.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/region_layer.c -o obj/region_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/reorg_layer.c -o obj/reorg_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/reorg_old_layer.c -o obj/reorg_old_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/super.c -o obj/super.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/voxel.c -o obj/voxel.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/tree.c -o obj/tree.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/yolo_layer.c -o obj/yolo_layer.o
[01m[K./src/yolo_layer.c:[m[K In function â€˜[01m[Kprocess_batch[m[Kâ€™:
[01m[K./src/yolo_layer.c:426:25:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kbest_match_t[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
                     int [01;35m[Kbest_match_t[m[K = 0;
                         [01;35m[K^~~~~~~~~~~~[m[K
[01m[K./src/yolo_layer.c:[m[K In function â€˜[01m[Kforward_yolo_layer[m[Kâ€™:
[01m[K./src/yolo_layer.c:707:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_anyobj[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_anyobj[m[K = 0;
           [01;35m[K^~~~~~~~~~[m[K
[01m[K./src/yolo_layer.c:706:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_obj[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_obj[m[K = 0;
           [01;35m[K^~~~~~~[m[K
[01m[K./src/yolo_layer.c:705:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kavg_cat[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Kavg_cat[m[K = 0;
           [01;35m[K^~~~~~~[m[K
[01m[K./src/yolo_layer.c:704:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Krecall75[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Krecall75[m[K = 0;
           [01;35m[K^~~~~~~~[m[K
[01m[K./src/yolo_layer.c:703:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Krecall[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Krecall[m[K = 0;
           [01;35m[K^~~~~~[m[K
[01m[K./src/yolo_layer.c:702:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_ciou_loss[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_ciou_loss[m[K = 0;
           [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K./src/yolo_layer.c:701:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_diou_loss[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_diou_loss[m[K = 0;
           [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K./src/yolo_layer.c:698:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_ciou[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_ciou[m[K = 0;
           [01;35m[K^~~~~~~~[m[K
[01m[K./src/yolo_layer.c:697:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_diou[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_diou[m[K = 0;
           [01;35m[K^~~~~~~~[m[K
[01m[K./src/yolo_layer.c:696:11:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktot_giou[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
     float [01;35m[Ktot_giou[m[K = 0;
           [01;35m[K^~~~~~~~[m[K
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/gaussian_yolo_layer.c -o obj/gaussian_yolo_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/upsample_layer.c -o obj/upsample_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/lstm_layer.c -o obj/lstm_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/conv_lstm_layer.c -o obj/conv_lstm_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/scale_channels_layer.c -o obj/scale_channels_layer.o
gcc -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast -c ./src/sam_layer.c -o obj/sam_layer.o
g++ -std=c++11 -std=c++11 -Iinclude/ -I3rdparty/stb/include -Wall -Wfatal-errors -Wno-unused-result -Wno-unknown-pragmas -fPIC -pg -Ofast obj/image_opencv.o obj/http_stream.o obj/gemm.o obj/utils.o obj/dark_cuda.o obj/convolutional_layer.o obj/list.o obj/image.o obj/activations.o obj/im2col.o obj/col2im.o obj/blas.o obj/crop_layer.o obj/dropout_layer.o obj/maxpool_layer.o obj/softmax_layer.o obj/data.o obj/matrix.o obj/network.o obj/connected_layer.o obj/cost_layer.o obj/parser.o obj/option_list.o obj/darknet.o obj/detection_layer.o obj/captcha.o obj/route_layer.o obj/writing.o obj/box.o obj/nightmare.o obj/normalization_layer.o obj/avgpool_layer.o obj/coco.o obj/dice.o obj/yolo.o obj/detector.o obj/layer.o obj/compare.o obj/classifier.o obj/local_layer.o obj/swag.o obj/shortcut_layer.o obj/representation_layer.o obj/activation_layer.o obj/rnn_layer.o obj/gru_layer.o obj/rnn.o obj/rnn_vid.o obj/crnn_layer.o obj/demo.o obj/tag.o obj/cifar.o obj/go.o obj/batchnorm_layer.o obj/art.o obj/region_layer.o obj/reorg_layer.o obj/reorg_old_layer.o obj/super.o obj/voxel.o obj/tree.o obj/yolo_layer.o obj/gaussian_yolo_layer.o obj/upsample_layer.o obj/lstm_layer.o obj/conv_lstm_layer.o obj/scale_channels_layer.o obj/sam_layer.o -o darknet -lm -pthread
ultra96@EE382N4:~/darknet$ ./darknet detector test cfg/coco.data cfg/yolov3-tiny..cfg yolov3-tiny.weights data/dog.jpg
 GPU isn't used 
 OpenCV isn't used - data augmentation will be slow 
mini_batch = 1, batch = 1, time_steps = 1, train = 0 
   layer   filters  size/strd(dil)      input                output
   0 conv     16       3 x 3/ 1    416 x 416 x   3 ->  416 x 416 x  16 0.150 BF
   1 max                2x 2/ 2    416 x 416 x  16 ->  208 x 208 x  16 0.003 BF
   2 conv     32       3 x 3/ 1    208 x 208 x  16 ->  208 x 208 x  32 0.399 BF
   3 max                2x 2/ 2    208 x 208 x  32 ->  104 x 104 x  32 0.001 BF
   4 conv     64       3 x 3/ 1    104 x 104 x  32 ->  104 x 104 x  64 0.399 BF
   5 max                2x 2/ 2    104 x 104 x  64 ->   52 x  52 x  64 0.001 BF
   6 conv    128       3 x 3/ 1     52 x  52 x  64 ->   52 x  52 x 128 0.399 BF
   7 max                2x 2/ 2     52 x  52 x 128 ->   26 x  26 x 128 0.000 BF
   8 conv    256       3 x 3/ 1     26 x  26 x 128 ->   26 x  26 x 256 0.399 BF
   9 max                2x 2/ 2     26 x  26 x 256 ->   13 x  13 x 256 0.000 BF
  10 conv    512       3 x 3/ 1     13 x  13 x 256 ->   13 x  13 x 512 0.399 BF
  11 max                2x 2/ 1     13 x  13 x 512 ->   13 x  13 x 512 0.000 BF
  12 conv   1024       3 x 3/ 1     13 x  13 x 512 ->   13 x  13 x1024 1.595 BF
  13 conv    256       1 x 1/ 1     13 x  13 x1024 ->   13 x  13 x 256 0.089 BF
  14 conv    512       3 x 3/ 1     13 x  13 x 256 ->   13 x  13 x 512 0.399 BF
  15 conv    255       1 x 1/ 1     13 x  13 x 512 ->   13 x  13 x 255 0.044 BF
  16 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
  17 route  13 		                           ->   13 x  13 x 256 
  18 conv    128       1 x 1/ 1     13 x  13 x 256 ->   13 x  13 x 128 0.011 BF
  19 upsample                 2x    13 x  13 x 128 ->   26 x  26 x 128
  20 route  19 8 	                           ->   26 x  26 x 384 
  21 conv    256       3 x 3/ 1     26 x  26 x 384 ->   26 x  26 x 256 1.196 BF
  22 conv    255       1 x 1/ 1     26 x  26 x 256 ->   26 x  26 x 255 0.088 BF
  23 yolo
[yolo] params: iou loss: mse (2), iou_norm: 0.75, obj_norm: 1.00, cls_norm: 1.00, delta_norm: 1.00, scale_x_y: 1.00
Total BFLOPS 5.571 
avg_outputs = 341534 
Loading weights from yolov3-tiny.weights...
 seen 64, trained: 32013 K-images (500 Kilo-batches_64) 
Done! Loaded 24 layers from weights-file 
 Detection layer: 16 - type = 28 
 Detection layer: 23 - type = 28 
data/dog.jpg: Predicted in 10418.851000 milli-seconds.
dog: 81%
bicycle: 38%
car: 71%
truck: 42%
truck: 62%
car: 40%
Not compiled with OpenCV, saving to predictions.png instead
ultra96@EE382N4:~/darknet$ ls
3rdparty		darknet_video.py       obj
backup			data		       predictions.jpg
build			gmon.out	       README.md
build.ps1		image_yolov3.sh        results
cfg			image_yolov4.sh        scripts
cmake			include		       src
CMakeLists.txt		json_mjpeg_streams.sh  trash
darknet			LICENSE		       vcpkg.json
DarknetConfig.cmake.in	Makefile	       video_yolov3.sh
darknet_images.py	net_cam_v3.sh	       video_yolov4.sh
darknet.py		net_cam_v4.sh	       yolov3-tiny.weights
ultra96@EE382N4:~/darknet$ gprof darknet gmon.out > darknet.perf
ultra96@EE382N4:~/darknet$ vim da[K[K
3rdparty/               darknet_video.py        net_cam_v4.sh
backup/                 data/                   obj/
build/                  .git/                   README.md
build.ps1               .github/                results/
cfg/                    .gitignore              scripts/
.circleci/              gmon.out                src/
cmake/                  image_yolov3.sh         trash/
CMakeLists.txt          image_yolov4.sh         .travis.yml
darknet                 include/                vcpkg.json
DarknetConfig.cmake.in  json_mjpeg_streams.sh   video_yolov3.sh
darknet_images.py       LICENSE                 video_yolov4.sh
darknet.perf            Makefile                yolov3-tiny.weights
darknet.py              net_cam_v3.sh           
ultra96@EE382N4:~/darknet$ vim da
darknet            darknet.perf       darknet_video.py   
darknet_images.py  darknet.py         data/              
ultra96@EE382N4:~/darknet$ vim darknet
darknet            darknet.perf       darknet_video.py   
darknet_images.py  darknet.py         
ultra96@EE382N4:~/darknet$ vim darknet.perf 
[1;24r[27m[24m[0m[H[J[24;1H"darknet.perf" 1179L, 75397C[2;1Hâ–½[6n[2;1H  [1;1H[1;1H[1mFlat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    [0m
[4m 90.99     10.10    10.10     3694     0.00     0.00  [24mgemm_nn
[4m  1.49     10.27     0.17  8845488     0.00     0.00  [24mrand_uniform
[4m  1.17     10.40     0.13        1     0.13     0.13  [24mfuse_conv_batchnorm
[4m  1.17     10.53     0.13       13     0.01     0.02  [24mmake_convolutional_layer
[4m  0.99     10.64     0.11     1102     0.00     0.00  [24mstbi__zbuild_huffman
[4m  0.99     10.75     0.11        9     0.01     0.01  [24mim2col_cpu_ext
[4m  0.90     10.85     0.10        6     0.02     0.02  [24mforward_maxpool_layer_avx
[4m  0.63     10.92     0.07      761     0.00     0.00  [24mload_image_stb
[4m  0.36     10.96     0.04        1     0.04     0.04  [24mresize_image
[4m  0.27     10.99     0.03       13     0.00     0.00  [24madd_bias
[4m  0.18     11.01     0.02       13     0.00     0.00  [24mactivate_array_cpu_custom
[4m  0.18     11.03     0.02        2     0.01     0.01  [24msave_image_options
[4m  0.09     11.04     0.01    14585     0.00     0.00  [24mstbi__decode_jpeg_header
[4m  0.09     11.05     0.01    13824     0.00     0.00  [24mstbi__idct_block
[4m  0.09     11.06     0.01      760     0.00     0.00  [24mstbi__parse_zlib
[4m  0.09     11.07     0.01      576     0.00     0.00  [24mstbi__YCbCr_to_RGB_row
[4m  0.09     11.08     0.01       12     0.00     0.00  [24mactivate_array
[4m  0.09     11.09     0.01        4     0.00     0.00  [24mdraw_weighted_label[24;63H1,1[11CTop[1;1H[24;53Hj[1;1H[24;53H [2;1H[24;63H2,0-1[2;1H[24;53Hj[2;1H[24;53H [3;1H[24;63H3,1  [3;1H[24;53Hj[3;1H[24;53H [4;1H[24;63H4[4;1H[24;53Hj[4;1H[24;53H [5;1H[24;63H5[5;1H[24;53Hj[5;1H[24;53H [6;1H[24;63H6[6;1H[24;53Hl[6;1H[24;53H [6;2H[24;65H2[6;2H[24;53Hl[6;2H[24;53H [6;3H[24;65H3[6;3H[24;53Hl[6;3H[24;53H [6;4H[24;65H4[6;4H[24;53Hl[6;4H[24;53H [6;5H[24;65H5[6;5H[24;53Hl[6;5H[24;53H [6;6H[24;65H6[6;6H[24;53Hl[6;6H[24;53H [6;7H[24;65H7[6;7H[24;53Hl[6;7H[24;53H [6;8H[24;65H8[6;8H[24;53Hl[6;8H[24;53H [6;9H[24;65H9[6;9H[24;53Hl[6;9H[24;53H [6;10H[24;65H10[6;10H[24;53Hl[6;10H[24;53H [6;11H[24;66H1[6;11H[24;53Hl[6;11H[24;53H [6;12H[24;66H2[6;12H[24;53Hl[6;12H[24;53H [6;13H[24;66H3[6;13H[24;53Hl[6;13H[24;53H [6;14H[24;66H4[6;14H[24;53Hl[6;14H[24;53H [6;15H[24;66H5[6;15H[24;53Hl[6;15H[24;53H [6;16H[24;66H6[6;16H[24;53Hl[6;16H[24;53H [6;17H[24;66H7[6;17H[24;53Hl[6;17H[24;53H [6;18H[24;66H8[6;18H[24;53Hl[6;18H[24;53H [6;19H[24;66H9[6;19H[24;53Hl[6;19H[24;53H [6;20H[24;65H20[6;20H[24;53Hl[6;20H[24;53H [6;21H[24;66H1[6;21H[24;53Hl[6;21H[24;53H [6;22H[24;66H2[6;22H[24;53Hl[6;22H[24;53H [6;23H[24;66H3[6;23H[24;53Hl[6;23H[24;53H [6;24H[24;66H4[6;24H[24;53Hl[6;24H[24;53H [6;25H[24;66H5[6;25H[24;53Hl[6;25H[24;53H [6;26H[24;66H6[6;26H[24;53Hl[6;26H[24;53H [6;27H[24;66H7[6;27H[24;53Hl[6;27H[24;53H [6;28H[24;66H8[6;28H[24;53Hl[6;28H[24;53H [6;29H[24;66H9[6;29H[24;53Hl[6;29H[24;53H [6;30H[24;65H30[6;30H[24;53Hl[6;30H[24;53H [6;31H[24;66H1[6;31H[24;53Hl[6;31H[24;53H [6;32H[24;66H2[6;32H[24;53Hl[6;32H[24;53H [6;33H[24;66H3[6;33H[24;53Hl[6;33H[24;53H [6;34H[24;66H4[6;34H[24;53Hl[6;34H[24;53H [6;35H[24;66H5[6;35H[24;53Hl[6;35H[24;53H [6;36H[24;66H6[6;36H[24;53Hl[6;36H[24;53H [6;37H[24;66H7[6;37H[24;53Hl[6;37H[24;53H [6;38H[24;66H8[6;38H[24;53Hl[6;38H[24;53H [6;39H[24;66H9[6;39H[24;53Hl[6;39H[24;53H [6;40H[24;65H40[6;40H[24;53Hl[6;40H[24;53H [6;41H[24;66H1[6;41H[24;53Hl[6;41H[24;53H [6;42H[24;66H2[6;42H[24;53Hl[6;42H[24;53H [6;43H[24;66H3[6;43H[24;53Hl[6;43H[24;53H [6;44H[24;66H4[6;44H[24;53Hl[6;44H[24;53H [6;45H[24;66H5[6;45H[24;53Hl[6;45H[24;53H [6;46H[24;66H6[6;46H[24;53Hl[6;46H[24;53H [6;47H[24;66H7[6;47H[24;53Hl[6;47H[24;53H [6;48H[24;66H8[6;48H[24;53Hl[6;48H[24;53H [6;49H[24;66H9[6;49H[24;53Hl[6;49H[24;53H [6;50H[24;65H50[6;50H[24;53Hl[6;50H[24;53H [6;51H[24;66H1[6;51H[24;53Hl[6;51H[24;53H [6;52H[24;66H2[6;52H[24;53Hl[6;52H[24;53H [6;53H[24;66H3[6;53H[24;53Hh[6;53H[24;53H [6;52H[24;66H2[6;52H[24;53Hj[6;52H[24;53H [7;52H[24;63H7[7;52H[24;53Hj[7;52H[24;53H [8;52H[24;63H8[8;52H[24;53Hj[8;52H[24;53H [9;52H[24;63H9[9;52H[24;53Hj[9;52H[24;53H [10;52H[24;63H10,52[10;52H[24;53Hj[10;52H[24;53H [11;52H[24;64H1[11;52H[24;53Hj[11;52H[24;53H [12;52H[24;64H2[12;52H[24;53Hj[12;52H[24;53H [13;52H[24;64H3[13;52H[24;53Hj[13;52H[24;53H [14;52H[24;64H4[14;52H[24;53Hj[14;52H[24;53H [15;52H[24;64H5[15;52H[24;53Hj[15;52H[24;53H [16;52H[24;64H6[16;52H[24;53Hj[16;52H[24;53H [17;52H[24;64H7[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H8[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.09     11.10     0.01        1     0.01     0.03  [24mstbi__decode_jpeg_image[24;1H[K[24;63H19,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.05     11.10     0.01                             [24mint_index[24;63H[K[24;63H20,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00   232134     0.00     0.00  [24mstbi__stdio_write[24;63H[K[24;63H21,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00    74570     0.00     0.00  [24mstbiw__jpg_writeBits[24;63H[K[24;63H22,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00    23560     0.00     0.00  [24mstbi__get32be[24;63H[K[24;63H23,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00    13824     0.00     0.00  [24mstbi__jpeg_huff_decode[24;63H[K[24;63H24,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00     9955     0.00     0.00  [24mstbi__get8[24;63H[K[24;63H25,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00     4397     0.00     0.00  [24mstbi__stdio_read[24;63H[K[24;63H26,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00     2641     0.00     0.00  [24mstbi__grow_buffer_unsafe[24;63H[K[24;63H27,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00     1152     0.00     0.00  [24mstbi__resample_row_v_2[24;63H[K[24;63H28,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      965     0.00     0.00  [24mxcalloc_location[24;63H[K[24;63H29,52[10C0%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      825     0.00     0.00  [24mfree_image[24;63H[K[24;63H30,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      821     0.00     0.00  [24mmake_empty_image[24;63H[K[24;63H31,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      817     0.00     0.00  [24mmake_image[24;63H[K[24;63H32,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      801     0.00     0.00  [24moption_find[24;63H[K[24;63H33,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      761     0.00     0.00  [24mload_image[24;63H[K[24;63H34,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      761     0.00     0.00  [24mstbi__load_main[24;63H[K[24;63H35,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      761     0.00     0.00  [24mstbi_load[24;63H[K[24;63H36,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      761     0.00     0.00  [24mstbi_load_from_file[24;63H[K[24;63H37,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      760     0.00     0.00  [24mload_image_color[24;63H[K[24;63H38,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      760     0.00     0.00  [24mstbi__getn[24;63H[K[24;63H39,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      760     0.00     0.00  [24mstbi__parse_png_file[24;63H[K[24;63H40,52[10C1%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00      760     0.00     0.00  [24mstbi_zlib_decode_malloc_guu[23;1Hesssize_headerflag[24;63H[K[24;63H41,52[10C2%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H2[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      691     0.00     0.00  [24mxmalloc_location[24;63H[K[24;63H43,52[10C2%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      576     0.00     0.00  [24mresample_row_1[24;63H[K[24;63H44,52[10C2%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      557     0.00     0.00  [24moption_find_int_quiet[24;63H[K[24;63H45,52[10C2%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00      273     0.00     0.00  [24mfgetl
[4m  0.00     11.10     0.00      256     0.00     0.00  [24moverlap[24;63H[K[24;63H46,52[10C2%[17;52H[24;53Hj[17;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      235     0.00     0.00  [24mlist_insert[24;63H[K[24;63H47,52[10C2%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      225     0.00     0.00  [24mstbi__stdio_skip[24;63H[K[24;63H48,52[10C2%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      190     0.00     0.00  [24mstrip[24;63H[K[24;63H49,52[10C2%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00      170     0.00     0.00  [24mstbi__compute_huffman_codee[23;1Hs[24;63H[K[24;63H50,52[10C2%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H1[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      142     0.00     0.00  [24moption_find_float_quiet[24;63H[K[24;63H52,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      130     0.00     0.00  [24moption_insert[24;63H[K[24;63H53,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00      130     0.00     0.00  [24mread_option[24;63H[K[24;63H54,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00      128     0.00     0.00  [24mbox_intersection
[4m  0.00     11.10     0.00       64     0.00     0.00  [24mbox_iou[24;63H[K[24;63H55,52[10C3%[17;52H[24;53Hj[17;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       64     0.00     0.00  [24mbox_union[24;63H[K[24;63H56,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       64     0.00     0.00  [24mfill_cpu[24;63H[K[24;63H57,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       59     0.00     0.00  [24moption_find_int[24;63H[K[24;63H58,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       54     0.00     0.00  [24mtile_images[24;63H[K[24;63H59,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       50     0.00     0.00  [24mcomposite_image[24;63H[K[24;63H60,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       50     0.00     0.00  [24membed_image[24;63H[K[24;63H61,52[10C3%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00       28     0.00     0.00  [24mmake_list
[4m  0.00     11.10     0.00       26     0.00     0.00  [24mconvolutional_out_height[24;63H[K[24;63H62,52[10C3%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H3[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       26     0.00     0.00  [24mconvolutional_out_width[24;63H[K[24;63H64,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       25     0.00     0.00  [24mfree_section[24;63H[K[24;63H65,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       24     0.00     0.00  [24mfree_layer[24;63H[K[24;63H66,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       24     0.00     0.00  [24mfree_layer_custom[24;63H[K[24;63H67,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       24     0.00     0.00  [24moption_unused[24;63H[K[24;63H68,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       24     0.00     0.00  [24mstring_to_layer_type[24;63H[K[24;63H69,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       23     0.00     0.00  [24moption_find_str[24;63H[K[24;63H70,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       16     0.00     0.00  [24mstbi__get16be[24;63H[K[24;63H71,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00       14     0.00     0.00  [24mis_avx
[4m  0.00     11.10     0.00       13     0.00     0.79  [24mforward_convolutional_laye[23;1H[1m@@[0m[23;4H[K[23;3H[1m@[0m[24;63H[K[24;63H72,52[10C4%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H3[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[22;1H[4m  0.00     11.10     0.00       13     0.00     0.79  [24mforward_convolutional_layee[23;1Hr[24;63H[K[24;63H74,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       13     0.00     0.00  [24mgemm[24;63H[K[24;63H75,52[10C4%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       13     0.00     0.78  [24mgemm_cpu[24;63H[K[24;63H76,52[10C5%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       13     0.00     0.00  [24mget_activation[24;63H[K[24;63H77,52[10C5%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00       13     0.00     0.00  [24mget_convolutional_workspacc[23;1He_size[24;63H[K[24;63H78,52[10C5%[17;52H[24;53Hj[17;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       13     0.00     0.00  [24mget_workspace_size16[24;63H[K[24;63H79,52[10C5%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       13     0.00     0.00  [24mget_workspace_size32[24;63H[K[24;63H80,52[10C5%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       13     0.00     0.00  [24mis_fma_avx2[24;63H[K[24;63H81,52[10C5%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00       13     0.00     0.00  [24mload_convolutional_weights[23;1H[4m  0.00     11.10     0.00       13     0.00     0.02  [24mparse_convolutional[24;63H[K[24;63H82,52[10C5%[17;52H[24;53Hj[17;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       12     0.00     0.00  [24mfind_arg[24;63H[K[24;63H83,52[10C5%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       12     0.00     0.00  [24mget_color[24;63H[K[24;63H84,52[10C5%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       12     0.00     0.00  [24mget_yolo_box[24;63H[K[24;63H85,52[10C5%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00       11     0.00     0.00  [24mfree_convolutional_batchnoo[23;1Hrm[24;63H[K[24;63H86,52[10C6%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H7[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       11     0.00     0.00  [24mstbi__process_marker[24;63H[K[24;63H88,52[10C6%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00       10     0.00     0.00  [24mfind_int_arg[24;63H[K[24;63H89,52[10C6%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        9     0.00     0.00  [24moption_find_float[24;63H[K[24;63H90,52[10C6%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00        6     0.00     0.00  [24mfind_char_arg
[4m  0.00     11.10     0.00        6     0.00     0.02  [24mforward_maxpool_layer[24;63H[K[24;63H91,52[10C6%[17;52H[24;53Hj[17;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        6     0.00     0.00  [24mmake_maxpool_layer[24;63H[K[24;63H92,52[10C6%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00        6     0.00     0.00  [24moption_find_str_quiet
[4m  0.00     11.10     0.00        6     0.00     0.00  [24mparse_maxpool[24;63H[K[24;63H93,52[10C6%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H4[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        6     0.00     0.00  [24mscal_add_cpu[24;63H[K[24;63H95,52[10C6%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        4     0.00     0.00  [24mborder_image[24;63H[K[24;63H96,52[10C6%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        4     0.00     0.00  [24mcopy_image[24;63H[K[24;63H97,52[10C6%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00        4     0.00     0.00  [24mdraw_box
[4m  0.00     11.10     0.00        4     0.00     0.00  [24mdraw_box_width[24;63H[K[24;63H98,52[10C7%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H9[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        4     0.00     0.00  [24mget_label_v3[24;63H[K[24;63H100,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        4     0.00     0.00  [24mstbi__build_huffman[24;63H[K[24;63H101,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        3     0.00     0.00  [24mcopy_cpu[24;63H[K[24;63H102,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        3     0.00     0.00  [24mfind_float_arg[24;63H[K[24;63H103,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        3     0.00     0.00  [24mfree_list[24;63H[K[24;63H104,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        3     0.00     0.00  [24mfree_node[24;63H[K[24;63H105,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        3     0.00     0.00  [24mstbi__malloc_mad2[24;63H[K[24;63H106,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mcorrect_yolo_boxes[24;63H[K[24;63H107,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mforward_route_layer
[4m  0.00     11.10     0.00        2     0.00     0.01  [24mforward_yolo_layer[24;63H[K[24;63H108,52[9C7%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H9[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mget_classes_multipliers[24;63H[K[24;63H110,52[9C7%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mget_network_output[24;63H[K[24;63H111,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mget_time_point[24;63H[K[24;63H112,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mget_yolo_detections[24;63H[K[24;63H113,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mmake_route_layer[24;63H[K[24;63H114,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mmake_yolo_layer[24;63H[K[24;63H115,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mparse_route[24;63H[K[24;63H116,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mparse_yolo[24;63H[K[24;63H117,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mparse_yolo_mask[24;63H[K[24;63H118,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.01  [24msave_image[24;63H[K[24;63H119,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mstbi__hdr_info[24;63H[K[24;63H120,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24mstbi_write_jpg[24;63H[K[24;63H121,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        2     0.00     0.00  [24myolo_num_detections[24;63H[K[24;63H122,52[9C8%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mcalculate_binary_weights[24;63H[K[24;63H123,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mdestroy_all_windows_cv[24;63H[K[24;63H124,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mdo_nms_sort[24;63H[K[24;63H125,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.01  [24mdraw_detections_v3[24;63H[K[24;63H126,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mfill_network_boxes[24;63H[K[24;63H127,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00    10.37  [24mforward_network[24;63H[K[24;63H128,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mforward_upsample_layer[24;63H[K[24;63H129,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mfree_detections[24;63H[K[24;63H130,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mfree_list_contents_kvp[24;63H[K[24;63H131,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mfree_network[24;63H[K[24;63H132,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mfree_ptrs[24;63H[K[24;63H133,52[9C9%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mget_actual_detections[24;63H[K[24;63H134,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mget_current_batch[24;63H[K[24;63H135,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mget_labels_custom[24;63H[K[24;63H136,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mget_network_boxes[24;63H[K[24;63H137,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mget_network_output_size[24;63H[K[24;63H138,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mget_paths[24;63H[K[24;63H139,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mget_policy[24;63H[K[24;63H140,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mis_network[24;63H[K[24;63H141,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mlist_to_array[24;63H[K[24;63H142,52[8C10%[18;52H[24;53Hk[18;52H[24;53H [17;52H[24;65H1[17;52H[24;53Hk[17;52H[24;53H [16;52H[24;65H0[16;52H[24;53Hk[16;52H[24;53H [15;52H[24;64H39[15;52H[24;53Hk[15;52H[24;53H [14;52H[24;65H8[14;52H[24;53Hk[14;52H[24;53H [13;52H[24;65H7[13;52H[24;53Hk[13;52H[24;53H [12;52H[24;65H6[12;52H[24;53Hk[12;52H[24;53H [11;52H[24;65H5[11;52H[24;53Hk[11;52H[24;53H [10;52H[24;65H4[10;52H[24;53Hk[10;52H[24;53H [9;52H[24;65H3[9;52H[24;53Hj[9;52H[24;53H [10;52H[24;65H4[10;52H[24;53Hj[10;52H[24;53H [11;52H[24;65H5[11;52H[24;53Hj[11;52H[24;53H [12;52H[24;65H6[12;52H[24;53Hj[12;52H[24;53H [13;52H[24;65H7[13;52H[24;53Hj[13;52H[24;53H [14;52H[24;65H8[14;52H[24;53Hj[14;52H[24;53H [15;52H[24;65H9[15;52H[24;53Hj[15;52H[24;53H [16;52H[24;64H40[16;52H[24;53Hj[16;52H[24;53H [17;52H[24;65H1[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H2[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.23  [24mload_alphabet[24;63H[K[24;63H143,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mload_weights[24;63H[K[24;63H144,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mload_weights_upto[24;63H[K[24;63H145,52[8C10%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mmake_network[24;63H[K[24;63H146,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mmake_network_boxes[24;63H[K[24;63H147,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mmake_upsample_layer[24;63H[K[24;63H148,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00    10.37  [24mnetwork_predict[24;63H[K[24;63H149,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mnum_detections[24;63H[K[24;63H150,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mparse_net_options[24;63H[K[24;63H151,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.30  [24mparse_network_cfg_custom[24;63H[K[24;63H152,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mparse_upsample[24;63H[K[24;63H153,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mread_cfg[24;63H[K[24;63H154,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mread_data_cfg[24;63H[K[24;63H155,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mset_train_only_bn[24;63H[K[24;63H156,52[8C11%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.01  [24mshow_image[24;63H[K[24;63H157,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mstbi__mad3sizes_valid[24;63H[K[24;63H158,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00    11.10  [24mtest_detector[24;63H[K[24;63H159,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mupsample_cpu[24;63H[K[24;63H160,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m  0.00     11.10     0.00        1     0.00     0.00  [24mwait_until_press_key_cv[24;63H[K[24;63H161,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[24;63H[K[24;63H162,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m %         the percentage of the total running time of the[0m[24;63H[K[24;63H163,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1mtime       program used by this function.[0m[24;63H[K[24;63H164,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[24;63H[K[24;63H165,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1mcumulative a running sum of the number of seconds accounted[0m[24;63H[K[24;63H166,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m seconds   for by this function and those listed above it.[0m[24;63H[K[24;63H167,0-1[7C12%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[24;63H[K[24;63H168,52[8C12%[18;52H[24;53Hj[18;52H[24;53H [18;41H[1;23r[23;1H
[1;24r[23;1H[1m self      the number of seconds accounted for by this[0m[24;63H[K[24;63H169,41[8C13%[18;41H[24;53Hj[18;41H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1mseconds    function alone.  This is the major sort for this[0m[24;63H[K[24;63H170,0-1[7C13%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m           listing.[0m[24;63H[K[24;63H171,52[8C13%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[24;63H[K[24;63H172,52[8C13%[18;52H[24;53Hj[18;52H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1mcalls      the number of times this function was invoked, if[0m[24;63H[K[24;63H173,0-1[7C13%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m           this function is profiled, else blank.[0m[24;63H[K[24;63H174,52[8C13%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[24;63H[K[24;63H175,52[8C13%[18;52H[24;53Hj[18;52H[24;53H [18;19H[1;23r[23;1H
[1;24r[23;1H[1m self      the average number of milliseconds spent in this[0m[24;63H[K[24;63H176,19[8C13%[18;19H[24;53Hj[18;19H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1mms/call    function per call, if this function is profiled,[0m[24;63H[K[24;63H177,0-1[7C13%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m           else blank.[0m[24;63H[K[24;63H178,52[8C13%[18;52H[24;53Hj[18;52H[24;53H [18;49H[1;23r[23;1H
[1;24r[24;63H[K[24;63H179,49[8C13%[18;49H[24;53Hj[18;49H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m total     the average number of milliseconds spent in this[0m[24;63H[K[24;63H180,0-1[7C14%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1mms/call    function and its descendents per call, if this[0m[24;63H[K[24;63H181,52[8C14%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m           function is profiled, else blank.[0m[24;63H[K[24;63H182,52[8C14%[18;52H[24;53Hj[18;52H[24;53H [18;22H[1;23r[23;1H
[1;24r[24;63H[K[24;63H183,15-22     14%[18;22H[24;53Hj[18;22H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1mname       the name of the function.  This is the minor sort[0m[24;63H[K[24;63H184,0-1[7C14%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m           for this listing. The index shows the location of[0m[24;63H[K[24;63H185,52[8C14%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m           the function in the gprof listing. If the index is[0m[24;63H[K[24;63H186,52[8C14%[18;52H[24;53Hj[18;52H[24;53H [18;44H[1;23r[23;1H
[1;24r[23;1H[1m           in parenthesis it shows where it would appear in[0m[24;63H[K[24;63H187,37-44     14%[18;44H[24;53Hj[18;44H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m           the gprof listing if it were to be printed.[0m[24;63H[K[24;63H188,0-1[7C14%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m^L[0m[24;63H[K[24;63H189,52[8C14%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1HCopyright (C) 2012-2018 Free Software Foundation, Inc.[24;63H[K[24;63H190,52[8C14%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[24;63H[K[24;63H191,45-52     14%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1HCopying and distribution of this file, with or without modification,[24;63H[K[24;63H192,45-52     15%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1Hare permitted in any medium without royalty provided the copyright[24;63H[K[24;63H193,45-52     15%[18;52H[24;53Hj[18;52H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1Hnotice and this notice are preserved.[24;63H[K[24;63H194,1[9C15%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m^L[0m[24;63H[K[24;63H195,52[8C15%[18;52H[24;53Hj[18;52H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4m                     [24m[1mCall graph (explanation follows)[0m[24;63H[K[24;63H196,0-1[7C15%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[24;63H[K[24;63H197,52[8C15%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[24;63H[K[24;63H198,52[8C15%[18;52H[24;53Hj[18;52H[24;53H [18;37H[1;23r[23;1H
[1;24r[23;1H[1mgranularity: each sample hit covers 2 byte(s) for 0.09% of 11.10 seconds[0m[24;63H[K[24;63H199,37[8C15%[18;37H[24;53Hj[18;37H[24;53H [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H200,1[9C15%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1mindex % time    self  children    called     name[0m[24;63H[K[24;63H201,38-52     15%[18;52H[24;53Hj[18;52H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   11.10       1/1           [24mrun_detector [1m[2][0m[24;63H[K[24;63H202,0-1[7C15%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[1m[1]    100.0    0.00   11.10       1         test_detector [1][0m[24;63H[K[24;63H203,0-1[7C16%[18;1H[24;53Hj[18;1H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.37       1/1           [24mnetwork_predict [1m[4][0m[24;63H[K[24;63H204,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.30       1/1           [24mparse_network_cfg_custom [1m[10][0m[24;63H[K[24;63H205,0-1[7C16%[18;1H[24;53Hj[18;1H[24;53H [18;49H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.23       1/1           [24mload_alphabet [1m[14][0m[24;63H[K[24;63H206,49[8C16%[18;49H[24;53Hj[18;49H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.13    0.00       1/1           [24mfuse_conv_batchnorm [1m[19][0m[24;63H[K[24;63H207,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.04    0.00       1/1           [24mresize_image [1m[27][0m[24;63H[K[24;63H208,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.01       1/2           [24msave_image [1m[31][0m[24;63H[K[24;63H209,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.01       1/1           [24mshow_image [1m[34][0m[24;63H[K[24;63H210,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.01       1/1           [24mdraw_detections_v3 [1m[41][0m[24;63H[K[24;63H211,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/761         [24mload_image [1m[11][0m[24;63H[K[24;63H212,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00     762/825         [24mfree_image [1m[53][0m[24;63H[K[24;63H213,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/2           [24mget_time_point [1m[122][0m[24;63H[K[24;63H214,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mread_data_cfg [1m[158][0m[24;63H[K[24;63H215,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/23          [24moption_find_str [1m[85][0m[24;63H[K[24;63H216,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_labels_custom [1m[142][0m[24;63H[K[24;63H217,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights_upto [1m[150][0m[24;63H[K[24;63H218,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights [1m[149][0m[24;63H[K[24;63H219,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mcalculate_binary_weights [1m[131][0m[24;63H[K[24;63H220,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_network_boxes [1m[143][0m[24;63H[K[24;63H221,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdo_nms_sort [1m[133][0m[24;63H[K[24;63H222,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_detections [1m[136][0m[24;63H[K[24;63H223,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdestroy_all_windows_cv [1m[132][0m[24;63H[K[24;63H224,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mwait_until_press_key_cv [1m[162][0m[24;63H[K[24;63H225,52[8C17%[18;52H[24;53Hk[18;52H[24;53H [17;52H[24;65H4[17;52H[24;53Hk[17;52H[24;53H [16;52H[24;65H3[16;52H[24;53Hk[16;52H[24;53H [15;52H[24;65H2[15;52H[24;53Hk[15;52H[24;53H [14;52H[24;65H1[14;52H[24;53Hk[14;52H[24;53H [13;52H[24;65H0[13;52H[24;53Hk[13;52H[24;53H [12;52H[24;64H19[12;52H[24;53Hk[12;52H[24;53H [11;52H[24;65H8[11;52H[24;53Hk[11;52H[24;53H [10;52H[24;65H7[10;52H[24;53Hk[10;52H[24;53H [9;52H[24;65H6[9;52H[24;53Hk[9;52H[24;53H [8;52H[24;65H5[8;52H[24;53Hk[8;52H[24;53H [7;52H[24;65H4[7;52H[24;53Hk[7;52H[24;53H [6;52H[24;65H3[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   11.10       1/1           [24mrun_detector [1m[2][0m[24;63H[K[24;63H212,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1mindex % time    self  children    called     name[0m[24;63H[K[24;63H211,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H210,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1mgranularity: each sample hit covers 2 byte(s) for 0.09% of 11.10 seconds[0m[24;63H[K[24;63H209,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H208,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H207,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;49H[1;23r[1;1H[L[1;24r[1;1H[4m                     [24m[1mCall graph (explanation follows)[0m[24;63H[K[24;63H206,49[8C17%[6;49H[24;53Hk[6;49H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[1m^L[0m[24;63H[K[24;63H205,0-1[7C17%[6;1H[24;53Hj[6;1H[24;53H [7;49H[24;65H6,49 [7;49H[24;53Hj[7;49H[24;53H [8;52H[24;65H7,52[8;52H[24;53Hj[8;52H[24;53H [9;52H[24;65H8[9;52H[24;53Hj[9;52H[24;53H [10;52H[24;65H9[10;52H[24;53Hj[10;52H[24;53H [11;52H[24;64H10[11;52H[24;53Hj[11;52H[24;53H [12;52H[24;65H1[12;52H[24;53Hj[12;52H[24;53H [13;52H[24;65H2[13;52H[24;53Hj[13;52H[24;53H [14;52H[24;65H3[14;52H[24;53Hj[14;52H[24;53H [15;52H[24;65H4[15;52H[24;53Hj[15;52H[24;53H [16;52H[24;65H5[16;52H[24;53Hj[16;52H[24;53H [17;52H[24;65H6[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H7[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights_upto [1m[150][0m[24;63H[K[24;63H218,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights [1m[149][0m[24;63H[K[24;63H219,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mcalculate_binary_weights [1m[131][0m[24;63H[K[24;63H220,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_network_boxes [1m[143][0m[24;63H[K[24;63H221,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdo_nms_sort [1m[133][0m[24;63H[K[24;63H222,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_detections [1m[136][0m[24;63H[K[24;63H223,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdestroy_all_windows_cv [1m[132][0m[24;63H[K[24;63H224,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mwait_until_press_key_cv [1m[162][0m[24;63H[K[24;63H225,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_list_contents_kvp [1m[137][0m[24;63H[K[24;63H226,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_ptrs [1m[139][0m[24;63H[K[24;63H227,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/3           [24mfree_list [1m[115][0m[24;63H[K[24;63H228,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_network [1m[138][0m[24;63H[K[24;63H229,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H230,52[8C18%[18;52H[24;53Hk[18;52H[24;53H [17;52H[24;64H29[17;52H[24;53Hk[17;52H[24;53H [16;52H[24;65H8[16;52H[24;53Hk[16;52H[24;53H [15;52H[24;65H7[15;52H[24;53Hk[15;52H[24;53H [14;52H[24;65H6[14;52H[24;53Hk[14;52H[24;53H [13;52H[24;65H5[13;52H[24;53Hk[13;52H[24;53H [12;52H[24;65H4[12;52H[24;53Hk[12;52H[24;53H [11;52H[24;65H3[11;52H[24;53Hk[11;52H[24;53H [10;52H[24;65H2[10;52H[24;53Hk[10;52H[24;53H [9;52H[24;65H1[9;52H[24;53Hk[9;52H[24;53H [8;52H[24;65H0[8;52H[24;53Hk[8;52H[24;53H [7;52H[24;64H19[7;52H[24;53Hk[7;52H[24;53H [6;52H[24;65H8[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.13    0.00       1/1           [24mfuse_conv_batchnorm [1m[19][0m[24;63H[K[24;63H217,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.23       1/1           [24mload_alphabet [1m[14][0m[24;63H[K[24;63H216,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.30       1/1           [24mparse_network_cfg_custom [1m[10][0m[24;63H[K[24;63H215,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   10.37       1/1           [24mnetwork_predict [1m[4][0m[24;63H[K[24;63H214,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1m[1]    100.0    0.00   11.10       1         test_detector [1][0m[24;63H[K[24;63H213,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   11.10       1/1           [24mrun_detector [1m[2][0m[24;63H[K[24;63H212,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1mindex % time    self  children    called     name[0m[24;63H[K[24;63H211,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H210,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1mgranularity: each sample hit covers 2 byte(s) for 0.09% of 11.10 seconds[0m[24;63H[K[24;63H209,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H208,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H207,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;49H[1;23r[1;1H[L[1;24r[1;1H[4m                     [24m[1mCall graph (explanation follows)[0m[24;63H[K[24;63H206,49[8C17%[6;49H[24;53Hk[6;49H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[1m^L[0m[24;63H[K[24;63H205,0-1[7C17%[6;1H[24;53Hj[6;1H[24;53H [7;49H[24;65H6,49 [7;49H[24;53Hj[7;49H[24;53H [8;52H[24;65H7,52[8;52H[24;53Hj[8;52H[24;53H [9;52H[24;65H8[9;52H[24;53Hj[9;52H[24;53H [10;52H[24;65H9[10;52H[24;53Hj[10;52H[24;53H [11;52H[24;64H10[11;52H[24;53Hj[11;52H[24;53H [12;52H[24;65H1[12;52H[24;53Hj[12;52H[24;53H [13;52H[24;65H2[13;52H[24;53Hj[13;52H[24;53H [14;52H[24;65H3[14;52H[24;53Hj[14;52H[24;53H [15;52H[24;65H4[15;52H[24;53Hj[15;52H[24;53H [16;52H[24;65H5[16;52H[24;53Hj[16;52H[24;53H [17;52H[24;65H6[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H7[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights_upto [1m[150][0m[24;63H[K[24;63H218,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights [1m[149][0m[24;63H[K[24;63H219,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mcalculate_binary_weights [1m[131][0m[24;63H[K[24;63H220,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_network_boxes [1m[143][0m[24;63H[K[24;63H221,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdo_nms_sort [1m[133][0m[24;63H[K[24;63H222,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_detections [1m[136][0m[24;63H[K[24;63H223,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdestroy_all_windows_cv [1m[132][0m[24;63H[K[24;63H224,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mwait_until_press_key_cv [1m[162][0m[24;63H[K[24;63H225,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_list_contents_kvp [1m[137][0m[24;63H[K[24;63H226,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_ptrs [1m[139][0m[24;63H[K[24;63H227,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/3           [24mfree_list [1m[115][0m[24;63H[K[24;63H228,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_network [1m[138][0m[24;63H[K[24;63H229,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H230,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                                                 [24m[1m<spontaneous>[0m[24;63H[K[24;63H231,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[2]    100.0    0.00   11.10                 run_detector [2][0m[24;63H[K[24;63H232,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   11.10       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H233,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      12/12          [24mfind_arg [1m[95][0m[24;63H[K[24;63H234,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      10/10          [24mfind_int_arg [1m[100][0m[24;63H[K[24;63H235,47[8C18%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       6/6           [24mfind_char_arg [1m[102][0m[24;63H[K[24;63H236,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       3/3           [24mfind_float_arg [1m[114][0m[24;63H[K[24;63H237,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H238,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.37       1/1           [24mnetwork_predict [1m[4][0m[24;63H[K[24;63H239,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[3]     93.4    0.00   10.37       1         forward_network [3][0m[24;63H[K[24;63H240,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.26      13/13          [24mforward_convolutional_layer [1m[5][0m[24;63H[K[24;63H241,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.10       6/6           [24mforward_maxpool_layer [1m[22][0m[24;63H[K[24;63H242,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.01       2/2           [24mforward_yolo_layer [1m[40][0m[24;63H[K[24;63H243,47[8C19%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/2           [24mforward_route_layer [1m[119][0m[24;63H[K[24;63H244,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mupsample_cpu [1m[161][0m[24;63H[K[24;63H245,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mforward_upsample_layer [1m[135][0m[24;63H[K[24;63H246,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H247,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.37       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H248,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[4]     93.4    0.00   10.37       1         network_predict [4][0m[24;63H[K[24;63H249,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.37       1/1           [24mforward_network [1m[3][0m[24;63H[K[24;63H250,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/2           [24mget_network_output [1m[121][0m[24;63H[K[24;63H251,52[8C20%[18;52H[24;53Hk[18;52H[24;53H [17;52H[24;65H0[17;52H[24;53Hk[17;52H[24;53H [16;52H[24;64H49[16;52H[24;53Hk[16;52H[24;53H [15;52H[24;65H8[15;52H[24;53Hk[15;52H[24;53H [14;52H[24;65H7[14;52H[24;53Hk[14;52H[24;53H [13;52H[24;65H6[13;52H[24;53Hk[13;52H[24;53H [12;52H[24;65H5[12;52H[24;53Hk[12;52H[24;53H [11;52H[24;65H4[11;52H[24;53Hk[11;52H[24;53H [10;47H[24;65H3,47[10;47H[24;53Hk[10;47H[24;53H [9;52H[24;65H2,52[9;52H[24;53Hk[9;52H[24;53H [8;52H[24;65H1[8;52H[24;53Hk[8;52H[24;53H [7;52H[24;65H0[7;52H[24;53Hk[7;52H[24;53H [6;52H[24;64H39[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/3           [24mfree_list [1m[115][0m[24;63H[K[24;63H238,52[8C20%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mfree_ptrs [1m[139][0m[24;63H[K[24;63H237,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mfree_list_contents_kvp [1m[137][0m[24;63H[K[24;63H236,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;47H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mwait_until_press_key_cv [1m[162][0m[24;63H[K[24;63H235,47[8C19%[6;47H[24;53Hk[6;47H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mdestroy_all_windows_cv [1m[132][0m[24;63H[K[24;63H234,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mfree_detections [1m[136][0m[24;63H[K[24;63H233,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mdo_nms_sort [1m[133][0m[24;63H[K[24;63H232,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mget_network_boxes [1m[143][0m[24;63H[K[24;63H231,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mcalculate_binary_weights [1m[131][0m[24;63H[K[24;63H230,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mload_weights [1m[149][0m[24;63H[K[24;63H229,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mload_weights_upto [1m[150][0m[24;63H[K[24;63H228,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mget_labels_custom [1m[142][0m[24;63H[K[24;63H227,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/23          [24moption_find_str [1m[85][0m[24;63H[K[24;63H226,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mread_data_cfg [1m[158][0m[24;63H[K[24;63H225,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       2/2           [24mget_time_point [1m[122][0m[24;63H[K[24;63H224,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00     762/825         [24mfree_image [1m[53][0m[24;63H[K[24;63H223,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/761         [24mload_image [1m[11][0m[24;63H[K[24;63H222,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.01       1/1           [24mdraw_detections_v3 [1m[41][0m[24;63H[K[24;63H221,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.01       1/1           [24mshow_image [1m[34][0m[24;63H[K[24;63H220,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.01       1/2           [24msave_image [1m[31][0m[24;63H[K[24;63H219,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.04    0.00       1/1           [24mresize_image [1m[27][0m[24;63H[K[24;63H218,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.13    0.00       1/1           [24mfuse_conv_batchnorm [1m[19][0m[24;63H[K[24;63H217,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.23       1/1           [24mload_alphabet [1m[14][0m[24;63H[K[24;63H216,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.30       1/1           [24mparse_network_cfg_custom [1m[10][0m[24;63H[K[24;63H215,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   10.37       1/1           [24mnetwork_predict [1m[4][0m[24;63H[K[24;63H214,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1m[1]    100.0    0.00   11.10       1         test_detector [1][0m[24;63H[K[24;63H213,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   11.10       1/1           [24mrun_detector [1m[2][0m[24;63H[K[24;63H212,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1mindex % time    self  children    called     name[0m[24;63H[K[24;63H211,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H210,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1mgranularity: each sample hit covers 2 byte(s) for 0.09% of 11.10 seconds[0m[24;63H[K[24;63H209,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H208,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H207,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;49H[1;23r[1;1H[L[1;24r[1;1H[4m                     [24m[1mCall graph (explanation follows)[0m[24;63H[K[24;63H206,49[8C17%[6;49H[24;53Hk[6;49H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[1m^L[0m[24;63H[K[24;63H205,0-1[7C17%[6;1H[24;53Hk[6;1H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1Hnotice and this notice are preserved.[24;63H[K[24;63H204,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1Hare permitted in any medium without royalty provided the copyright[24;63H[K[24;63H203,0-1[7C17%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1HCopying and distribution of this file, with or without modification,[24;63H[K[24;63H202,0-1[7C16%[6;1H[24;53Hk[6;1H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H201,38-52     16%[6;52H[24;53Hj[6;52H[24;53H [7;1H[24;65H2,0-1  [7;1H[24;53Hj[7;1H[24;53H [8;1H[24;65H3[8;1H[24;53Hj[8;1H[24;53H [9;52H[24;65H4,52 [9;52H[24;53Hj[9;52H[24;53H [10;1H[24;65H5,0-1[10;1H[24;53Hj[10;1H[24;53H [11;49H[24;65H6,49 [11;49H[24;53Hj[11;49H[24;53H [12;52H[24;65H7,52[12;52H[24;53Hj[12;52H[24;53H [13;52H[24;65H8[13;52H[24;53Hj[13;52H[24;53H [14;52H[24;65H9[14;52H[24;53Hj[14;52H[24;53H [15;52H[24;64H10[15;52H[24;53Hj[15;52H[24;53H [16;52H[24;65H1[16;52H[24;53Hj[16;52H[24;53H [17;52H[24;65H2[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H3[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/2           [24mget_time_point [1m[122][0m[24;63H[K[24;63H214,52[8C16%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mread_data_cfg [1m[158][0m[24;63H[K[24;63H215,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/23          [24moption_find_str [1m[85][0m[24;63H[K[24;63H216,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_labels_custom [1m[142][0m[24;63H[K[24;63H217,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights_upto [1m[150][0m[24;63H[K[24;63H218,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights [1m[149][0m[24;63H[K[24;63H219,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mcalculate_binary_weights [1m[131][0m[24;63H[K[24;63H220,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_network_boxes [1m[143][0m[24;63H[K[24;63H221,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdo_nms_sort [1m[133][0m[24;63H[K[24;63H222,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_detections [1m[136][0m[24;63H[K[24;63H223,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdestroy_all_windows_cv [1m[132][0m[24;63H[K[24;63H224,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mwait_until_press_key_cv [1m[162][0m[24;63H[K[24;63H225,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_list_contents_kvp [1m[137][0m[24;63H[K[24;63H226,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_ptrs [1m[139][0m[24;63H[K[24;63H227,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/3           [24mfree_list [1m[115][0m[24;63H[K[24;63H228,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_network [1m[138][0m[24;63H[K[24;63H229,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H230,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                                                 [24m[1m<spontaneous>[0m[24;63H[K[24;63H231,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[2]    100.0    0.00   11.10                 run_detector [2][0m[24;63H[K[24;63H232,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   11.10       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H233,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      12/12          [24mfind_arg [1m[95][0m[24;63H[K[24;63H234,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      10/10          [24mfind_int_arg [1m[100][0m[24;63H[K[24;63H235,47[8C18%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       6/6           [24mfind_char_arg [1m[102][0m[24;63H[K[24;63H236,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       3/3           [24mfind_float_arg [1m[114][0m[24;63H[K[24;63H237,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H238,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.37       1/1           [24mnetwork_predict [1m[4][0m[24;63H[K[24;63H239,52[8C19%[18;52H[24;53Hk[18;52H[24;53H [17;52H[24;65H8[17;52H[24;53Hk[17;52H[24;53H [16;52H[24;65H7[16;52H[24;53Hk[16;52H[24;53H [15;52H[24;65H6[15;52H[24;53Hk[15;52H[24;53H [14;47H[24;65H5,47[14;47H[24;53Hk[14;47H[24;53H [13;52H[24;65H4,52[13;52H[24;53Hk[13;52H[24;53H [12;52H[24;65H3[12;52H[24;53Hk[12;52H[24;53H [11;52H[24;65H2[11;52H[24;53Hk[11;52H[24;53H [10;52H[24;65H1[10;52H[24;53Hk[10;52H[24;53H [9;52H[24;65H0[9;52H[24;53Hk[9;52H[24;53H [8;52H[24;64H29[8;52H[24;53Hk[8;52H[24;53H [7;52H[24;65H8[7;52H[24;53Hk[7;52H[24;53H [6;52H[24;65H7[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/23          [24moption_find_str [1m[85][0m[24;63H[K[24;63H226,52[8C19%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mread_data_cfg [1m[158][0m[24;63H[K[24;63H225,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       2/2           [24mget_time_point [1m[122][0m[24;63H[K[24;63H224,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00     762/825         [24mfree_image [1m[53][0m[24;63H[K[24;63H223,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/761         [24mload_image [1m[11][0m[24;63H[K[24;63H222,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.01       1/1           [24mdraw_detections_v3 [1m[41][0m[24;63H[K[24;63H221,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.01       1/1           [24mshow_image [1m[34][0m[24;63H[K[24;63H220,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.01       1/2           [24msave_image [1m[31][0m[24;63H[K[24;63H219,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.04    0.00       1/1           [24mresize_image [1m[27][0m[24;63H[K[24;63H218,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.13    0.00       1/1           [24mfuse_conv_batchnorm [1m[19][0m[24;63H[K[24;63H217,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.23       1/1           [24mload_alphabet [1m[14][0m[24;63H[K[24;63H216,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.30       1/1           [24mparse_network_cfg_custom [1m[10][0m[24;63H[K[24;63H215,52[8C18%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   10.37       1/1           [24mnetwork_predict [1m[4][0m[24;63H[K[24;63H214,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1m[1]    100.0    0.00   11.10       1         test_detector [1][0m[24;63H[K[24;63H213,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   11.10       1/1           [24mrun_detector [1m[2][0m[24;63H[K[24;63H212,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1mindex % time    self  children    called     name[0m[24;63H[K[24;63H211,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H210,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1mgranularity: each sample hit covers 2 byte(s) for 0.09% of 11.10 seconds[0m[24;63H[K[24;63H209,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H208,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H207,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;49H[1;23r[1;1H[L[1;24r[1;1H[4m                     [24m[1mCall graph (explanation follows)[0m[24;63H[K[24;63H206,49[8C17%[6;49H[24;53Hk[6;49H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1H[1m^L[0m[24;63H[K[24;63H205,0-1[7C17%[6;1H[24;53Hk[6;1H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1Hnotice and this notice are preserved.[24;63H[K[24;63H204,52[8C17%[6;52H[24;53Hk[6;52H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1Hare permitted in any medium without royalty provided the copyright[24;63H[K[24;63H203,0-1[7C17%[6;1H[24;53Hk[6;1H[24;53H [6;1H[1;23r[1;1H[L[1;24r[1;1HCopying and distribution of this file, with or without modification,[24;63H[K[24;63H202,0-1[7C16%[6;1H[24;53Hj[6;1H[24;53H [7;1H[24;65H3[7;1H[24;53Hj[7;1H[24;53H [8;52H[24;65H4,52 [8;52H[24;53Hj[8;52H[24;53H [9;1H[24;65H5,0-1[9;1H[24;53Hj[9;1H[24;53H [10;49H[24;65H6,49 [10;49H[24;53Hj[10;49H[24;53H [11;52H[24;65H7,52[11;52H[24;53Hj[11;52H[24;53H [12;52H[24;65H8[12;52H[24;53Hj[12;52H[24;53H [13;52H[24;65H9[13;52H[24;53Hj[13;52H[24;53H [14;52H[24;64H10[14;52H[24;53Hj[14;52H[24;53H [15;52H[24;65H1[15;52H[24;53Hj[15;52H[24;53H [16;52H[24;65H2[16;52H[24;53Hj[16;52H[24;53H [17;52H[24;65H3[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H4[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mread_data_cfg [1m[158][0m[24;63H[K[24;63H215,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/23          [24moption_find_str [1m[85][0m[24;63H[K[24;63H216,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_labels_custom [1m[142][0m[24;63H[K[24;63H217,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights_upto [1m[150][0m[24;63H[K[24;63H218,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mload_weights [1m[149][0m[24;63H[K[24;63H219,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mcalculate_binary_weights [1m[131][0m[24;63H[K[24;63H220,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_network_boxes [1m[143][0m[24;63H[K[24;63H221,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdo_nms_sort [1m[133][0m[24;63H[K[24;63H222,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_detections [1m[136][0m[24;63H[K[24;63H223,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mdestroy_all_windows_cv [1m[132][0m[24;63H[K[24;63H224,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mwait_until_press_key_cv [1m[162][0m[24;63H[K[24;63H225,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_list_contents_kvp [1m[137][0m[24;63H[K[24;63H226,52[8C17%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_ptrs [1m[139][0m[24;63H[K[24;63H227,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/3           [24mfree_list [1m[115][0m[24;63H[K[24;63H228,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mfree_network [1m[138][0m[24;63H[K[24;63H229,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H230,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                                                 [24m[1m<spontaneous>[0m[24;63H[K[24;63H231,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[2]    100.0    0.00   11.10                 run_detector [2][0m[24;63H[K[24;63H232,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   11.10       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H233,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      12/12          [24mfind_arg [1m[95][0m[24;63H[K[24;63H234,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      10/10          [24mfind_int_arg [1m[100][0m[24;63H[K[24;63H235,47[8C18%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       6/6           [24mfind_char_arg [1m[102][0m[24;63H[K[24;63H236,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       3/3           [24mfind_float_arg [1m[114][0m[24;63H[K[24;63H237,52[8C18%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H238,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.37       1/1           [24mnetwork_predict [1m[4][0m[24;63H[K[24;63H239,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[3]     93.4    0.00   10.37       1         forward_network [3][0m[24;63H[K[24;63H240,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.26      13/13          [24mforward_convolutional_layer [1m[5][0m[24;63H[K[24;63H241,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.10       6/6           [24mforward_maxpool_layer [1m[22][0m[24;63H[K[24;63H242,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.01       2/2           [24mforward_yolo_layer [1m[40][0m[24;63H[K[24;63H243,47[8C19%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/2           [24mforward_route_layer [1m[119][0m[24;63H[K[24;63H244,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mupsample_cpu [1m[161][0m[24;63H[K[24;63H245,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mforward_upsample_layer [1m[135][0m[24;63H[K[24;63H246,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H247,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.37       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H248,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[4]     93.4    0.00   10.37       1         network_predict [4][0m[24;63H[K[24;63H249,52[8C19%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.37       1/1           [24mforward_network [1m[3][0m[24;63H[K[24;63H250,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/2           [24mget_network_output [1m[121][0m[24;63H[K[24;63H251,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H252,47[8C20%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.26      13/13          [24mforward_network [1m[3][0m[24;63H[K[24;63H253,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[5]     92.4    0.00   10.26      13         forward_convolutional_layer [5][0m[24;63H[K[24;63H254,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.10      13/13          [24mgemm_cpu [1m[7][0m[24;63H[K[24;63H255,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.11    0.00       9/9           [24mim2col_cpu_ext [1m[21][0m[24;63H[K[24;63H256,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.03    0.00      13/13          [24madd_bias [1m[29][0m[24;63H[K[24;63H257,47[8C20%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.02    0.00      13/13          [24mactivate_array_cpu_custom [1m[33][0m[24;63H[K[24;63H258,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/26          [24mconvolutional_out_height [1m[78][0m[24;63H[K[24;63H259,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/26          [24mconvolutional_out_width [1m[79][0m[24;63H[K[24;63H260,52[8C20%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/64          [24mfill_cpu [1m[72][0m[24;63H[K[24;63H261,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/13          [24mgemm [1m[88][0m[24;63H[K[24;63H262,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H263,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m               10.10    0.00    3694/3694        [24mgemm_cpu [1m[7][0m[24;63H[K[24;63H264,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[6]     91.0   10.10    0.00    3694         gemm_nn [6][0m[24;63H[K[24;63H265,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H266,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.10      13/13          [24mforward_convolutional_layer [1m[5][0m[24;63H[K[24;63H267,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m[7]     91.0    0.00   10.10      13         gemm_cpu [7][0m[24;63H[K[24;63H268,47[8C21%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m               10.10    0.00    3694/3694        [24mgemm_nn [1m[6][0m[24;63H[K[24;63H269,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/13          [24mis_fma_avx2 [1m[93][0m[24;63H[K[24;63H270,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/14          [24mis_avx [1m[87][0m[24;63H[K[24;63H271,47[8C21%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H272,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.13    0.17      13/13          [24mparse_convolutional [1m[9][0m[24;63H[K[24;63H273,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[8]      2.7    0.13    0.17      13         make_convolutional_layer [8][0m[24;63H[K[24;63H274,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.17    0.00 8845488/8845488     [24mrand_uniform [1m[15][0m[24;63H[K[24;63H275,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      72/965         [24mxcalloc_location [1m[52][0m[24;63H[K[24;63H276,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/26          [24mconvolutional_out_height [1m[78][0m[24;63H[K[24;63H277,47[8C22%[18;47H[24;53Hk[18;47H[24;53H [17;52H[24;65H6,52[17;52H[24;53Hk[17;52H[24;53H [16;52H[24;65H5[16;52H[24;53Hk[16;52H[24;53H [15;52H[24;65H4[15;52H[24;53Hk[15;52H[24;53H [14;52H[24;65H3[14;52H[24;53Hk[14;52H[24;53H [13;52H[24;65H2[13;52H[24;53Hk[13;52H[24;53H [12;47H[24;65H1,47[12;47H[24;53Hk[12;47H[24;53H [11;52H[24;65H0,52[11;52H[24;53Hk[11;52H[24;53H [10;52H[24;64H69[10;52H[24;53Hk[10;52H[24;53H [9;47H[24;65H8,47[9;47H[24;53Hk[9;47H[24;53H [8;52H[24;65H7,52[8;52H[24;53Hk[8;52H[24;53H [7;52H[24;65H6[7;52H[24;53Hk[7;52H[24;53H [6;52H[24;65H5[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1m[5]     92.4    0.00   10.26      13         forward_convolutional_layer [5][0m[24;63H[K[24;63H264,52[8C22%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   10.26      13/13          [24mforward_network [1m[3][0m[24;63H[K[24;63H263,52[8C22%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H262,52[8C22%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/2           [24mget_network_output [1m[121][0m[24;63H[K[24;63H261,52[8C22%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   10.37       1/1           [24mforward_network [1m[3][0m[24;63H[K[24;63H260,52[8C21%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1m[4]     93.4    0.00   10.37       1         network_predict [4][0m[24;63H[K[24;63H259,52[8C21%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00   10.37       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H258,52[8C21%[6;52H[24;53Hk[6;52H[24;53H [6;47H[1;23r[1;1H[L[1;24r[1;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H257,47[8C21%[6;47H[24;53Hk[6;47H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mforward_upsample_layer [1m[135][0m[24;63H[K[24;63H256,52[8C21%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       1/1           [24mupsample_cpu [1m[161][0m[24;63H[K[24;63H255,52[8C21%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00       2/2           [24mforward_route_layer [1m[119][0m[24;63H[K[24;63H254,52[8C21%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.01       2/2           [24mforward_yolo_layer [1m[40][0m[24;63H[K[24;63H253,52[8C21%[6;52H[24;53Hk[6;52H[24;53H [6;47H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.10       6/6           [24mforward_maxpool_layer [1m[22][0m[24;63H[K[24;63H252,47[8C21%[6;47H[24;53Hj[6;47H[24;53H [7;52H[24;65H3,52[7;52H[24;53Hj[7;52H[24;53H [8;52H[24;65H4[8;52H[24;53Hj[8;52H[24;53H [9;52H[24;65H5[9;52H[24;53Hj[9;52H[24;53H [10;52H[24;65H6[10;52H[24;53Hj[10;52H[24;53H [11;47H[24;65H7,47[11;47H[24;53Hj[11;47H[24;53H [12;52H[24;65H8,52[12;52H[24;53Hj[12;52H[24;53H [13;52H[24;65H9[13;52H[24;53Hj[13;52H[24;53H [14;52H[24;64H60[14;52H[24;53Hj[14;52H[24;53H [15;52H[24;65H1[15;52H[24;53Hj[15;52H[24;53H [16;52H[24;65H2[16;52H[24;53Hj[16;52H[24;53H [17;52H[24;65H3[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H4[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[6]     91.0   10.10    0.00    3694         gemm_nn [6][0m[24;63H[K[24;63H265,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H266,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00   10.10      13/13          [24mforward_convolutional_layer [1m[5][0m[24;63H[K[24;63H267,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m[7]     91.0    0.00   10.10      13         gemm_cpu [7][0m[24;63H[K[24;63H268,47[8C21%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m               10.10    0.00    3694/3694        [24mgemm_nn [1m[6][0m[24;63H[K[24;63H269,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/13          [24mis_fma_avx2 [1m[93][0m[24;63H[K[24;63H270,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/14          [24mis_avx [1m[87][0m[24;63H[K[24;63H271,47[8C21%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H272,52[8C21%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.13    0.17      13/13          [24mparse_convolutional [1m[9][0m[24;63H[K[24;63H273,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[8]      2.7    0.13    0.17      13         make_convolutional_layer [8][0m[24;63H[K[24;63H274,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.17    0.00 8845488/8845488     [24mrand_uniform [1m[15][0m[24;63H[K[24;63H275,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      72/965         [24mxcalloc_location [1m[52][0m[24;63H[K[24;63H276,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/26          [24mconvolutional_out_height [1m[78][0m[24;63H[K[24;63H277,47[8C22%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/26          [24mconvolutional_out_width [1m[79][0m[24;63H[K[24;63H278,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.00      13/13          [24mget_convolutional_workspace_sizz[23;1He [1m[90][0m[24;63H[K[24;63H279,52[8C22%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;64H80[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H281,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.30      13/13          [24mparse_network_cfg_custom [1m[10][0m[24;63H[K[24;63H282,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[9]      2.7    0.00    0.30      13         parse_convolutional [9][0m[24;63H[K[24;63H283,52[8C22%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.13    0.17      13/13          [24mmake_convolutional_layer [1m[8][0m
[4m                0.00    0.00     286/557         [24moption_find_int_quiet [1m[60][0m[24;63H[K[24;63H284,52[8C23%[17;52H[24;53Hj[17;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      52/142         [24moption_find_float_quiet [1m[66][0m[24;63H[K[24;63H285,47[8C23%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      39/59          [24moption_find_int [1m[73][0m[24;63H[K[24;63H286,52[8C23%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/23          [24moption_find_str [1m[85][0m[24;63H[K[24;63H287,52[8C23%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      13/13          [24mget_activation [1m[89][0m[24;63H[K[24;63H288,52[8C23%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H289,52[8C23%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.30       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H290,52[8C23%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[10]     2.7    0.00    0.30       1         parse_network_cfg_custom [10][0m[24;63H[K[24;63H291,52[8C23%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.30      13/13          [24mparse_convolutional [1m[9][0m[24;63H[K[24;63H292,52[8C23%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00     168/557         [24moption_find_int_quiet [1m[60][0m[24;63H[K[24;63H293,52[8C23%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      49/142         [24moption_find_float_quiet [1m[66][0m[24;63H[K[24;63H294,47[8C23%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      25/25          [24mfree_section [1m[80][0m[24;63H[K[24;63H295,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      24/24          [24mstring_to_layer_type [1m[84][0m[24;63H[K[24;63H296,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      24/24          [24moption_unused [1m[83][0m[24;63H[K[24;63H297,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       6/6           [24mparse_maxpool [1m[105][0m[24;63H[K[24;63H298,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/2           [24mparse_yolo [1m[127][0m[24;63H[K[24;63H299,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/2           [24mparse_route [1m[126][0m[24;63H[K[24;63H300,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.00       1/1           [24mread_cfg [1m[157][0m
[4m                0.00    0.00       1/1           [24mmake_network [1m[151][0m[24;63H[K[24;63H301,52[8C24%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H2[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mis_network [1m[147][0m[24;63H[K[24;63H303,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mparse_net_options [1m[155][0m[24;63H[K[24;63H304,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/3           [24mfree_list [1m[115][0m[24;63H[K[24;63H305,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mset_train_only_bn [1m[159][0m[24;63H[K[24;63H306,52[8C24%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mget_network_output_size [1m[144][0m[24;63H[K[24;63H307,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/2           [24mget_network_output [1m[121][0m[24;63H[K[24;63H308,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/965         [24mxcalloc_location [1m[52][0m[24;63H[K[24;63H309,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mparse_upsample [1m[156][0m[24;63H[K[24;63H310,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H311,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/761         [24mtest_detector [1m[1][0m[24;63H[K[24;63H312,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.23     760/761         [24mload_image_color [1m[13][0m[24;63H[K[24;63H313,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[11]     2.1    0.00    0.23     761         load_image [11][0m[24;63H[K[24;63H314,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.07    0.16     761/761         [24mload_image_stb [1m[12][0m[24;63H[K[24;63H315,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H316,47[8C25%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.07    0.16     761/761         [24mload_image [1m[11][0m[24;63H[K[24;63H317,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[12]     2.1    0.07    0.16     761         load_image_stb [12][0m[24;63H[K[24;63H318,52[8C25%[18;52H[24;53Hk[18;52H[24;53H [17;52H[24;65H7[17;52H[24;53Hk[17;52H[24;53H [16;47H[24;65H6,47[16;47H[24;53Hk[16;47H[24;53H [15;52H[24;65H5,52[15;52H[24;53Hk[15;52H[24;53H [14;52H[24;65H4[14;52H[24;53Hk[14;52H[24;53H [13;52H[24;65H3[13;52H[24;53Hk[13;52H[24;53H [12;52H[24;65H2[12;52H[24;53Hk[12;52H[24;53H [11;52H[24;65H1[11;52H[24;53Hk[11;52H[24;53H [10;52H[24;65H0[10;52H[24;53Hk[10;52H[24;53H [9;52H[24;64H09[9;52H[24;53Hk[9;52H[24;53H [8;52H[24;65H8[8;52H[24;53Hk[8;52H[24;53H [7;52H[24;65H7[7;52H[24;53Hk[7;52H[24;53H [6;52H[24;65H6[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00      25/25          [24mfree_section [1m[80][0m[24;63H[K[24;63H305,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00      49/142         [24moption_find_float_quiet [1m[66][0m[24;63H[K[24;63H304,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00     168/557         [24moption_find_int_quiet [1m[60][0m[24;63H[K[24;63H303,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.30      13/13          [24mparse_convolutional [1m[9][0m[24;63H[K[24;63H302,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1m[10]     2.7    0.00    0.30       1         parse_network_cfg_custom [10][0m[24;63H[K[24;63H301,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.30       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H300,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H299,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00      13/13          [24mget_activation [1m[89][0m[24;63H[K[24;63H298,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00      13/23          [24moption_find_str [1m[85][0m[24;63H[K[24;63H297,52[8C25%[6;52H[24;53Hk[6;52H[24;53H [6;52H[1;23r[1;1H[L[1;24r[1;1H[4m                0.00    0.00      39/59          [24moption_find_int [1m[73][0m[24;63H[K[24;63H296,52[8C25%[6;52H[24;53Hj[6;52H[24;53H [7;52H[24;65H7[7;52H[24;53Hj[7;52H[24;53H [8;52H[24;65H8[8;52H[24;53Hj[8;52H[24;53H [9;52H[24;65H9[9;52H[24;53Hj[9;52H[24;53H [10;52H[24;63H300[10;52H[24;53Hj[10;52H[24;53H [11;52H[24;65H1[11;52H[24;53Hj[11;52H[24;53H [12;52H[24;65H2[12;52H[24;53Hj[12;52H[24;53H [13;52H[24;65H3[13;52H[24;53Hj[13;52H[24;53H [14;52H[24;65H4[14;52H[24;53Hj[14;52H[24;53H [15;52H[24;65H5[15;52H[24;53Hj[15;52H[24;53H [16;52H[24;65H6[16;52H[24;53Hj[16;52H[24;53H [17;52H[24;65H7[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H8[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/965         [24mxcalloc_location [1m[52][0m[24;63H[K[24;63H309,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/1           [24mparse_upsample [1m[156][0m[24;63H[K[24;63H310,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H311,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/761         [24mtest_detector [1m[1][0m[24;63H[K[24;63H312,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.23     760/761         [24mload_image_color [1m[13][0m[24;63H[K[24;63H313,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[11]     2.1    0.00    0.23     761         load_image [11][0m[24;63H[K[24;63H314,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.07    0.16     761/761         [24mload_image_stb [1m[12][0m[24;63H[K[24;63H315,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H316,47[8C25%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.07    0.16     761/761         [24mload_image [1m[11][0m[24;63H[K[24;63H317,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[12]     2.1    0.07    0.16     761         load_image_stb [12][0m[24;63H[K[24;63H318,52[8C25%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.16     761/761         [24mstbi_load [1m[17][0m[24;63H[K[24;63H319,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00     761/817         [24mmake_image [1m[55][0m[24;63H[K[24;63H320,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H321,47[8C26%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.23     760/760         [24mload_alphabet [1m[14][0m[24;63H[K[24;63H322,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[13]     2.1    0.00    0.23     760         load_image_color [13][0m[24;63H[K[24;63H323,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.23     760/761         [24mload_image [1m[11][0m[24;63H[K[24;63H324,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H325,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.23       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H326,47[8C26%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[14]     2.1    0.00    0.23       1         load_alphabet [14][0m[24;63H[K[24;63H327,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.23     760/760         [24mload_image_color [1m[13][0m[24;63H[K[24;63H328,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       9/965         [24mxcalloc_location [1m[52][0m[24;63H[K[24;63H329,52[8C26%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H330,47[8C26%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.17    0.00 8845488/8845488     [24mmake_convolutional_layer [1m[8][0m[24;63H[K[24;63H331,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[15]     1.5    0.17    0.00 8845488         rand_uniform [15][0m[24;63H[K[24;63H332,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H333,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.16     761/761         [24mstbi_load_from_file [1m[18][0m[24;63H[K[24;63H334,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m[16]     1.4    0.00    0.16     761         stbi__load_main [16][0m[24;63H[K[24;63H335,47[8C27%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.08    0.00     760/1102        [24mstbi__zbuild_huffman [1m[20][0m[24;63H[K[24;63H336,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.04     760/760         [24mstbi__parse_png_file [1m[24][0m[24;63H[K[24;63H337,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.01    0.02       1/1           [24mstbi__decode_jpeg_image [1m[30][0m[24;63H[K[24;63H338,47[8C27%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.01    0.00     576/576         [24mstbi__YCbCr_to_RGB_row [1m[37][0m[24;63H[K[24;63H339,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00    1152/1152        [24mstbi__resample_row_v_2 [1m[51][0m[24;63H[K[24;63H340,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00     761/9955        [24mstbi__get8 [1m[48][0m[24;63H[K[24;63H341,52[8C27%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00     576/576         [24mresample_row_1 [1m[59][0m[24;63H[K[24;63H342,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H343,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.16     761/761         [24mload_image_stb [1m[12][0m[24;63H[K[24;63H344,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[17]     1.4    0.00    0.16     761         stbi_load [17][0m[24;63H[K[24;63H345,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.16     761/761         [24mstbi_load_from_file [1m[18][0m[24;63H[K[24;63H346,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H347,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.16     761/761         [24mstbi_load [1m[17][0m[24;63H[K[24;63H348,47[8C28%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[18]     1.4    0.00    0.16     761         stbi_load_from_file [18][0m[24;63H[K[24;63H349,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.16     761/761         [24mstbi__load_main [1m[16][0m[24;63H[K[24;63H350,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00     761/4397        [24mstbi__stdio_read [1m[49][0m[24;63H[K[24;63H351,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H352,47[8C28%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.13    0.00       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H353,52[8C28%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[19]     1.2    0.13    0.00       1         fuse_conv_batchnorm [19][0m[24;63H[K[24;63H354,52[8C29%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.00      11/11          [24mfree_convolutional_batchnorm [1m[99[23;1H8][0m[24;63H[K[24;63H355,52[8C29%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H6[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H357,47[8C29%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                               27648             [24mstbi__zbuild_huffman [1m[20][0m[24;63H[K[24;63H358,52[8C29%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/1102        [24mstbi_write_jpg [1m[43][0m[24;63H[K[24;63H359,52[8C29%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.03    0.00     340/1102        [24mstbi__compute_huffman_codes [1m[288[23;1H][0m[24;63H[K[24;63H360,52[8C29%[17;52H[24;53Hj[17;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.08    0.00     760/1102        [24mstbi__load_main [1m[16][0m[24;63H[K[24;63H361,47[8C29%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[20]     1.0    0.11    0.00    1102+27648   stbi__zbuild_huffman [20][0m[24;63H[K[24;63H362,52[8C29%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00  211844/232134      [24mstbi__stdio_write [1m[44][0m[24;63H[K[24;63H363,52[8C29%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.00   74570/74570       [24mstbiw__jpg_writeBits [1m[45][0m
[4m                               27648             [24mstbi__zbuild_huffman [1m[20][0m[24;63H[K[24;63H364,52[8C30%[17;52H[24;53Hj[17;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H365,52[8C30%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.11    0.00       9/9           [24mforward_convolutional_layer [1m[5][0m[24;63H[K[24;63H366,52[8C30%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[21]     1.0    0.11    0.00       9         im2col_cpu_ext [21][0m[24;63H[K[24;63H367,52[8C30%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H368,52[8C30%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.10       6/6           [24mforward_network [1m[3][0m[24;63H[K[24;63H369,52[8C30%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m[22]     0.9    0.00    0.10       6         forward_maxpool_layer [22][0m[24;63H[K[24;63H370,47[8C30%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.10    0.00       6/6           [24mforward_maxpool_layer_avx [1m[23][0m[24;63H[K[24;63H371,52[8C30%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H372,52[8C30%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.10    0.00       6/6           [24mforward_maxpool_layer [1m[22][0m[24;63H[K[24;63H373,47[8C30%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[23]     0.9    0.10    0.00       6         forward_maxpool_layer_avx [23][0m[24;63H[K[24;63H374,52[8C30%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H375,52[8C31%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.04     760/760         [24mstbi__load_main [1m[16]
[24]     0.4    0.00    0.04     760         stbi__parse_png_file [24][0m[24;63H[K[24;63H376,52[8C31%[17;52H[24;53Hj[17;52H[24;53H [18;47H[24;65H7,47[18;47H[24;53Hj[18;47H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.04     760/760         [24mstbi_zlib_decode_malloc_guesssii[23;1Hze_headerflag [1m[26][0m[24;63H[K[24;63H378,52[8C31%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H9[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00     760/14585       [24mstbi__decode_jpeg_header [1m[35][0m[24;63H[K[24;63H380,47[8C31%[18;47H[24;53Hj[18;47H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.00   23560/23560       [24mstbi__get32be [1m[46][0m
[4m                0.00    0.00    9120/9955        [24mstbi__get8 [1m[48][0m[24;63H[K[24;63H381,52[8C31%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H2[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.00     760/760         [24mstbi__getn [1m[57][0m
[4m                0.00    0.00     221/225         [24mstbi__stdio_skip [1m[64][0m[24;63H[K[24;63H383,52[8C31%[17;52H[24;53Hj[17;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H384,52[8C31%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.01    0.03     760/760         [24mstbi_zlib_decode_malloc_guesssii[23;1Hze_headerflag [1m[26][0m[24;63H[K[24;63H385,52[8C31%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H6[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[25]     0.4    0.01    0.03     760         stbi__parse_zlib [25][0m[24;63H[K[24;63H387,52[8C31%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.03     170/170         [24mstbi__compute_huffman_codes [1m[288[23;1H][0m[24;63H[K[24;63H388,52[8C32%[17;52H[24;53Hj[17;52H[24;53H [18;47H[24;65H9,47[18;47H[24;53Hj[18;47H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[1m-----------------------------------------------[0m
[4m                0.00    0.04     760/760         [24mstbi__parse_png_file [1m[24][0m[24;63H[K[24;63H390,52[8C32%[17;52H[24;53Hj[17;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[1m[26]     0.4    0.00    0.04     760         stbi_zlib_decode_malloc_guesssize_hh[23;1Headerflag [26][0m[24;63H[K[24;63H391,52[8C32%[17;52H[24;53Hj[17;52H[24;53H [17;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.01    0.03     760/760         [24mstbi__parse_zlib [1m[25][0m[24;63H[K[24;63H392,52[8C32%[17;52H[24;53Hj[17;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H393,47[8C32%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.04    0.00       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H394,52[8C32%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[1m[27]     0.4    0.04    0.00       1         resize_image [27][0m
[4m                0.00    0.00       2/817         [24mmake_image [1m[55][0m[24;63H[K[24;63H395,52[8C32%[17;52H[24;53Hj[17;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       1/825         [24mfree_image [1m[53][0m[24;63H[K[24;63H396,52[8C32%[18;52H[24;53Hj[18;52H[24;53H [17;47H[1;23r[1;1H[2M[1;24r[22;1H[1m-----------------------------------------------[0m
[4m                0.00    0.03     170/170         [24mstbi__parse_zlib [1m[25][0m[24;63H[K[24;63H397,47[8C33%[17;47H[24;53Hj[17;47H[24;53H [18;52H[24;65H8,52[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[28]     0.3    0.00    0.03     170         stbi__compute_huffman_codes [28][0m[24;63H[K[24;63H399,52[8C33%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.03    0.00     340/1102        [24mstbi__zbuild_huffman [1m[20][0m[24;63H[K[24;63H400,52[8C33%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H401,52[8C33%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[4m                0.03    0.00      13/13          [24mforward_convolutional_layer [1m[5][0m[24;63H[K[24;63H402,47[8C33%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[29]     0.3    0.03    0.00      13         add_bias [29][0m[24;63H[K[24;63H403,52[8C33%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H404,52[8C33%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.01    0.02       1/1           [24mstbi__load_main [1m[16]
[30]     0.3    0.01    0.02       1         stbi__decode_jpeg_image [30][0m[24;63H[K[24;63H405,52[8C33%[17;52H[24;53Hj[17;52H[24;53H [18;47H[24;65H6,47[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.01    0.00   13824/13824       [24mstbi__idct_block [1m[36][0m[24;63H[K[24;63H407,52[8C33%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.01    0.00   13825/14585       [24mstbi__decode_jpeg_header [1m[35][0m
[4m                0.00    0.00   13824/13824       [24mstbi__jpeg_huff_decode [1m[47][0m[24;63H[K[24;63H408,52[8C33%[17;52H[24;53Hj[17;52H[24;53H [18;47H[24;65H9,47[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00    2511/2641        [24mstbi__grow_buffer_unsafe [1m[50][0m[24;63H[K[24;63H410,52[8C33%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00      19/9955        [24mstbi__get8 [1m[48][0m[24;63H[K[24;63H411,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [17;52H[1;23r[1;1H[2M[1;24r[22;1H[4m                0.00    0.00       7/11          [24mstbi__process_marker [1m[99][0m
[4m                0.00    0.00       1/16          [24mstbi__get16be [1m[86][0m[24;63H[K[24;63H412,52[8C34%[17;52H[24;53Hj[17;52H[24;53H [18;52H[24;65H3[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H414,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.01       1/2           [24mshow_image [1m[34][0m[24;63H[K[24;63H415,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.01       1/2           [24mtest_detector [1m[1][0m[24;63H[K[24;63H416,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[31]     0.2    0.00    0.02       2         save_image [31][0m[24;63H[K[24;63H417,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.02    0.00       2/2           [24msave_image_options [1m[32][0m[24;63H[K[24;63H418,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H419,47[8C34%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.02    0.00       2/2           [24msave_image [1m[31][0m[24;63H[K[24;63H420,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[32]     0.2    0.02    0.00       2         save_image_options [32][0m[24;63H[K[24;63H421,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/2           [24mstbi_write_jpg [1m[43][0m[24;63H[K[24;63H422,52[8C34%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.00       2/965         [24mxcalloc_location [1m[52][0m[24;63H[K[24;63H423,52[8C35%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H424,47[8C35%[18;47H[24;53Hj[18;47H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.02    0.00      13/13          [24mforward_convolutional_layer [1m[5][0m[24;63H[K[24;63H425,52[8C35%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m[33]     0.2    0.02    0.00      13         activate_array_cpu_custom [33][0m[24;63H[K[24;63H426,52[8C35%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[1m-----------------------------------------------[0m[24;63H[K[24;63H427,52[8C35%[18;52H[24;53Hj[18;52H[24;53H [18;52H[1;23r[23;1H
[1;24r[23;1H[4m                0.00    0.01       1/1           [24mtest_detector [1m[1][0m[24;63H[K[24;63H428,52[8C35%[18;52H[24;53Hj[18;52H[24;53H [18;47H[1;23r[23;1H
[1;24r[23;1H[1m[34]     0.1    0.00    0.01       1         show_image [34][0m[24;63H[K[24;63H429,47[8C35%[18;47H[24;53H:[18;47H[24;53H[K[24;1H:q[24;1H[K[24;1Hultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ 
ultra96@EE382N4:~/darknet$ ls
3rdparty		darknet_video.py       predictions.jpg
backup			data		       README.md
build			gmon.out	       results
build.ps1		image_yolov3.sh        scripts
cfg			image_yolov4.sh        src
cmake			include		       trash
CMakeLists.txt		json_mjpeg_streams.sh  vcpkg.json
darknet			LICENSE		       video_yolov3.sh
DarknetConfig.cmake.in	Makefile	       video_yolov4.sh
darknet_images.py	net_cam_v3.sh	       yolov3-tiny.weights
darknet.perf		net_cam_v4.sh
darknet.py		obj
ultra96@EE382N4:~/darknet$ lsvim darknet.perf gprof darknet gmon.out > darknet.perf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[20Pvim darknet.perf ls[K[Kls
3rdparty		darknet_video.py       predictions.jpg
backup			data		       README.md
build			gmon.out	       results
build.ps1		image_yolov3.sh        scripts
cfg			image_yolov4.sh        src
cmake			include		       trash
CMakeLists.txt		json_mjpeg_streams.sh  vcpkg.json
darknet			LICENSE		       video_yolov3.sh
DarknetConfig.cmake.in	Makefile	       video_yolov4.sh
darknet_images.py	net_cam_v3.sh	       yolov3-tiny.weights
darknet.perf		net_cam_v4.sh
darknet.py		obj
ultra96@EE382N4:~/darknet$ grep -re float
Binary file darknet matches
src/batchnorm_layer.c:    layer.output = (float*)xcalloc(h * w * c * batch, sizeof(float));
src/batchnorm_layer.c:    layer.delta = (float*)xcalloc(h * w * c * batch, sizeof(float));
src/batchnorm_layer.c:    layer.biases = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.bias_updates = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.scales = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.scale_updates = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.mean = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.variance = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.rolling_mean = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.rolling_variance = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.mean_delta = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.variance_delta = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.x = (float*)xcalloc(layer.batch*layer.outputs, sizeof(float));
src/batchnorm_layer.c:    layer.x_norm = (float*)xcalloc(layer.batch*layer.outputs, sizeof(float));
src/batchnorm_layer.c:void backward_scale_cpu(float *x_norm, float *delta, int batch, int n, int size, float *scale_updates)
src/batchnorm_layer.c:        float sum = 0;
src/batchnorm_layer.c:void mean_delta_cpu(float *delta, float *variance, int batch, int filters, int spatial, float *mean_delta)
src/batchnorm_layer.c:void  variance_delta_cpu(float *x, float *delta, float *mean, float *variance, int batch, int filters, int spatial, float *variance_delta)
src/batchnorm_layer.c:        variance_delta[i] *= -.5 * pow(variance[i] + .00001f, (float)(-3./2.));
src/batchnorm_layer.c:void normalize_delta_cpu(float *x, float *mean, float *variance, float *mean_delta, float *variance_delta, int batch, int filters, int spatial, float *delta)
src/batchnorm_layer.c:    l->output = (float*)realloc(l->output, output_size * sizeof(float));
src/batchnorm_layer.c:    l->delta = (float*)realloc(l->delta, output_size * sizeof(float));
src/batchnorm_layer.c:void update_batchnorm_layer(layer l, int batch, float learning_rate, float momentum, float decay)
src/batchnorm_layer.c:            const float alpha = 0.01;
src/batchnorm_layer.c:            float one = 1;
src/batchnorm_layer.c:            float zero = 0;
src/batchnorm_layer.c:    float one = 1;
src/batchnorm_layer.c:    float zero = 0;
src/batchnorm_layer.c:void update_batchnorm_layer_gpu(layer l, int batch, float learning_rate_init, float momentum, float decay, float loss_scale)
src/batchnorm_layer.c:    float learning_rate = learning_rate_init * l.learning_rate_scale / loss_scale;
src/batchnorm_layer.c:    //float momentum = a.momentum;
src/batchnorm_layer.c:    //float decay = a.decay;
src/parser.c:void parse_data(char *data, float *a, int n)
src/parser.c:    int assisted_excitation = option_find_float_quiet(options, "assisted_excitation", 0);
src/parser.c:    layer.dot = option_find_float_quiet(options, "dot", 0);
src/parser.c:    layer.angle = option_find_float_quiet(options, "angle", 15);
src/parser.c:    layer.reverse = option_find_float_quiet(options, "reverse", 0);
src/parser.c:    l.time_normalizer = option_find_float_quiet(options, "time_normalizer", 1.0);
src/parser.c:	layer.temperature = option_find_float_quiet(options, "temperature", 1);
src/parser.c:	layer.spatial = option_find_float_quiet(options, "spatial", 0);
src/parser.c:    layer.temperature = option_find_float_quiet(options, "temperature", 1);
src/parser.c:    layer.cls_normalizer = option_find_float_quiet(options, "cls_normalizer", 1);
src/parser.c:    layer.max_delta = option_find_float_quiet(options, "max_delta", FLT_MAX);   // set 10
src/parser.c:float *get_classes_multipliers(char *cpc, const int classes, const float max_delta)
src/parser.c:    float *classes_multipliers = NULL;
src/parser.c:        float max_counter = 0;
src/parser.c:        classes_multipliers = (float *)calloc(classes_counters, sizeof(float));
src/parser.c:    l.max_delta = option_find_float_quiet(options, "max_delta", FLT_MAX);   // set 10
src/parser.c:    l.label_smooth_eps = option_find_float_quiet(options, "label_smooth_eps", 0.0f);
src/parser.c:    l.scale_x_y = option_find_float_quiet(options, "scale_x_y", 1);
src/parser.c:    l.iou_normalizer = option_find_float_quiet(options, "iou_normalizer", 0.75);
src/parser.c:    l.obj_normalizer = option_find_float_quiet(options, "obj_normalizer", 1);
src/parser.c:    l.cls_normalizer = option_find_float_quiet(options, "cls_normalizer", 1);
src/parser.c:    l.delta_normalizer = option_find_float_quiet(options, "delta_normalizer", 1);
src/parser.c:    l.beta_nms = option_find_float_quiet(options, "beta_nms", 0.6);
src/parser.c:    l.jitter = option_find_float(options, "jitter", .2);
src/parser.c:    l.resize = option_find_float_quiet(options, "resize", 1.0);
src/parser.c:    l.ignore_thresh = option_find_float(options, "ignore_thresh", .5);
src/parser.c:    l.truth_thresh = option_find_float(options, "truth_thresh", 1);
src/parser.c:    l.iou_thresh = option_find_float_quiet(options, "iou_thresh", 1); // recommended to use iou_thresh=0.213 in [yolo]
src/parser.c:    l.random = option_find_float_quiet(options, "random", 0);
src/parser.c:    l.track_ciou_norm = option_find_float_quiet(options, "track_ciou_norm", 0.01);
src/parser.c:        l.embedding_output = (float*)xcalloc(le.batch * le.outputs, sizeof(float));
src/parser.c:            float bias = atof(a);
src/parser.c:    l.max_delta = option_find_float_quiet(options, "max_delta", FLT_MAX);   // set 10
src/parser.c:    l.label_smooth_eps = option_find_float_quiet(options, "label_smooth_eps", 0.0f);
src/parser.c:    l.scale_x_y = option_find_float_quiet(options, "scale_x_y", 1);
src/parser.c:    l.uc_normalizer = option_find_float_quiet(options, "uc_normalizer", 1.0);
src/parser.c:    l.iou_normalizer = option_find_float_quiet(options, "iou_normalizer", 0.75);
src/parser.c:    l.obj_normalizer = option_find_float_quiet(options, "obj_normalizer", 1.0);
src/parser.c:    l.cls_normalizer = option_find_float_quiet(options, "cls_normalizer", 1);
src/parser.c:    l.delta_normalizer = option_find_float_quiet(options, "delta_normalizer", 1);
src/parser.c:    l.beta_nms = option_find_float_quiet(options, "beta_nms", 0.6);
src/parser.c:    l.jitter = option_find_float(options, "jitter", .2);
src/parser.c:    l.resize = option_find_float_quiet(options, "resize", 1.0);
src/parser.c:    l.ignore_thresh = option_find_float(options, "ignore_thresh", .5);
src/parser.c:    l.truth_thresh = option_find_float(options, "truth_thresh", 1);
src/parser.c:    l.iou_thresh = option_find_float_quiet(options, "iou_thresh", 1); // recommended to use iou_thresh=0.213 in [yolo]
src/parser.c:    l.random = option_find_float_quiet(options, "random", 0);
src/parser.c:            float bias = atof(a);
src/parser.c:    l.jitter = option_find_float(options, "jitter", .2);
src/parser.c:    l.resize = option_find_float_quiet(options, "resize", 1.0);
src/parser.c:    l.thresh = option_find_float(options, "thresh", .5);
src/parser.c:    l.random = option_find_float_quiet(options, "random", 0);
src/parser.c:    l.coord_scale = option_find_float(options, "coord_scale", 1);
src/parser.c:    l.object_scale = option_find_float(options, "object_scale", 1);
src/parser.c:    l.noobject_scale = option_find_float(options, "noobject_scale", 1);
src/parser.c:    l.mask_scale = option_find_float(options, "mask_scale", 1);
src/parser.c:    l.class_scale = option_find_float(options, "class_scale", 1);
src/parser.c:            float bias = atof(a);
src/parser.c:    layer.coord_scale = option_find_float(options, "coord_scale", 1);
src/parser.c:    layer.object_scale = option_find_float(options, "object_scale", 1);
src/parser.c:    layer.noobject_scale = option_find_float(options, "noobject_scale", 1);
src/parser.c:    layer.class_scale = option_find_float(options, "class_scale", 1);
src/parser.c:    layer.jitter = option_find_float(options, "jitter", .2);
src/parser.c:    layer.resize = option_find_float_quiet(options, "resize", 1.0);
src/parser.c:    layer.random = option_find_float_quiet(options, "random", 0);
src/parser.c:    float scale = option_find_float_quiet(options, "scale",1);
src/parser.c:    layer.ratio =  option_find_float_quiet(options, "ratio",0);
src/parser.c:    float angle = option_find_float(options, "angle",0);
src/parser.c:    float saturation = option_find_float(options, "saturation",1);
src/parser.c:    float exposure = option_find_float(options, "exposure",1);
src/parser.c:    l.shift = option_find_float(options, "shift", 0);
src/parser.c:    float probability = option_find_float(options, "probability", .2);
src/parser.c:    float dropblock_size_rel = option_find_float_quiet(options, "dropblock_size_rel", 0);
src/parser.c:    int dropblock_size_abs = option_find_float_quiet(options, "dropblock_size_abs", 0);
src/parser.c:    float alpha = option_find_float(options, "alpha", .0001);
src/parser.c:    float beta =  option_find_float(options, "beta" , .75);
src/parser.c:    float kappa = option_find_float(options, "kappa", 1);
src/parser.c:    float **layers_output = (float **)calloc(n, sizeof(float *));
src/parser.c:    float **layers_delta = (float **)calloc(n, sizeof(float *));
src/parser.c:    float **layers_output_gpu = (float **)calloc(n, sizeof(float *));
src/parser.c:    float **layers_delta_gpu = (float **)calloc(n, sizeof(float *));
src/parser.c:    float mean_init = option_find_float(options, "mean", 0.0);
src/parser.c:    float std_init = option_find_float(options, "std", 0.2);
src/parser.c:    l.scale = option_find_float_quiet(options, "scale", 1);
src/parser.c:    net->learning_rate = option_find_float(options, "learning_rate", .001);
src/parser.c:    net->learning_rate_min = option_find_float_quiet(options, "learning_rate_min", .00001);
src/parser.c:    net->momentum = option_find_float(options, "momentum", .9);
src/parser.c:    net->decay = option_find_float(options, "decay", .0001);
src/parser.c:    net->badlabels_rejection_percentage = option_find_float_quiet(options, "badlabels_rejection_percentage", 0);
src/parser.c:    net->num_sigmas_reject_badlabels = option_find_float_quiet(options, "num_sigmas_reject_badlabels", 0);
src/parser.c:    net->ema_alpha = option_find_float_quiet(options, "ema_alpha", 0);
src/parser.c:    net->loss_scale = option_find_float_quiet(options, "loss_scale", 1);
src/parser.c:    net->workspace_size_limit = (size_t)1024*1024 * option_find_float_quiet(options, "workspace_size_limit_MB", 1024);  // 1024 MB by default
src/parser.c:        net->B1 = option_find_float(options, "B1", .9);
src/parser.c:        net->B2 = option_find_float(options, "B2", .999);
src/parser.c:        net->eps = option_find_float(options, "eps", .000001);
src/parser.c:    net->label_smooth_eps = option_find_float_quiet(options, "label_smooth_eps", 0.0f);
src/parser.c:    net->resize_step = option_find_float_quiet(options, "resize_step", 32);
src/parser.c:    net->adversarial_lr = option_find_float_quiet(options, "adversarial_lr", 0);
src/parser.c:    net->max_chart_loss = option_find_float_quiet(options, "max_chart_loss", 20.0);
src/parser.c:    net->angle = option_find_float_quiet(options, "angle", 0);
src/parser.c:    net->aspect = option_find_float_quiet(options, "aspect", 1);
src/parser.c:    net->saturation = option_find_float_quiet(options, "saturation", 1);
src/parser.c:    net->exposure = option_find_float_quiet(options, "exposure", 1);
src/parser.c:    net->hue = option_find_float_quiet(options, "hue", 0);
src/parser.c:    net->power = option_find_float_quiet(options, "power", 4);
src/parser.c:        net->scale = option_find_float(options, "scale", 1);
src/parser.c:            float* scales = (float*)xcalloc(n, sizeof(float));
src/parser.c:            float* seq_scales = (float*)xcalloc(n, sizeof(float));
src/parser.c:                float scale = 1.0;
src/parser.c:                float sequence_scale = 1.0;
src/parser.c:        net->gamma = option_find_float(options, "gamma", 1);
src/parser.c:        net->gamma = option_find_float(options, "gamma", 1);
src/parser.c:        //net->power = option_find_float(options, "power", 1);
src/parser.c:    float bflops = 0;
src/parser.c:    const int show_receptive_field = option_find_float_quiet(options, "show_receptive_field", 0);
src/parser.c:        l.clip = option_find_float_quiet(options, "clip", 0);
src/parser.c:        l.learning_rate_scale = option_find_float_quiet(options, "learning_rate", 1);
src/parser.c:                    net.layers[k].delta = (float*)xcalloc(l.outputs*l.batch, sizeof(float));
src/parser.c:                    net.layers[k].delta_gpu = (float *)cuda_make_array(NULL, l.outputs*l.batch);
src/parser.c:                    net.global_delta_gpu = (float *)cuda_make_array(NULL, net.max_delta_gpu_size);
src/parser.c:                    net.state_delta_gpu = (float *)cuda_make_array(NULL, net.max_delta_gpu_size);
src/parser.c:                if (!l.delta_gpu) l.delta_gpu = (float *)cuda_make_array(NULL, l.outputs*l.batch);
src/parser.c:        if (cudaSuccess == cudaHostAlloc(&net.input_pinned_cpu, size * sizeof(float), cudaHostRegisterMapped)) net.input_pinned_cpu_flag = 1;
src/parser.c:            net.input_pinned_cpu = (float*)xcalloc(size, sizeof(float));
src/parser.c:            fprintf(stderr, " Allocate additional workspace_size = %1.2f MB \n", (float)workspace_size/1000000);
src/parser.c:            net.workspace = cuda_make_array(0, workspace_size / sizeof(float) + 1);
src/parser.c:            net.workspace = (float*)xcalloc(1, workspace_size);
src/parser.c:            net.workspace = (float*)xcalloc(1, workspace_size);
src/parser.c:    fwrite(l.biases, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.scales, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:        float mean = l.binary_weights[i*size];
src/parser.c:        fwrite(&mean, sizeof(float), 1, fp);
src/parser.c:    fwrite(l.weights, sizeof(float), num, fp);
src/parser.c:    fwrite(l.weights, sizeof(float), num, fp);
src/parser.c:    fwrite(l.biases, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.scales, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:    fwrite(l.weights, sizeof(float), num, fp);
src/parser.c:    //    fwrite(l.m, sizeof(float), num, fp);
src/parser.c:    //    fwrite(l.v, sizeof(float), num, fp);
src/parser.c:    fwrite(l.biases_ema, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.scales_ema, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:    fwrite(l.weights_ema, sizeof(float), num, fp);
src/parser.c:    //    fwrite(l.m, sizeof(float), num, fp);
src/parser.c:    //    fwrite(l.v, sizeof(float), num, fp);
src/parser.c:    fwrite(l.biases, sizeof(float), l.c, fp);
src/parser.c:    fwrite(l.scales, sizeof(float), l.c, fp);
src/parser.c:    fwrite(l.rolling_mean, sizeof(float), l.c, fp);
src/parser.c:    fwrite(l.rolling_variance, sizeof(float), l.c, fp);
src/parser.c:    fwrite(l.biases, sizeof(float), l.outputs, fp);
src/parser.c:    fwrite(l.weights, sizeof(float), l.outputs*l.inputs, fp);
src/parser.c:        fwrite(l.scales, sizeof(float), l.outputs, fp);
src/parser.c:        fwrite(l.rolling_mean, sizeof(float), l.outputs, fp);
src/parser.c:        fwrite(l.rolling_variance, sizeof(float), l.outputs, fp);
src/parser.c:            fwrite(l.biases, sizeof(float), l.outputs, fp);
src/parser.c:            fwrite(l.weights, sizeof(float), size, fp);
src/parser.c:void transpose_matrix(float *a, int rows, int cols)
src/parser.c:    float* transpose = (float*)xcalloc(rows * cols, sizeof(float));
src/parser.c:    memcpy(a, transpose, rows*cols*sizeof(float));
src/parser.c:    fread(l.biases, sizeof(float), l.outputs, fp);
src/parser.c:    fread(l.weights, sizeof(float), l.outputs*l.inputs, fp);
src/parser.c:        fread(l.scales, sizeof(float), l.outputs, fp);
src/parser.c:        fread(l.rolling_mean, sizeof(float), l.outputs, fp);
src/parser.c:        fread(l.rolling_variance, sizeof(float), l.outputs, fp);
src/parser.c:    fread(l.biases, sizeof(float), l.c, fp);
src/parser.c:    fread(l.scales, sizeof(float), l.c, fp);
src/parser.c:    fread(l.rolling_mean, sizeof(float), l.c, fp);
src/parser.c:    fread(l.rolling_variance, sizeof(float), l.c, fp);
src/parser.c:    fread(l.biases, sizeof(float), l.n, fp);
src/parser.c:        fread(l.scales, sizeof(float), l.n, fp);
src/parser.c:        fread(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        fread(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:        float mean = 0;
src/parser.c:        fread(&mean, sizeof(float), 1, fp);
src/parser.c:    read_bytes = fread(l.biases, sizeof(float), l.n, fp);
src/parser.c:    //fread(l.weights, sizeof(float), num, fp); // as in connected layer
src/parser.c:        read_bytes = fread(l.scales, sizeof(float), l.n, fp);
src/parser.c:        read_bytes = fread(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        read_bytes = fread(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:    read_bytes = fread(l.weights, sizeof(float), num, fp);
src/^C
ultra96@EE382N4:~/darknet$ grep -re float[C[C[C[C[C[C[1@w
src/batchnorm_layer.c:    layer.output = (float*)xcalloc(h * w * c * batch, sizeof(float));
src/batchnorm_layer.c:    layer.delta = (float*)xcalloc(h * w * c * batch, sizeof(float));
src/batchnorm_layer.c:    layer.biases = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.bias_updates = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.scales = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.scale_updates = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.mean = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.variance = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.rolling_mean = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.rolling_variance = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.mean_delta = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.variance_delta = (float*)xcalloc(c, sizeof(float));
src/batchnorm_layer.c:    layer.x = (float*)xcalloc(layer.batch*layer.outputs, sizeof(float));
src/batchnorm_layer.c:    layer.x_norm = (float*)xcalloc(layer.batch*layer.outputs, sizeof(float));
src/batchnorm_layer.c:void backward_scale_cpu(float *x_norm, float *delta, int batch, int n, int size, float *scale_updates)
src/batchnorm_layer.c:        float sum = 0;
src/batchnorm_layer.c:void mean_delta_cpu(float *delta, float *variance, int batch, int filters, int spatial, float *mean_delta)
src/batchnorm_layer.c:void  variance_delta_cpu(float *x, float *delta, float *mean, float *variance, int batch, int filters, int spatial, float *variance_delta)
src/batchnorm_layer.c:        variance_delta[i] *= -.5 * pow(variance[i] + .00001f, (float)(-3./2.));
src/batchnorm_layer.c:void normalize_delta_cpu(float *x, float *mean, float *variance, float *mean_delta, float *variance_delta, int batch, int filters, int spatial, float *delta)
src/batchnorm_layer.c:    l->output = (float*)realloc(l->output, output_size * sizeof(float));
src/batchnorm_layer.c:    l->delta = (float*)realloc(l->delta, output_size * sizeof(float));
src/batchnorm_layer.c:void update_batchnorm_layer(layer l, int batch, float learning_rate, float momentum, float decay)
src/batchnorm_layer.c:            const float alpha = 0.01;
src/batchnorm_layer.c:            float one = 1;
src/batchnorm_layer.c:            float zero = 0;
src/batchnorm_layer.c:    float one = 1;
src/batchnorm_layer.c:    float zero = 0;
src/batchnorm_layer.c:void update_batchnorm_layer_gpu(layer l, int batch, float learning_rate_init, float momentum, float decay, float loss_scale)
src/batchnorm_layer.c:    float learning_rate = learning_rate_init * l.learning_rate_scale / loss_scale;
src/batchnorm_layer.c:    //float momentum = a.momentum;
src/batchnorm_layer.c:    //float decay = a.decay;
src/parser.c:void parse_data(char *data, float *a, int n)
src/parser.c:float *get_classes_multipliers(char *cpc, const int classes, const float max_delta)
src/parser.c:    float *classes_multipliers = NULL;
src/parser.c:        float max_counter = 0;
src/parser.c:        classes_multipliers = (float *)calloc(classes_counters, sizeof(float));
src/parser.c:        l.embedding_output = (float*)xcalloc(le.batch * le.outputs, sizeof(float));
src/parser.c:            float bias = atof(a);
src/parser.c:            float bias = atof(a);
src/parser.c:            float bias = atof(a);
src/parser.c:    float scale = option_find_float_quiet(options, "scale",1);
src/parser.c:    float angle = option_find_float(options, "angle",0);
src/parser.c:    float saturation = option_find_float(options, "saturation",1);
src/parser.c:    float exposure = option_find_float(options, "exposure",1);
src/parser.c:    float probability = option_find_float(options, "probability", .2);
src/parser.c:    float dropblock_size_rel = option_find_float_quiet(options, "dropblock_size_rel", 0);
src/parser.c:    float alpha = option_find_float(options, "alpha", .0001);
src/parser.c:    float beta =  option_find_float(options, "beta" , .75);
src/parser.c:    float kappa = option_find_float(options, "kappa", 1);
src/parser.c:    float **layers_output = (float **)calloc(n, sizeof(float *));
src/parser.c:    float **layers_delta = (float **)calloc(n, sizeof(float *));
src/parser.c:    float **layers_output_gpu = (float **)calloc(n, sizeof(float *));
src/parser.c:    float **layers_delta_gpu = (float **)calloc(n, sizeof(float *));
src/parser.c:    float mean_init = option_find_float(options, "mean", 0.0);
src/parser.c:    float std_init = option_find_float(options, "std", 0.2);
src/parser.c:            float* scales = (float*)xcalloc(n, sizeof(float));
src/parser.c:            float* seq_scales = (float*)xcalloc(n, sizeof(float));
src/parser.c:                float scale = 1.0;
src/parser.c:                float sequence_scale = 1.0;
src/parser.c:    float bflops = 0;
src/parser.c:                    net.layers[k].delta = (float*)xcalloc(l.outputs*l.batch, sizeof(float));
src/parser.c:                    net.layers[k].delta_gpu = (float *)cuda_make_array(NULL, l.outputs*l.batch);
src/parser.c:                    net.global_delta_gpu = (float *)cuda_make_array(NULL, net.max_delta_gpu_size);
src/parser.c:                    net.state_delta_gpu = (float *)cuda_make_array(NULL, net.max_delta_gpu_size);
src/parser.c:                if (!l.delta_gpu) l.delta_gpu = (float *)cuda_make_array(NULL, l.outputs*l.batch);
src/parser.c:        if (cudaSuccess == cudaHostAlloc(&net.input_pinned_cpu, size * sizeof(float), cudaHostRegisterMapped)) net.input_pinned_cpu_flag = 1;
src/parser.c:            net.input_pinned_cpu = (float*)xcalloc(size, sizeof(float));
src/parser.c:            fprintf(stderr, " Allocate additional workspace_size = %1.2f MB \n", (float)workspace_size/1000000);
src/parser.c:            net.workspace = cuda_make_array(0, workspace_size / sizeof(float) + 1);
src/parser.c:            net.workspace = (float*)xcalloc(1, workspace_size);
src/parser.c:            net.workspace = (float*)xcalloc(1, workspace_size);
src/parser.c:    fwrite(l.biases, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.scales, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:        float mean = l.binary_weights[i*size];
src/parser.c:        fwrite(&mean, sizeof(float), 1, fp);
src/parser.c:    fwrite(l.weights, sizeof(float), num, fp);
src/parser.c:    fwrite(l.weights, sizeof(float), num, fp);
src/parser.c:    fwrite(l.biases, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.scales, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:    fwrite(l.weights, sizeof(float), num, fp);
src/parser.c:    //    fwrite(l.m, sizeof(float), num, fp);
src/parser.c:    //    fwrite(l.v, sizeof(float), num, fp);
src/parser.c:    fwrite(l.biases_ema, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.scales_ema, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        fwrite(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:    fwrite(l.weights_ema, sizeof(float), num, fp);
src/parser.c:    //    fwrite(l.m, sizeof(float), num, fp);
src/parser.c:    //    fwrite(l.v, sizeof(float), num, fp);
src/parser.c:    fwrite(l.biases, sizeof(float), l.c, fp);
src/parser.c:    fwrite(l.scales, sizeof(float), l.c, fp);
src/parser.c:    fwrite(l.rolling_mean, sizeof(float), l.c, fp);
src/parser.c:    fwrite(l.rolling_variance, sizeof(float), l.c, fp);
src/parser.c:    fwrite(l.biases, sizeof(float), l.outputs, fp);
src/parser.c:    fwrite(l.weights, sizeof(float), l.outputs*l.inputs, fp);
src/parser.c:        fwrite(l.scales, sizeof(float), l.outputs, fp);
src/parser.c:        fwrite(l.rolling_mean, sizeof(float), l.outputs, fp);
src/parser.c:        fwrite(l.rolling_variance, sizeof(float), l.outputs, fp);
src/parser.c:            fwrite(l.biases, sizeof(float), l.outputs, fp);
src/parser.c:            fwrite(l.weights, sizeof(float), size, fp);
src/parser.c:void transpose_matrix(float *a, int rows, int cols)
src/parser.c:    float* transpose = (float*)xcalloc(rows * cols, sizeof(float));
src/parser.c:    memcpy(a, transpose, rows*cols*sizeof(float));
src/parser.c:    fread(l.biases, sizeof(float), l.outputs, fp);
src/parser.c:    fread(l.weights, sizeof(float), l.outputs*l.inputs, fp);
src/parser.c:        fread(l.scales, sizeof(float), l.outputs, fp);
src/parser.c:        fread(l.rolling_mean, sizeof(float), l.outputs, fp);
src/parser.c:        fread(l.rolling_variance, sizeof(float), l.outputs, fp);
src/parser.c:    fread(l.biases, sizeof(float), l.c, fp);
src/parser.c:    fread(l.scales, sizeof(float), l.c, fp);
src/parser.c:    fread(l.rolling_mean, sizeof(float), l.c, fp);
src/parser.c:    fread(l.rolling_variance, sizeof(float), l.c, fp);
src/parser.c:    fread(l.biases, sizeof(float), l.n, fp);
src/parser.c:        fread(l.scales, sizeof(float), l.n, fp);
src/parser.c:        fread(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        fread(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:        float mean = 0;
src/parser.c:        fread(&mean, sizeof(float), 1, fp);
src/parser.c:    read_bytes = fread(l.biases, sizeof(float), l.n, fp);
src/parser.c:    //fread(l.weights, sizeof(float), num, fp); // as in connected layer
src/parser.c:        read_bytes = fread(l.scales, sizeof(float), l.n, fp);
src/parser.c:        read_bytes = fread(l.rolling_mean, sizeof(float), l.n, fp);
src/parser.c:        read_bytes = fread(l.rolling_variance, sizeof(float), l.n, fp);
src/parser.c:    read_bytes = fread(l.weights, sizeof(float), num, fp);
src/parser.c:    //    fread(l.m, sizeof(float), num, fp);
src/parser.c:    //    fread(l.v, sizeof(float), num, fp);
src/parser.c:    read_bytes = fread(l.weights, sizeof(float), num, fp);
src/parser.c:    read_bytes = fread(l.weights, sizeof(float), num, fp);
src/parser.c:    printf(", trained: %.0f K-images (%.0f Kilo-batches_64) \n", (float)(*net->seen / 1000), (float)(*net->seen / 64000));
src/parser.c:            fread(l.biases, sizeof(float), l.outputs, fp);
src/parser.c:            fread(l.weights, sizeof(float), size, fp);
src/normalization_layer.c:layer make_normalization_layer(int batch, int w, int h, int c, int size, float alpha, float beta, float kappa)
src/normalization_layer.c:    layer.output = (float*)xcalloc(h * w * c * batch, sizeof(float));
src/normalization_layer.c:    layer.delta = (float*)xcalloc(h * w * c * batch, sizeof(float));
src/normalization_layer.c:    layer.squared = (float*)xcalloc(h * w * c * batch, sizeof(float));
src/normalization_layer.c:    layer.norms = (float*)xcalloc(h * w * c * batch, sizeof(float));
src/normalization_layer.c:    layer->output = (float*)xrealloc(layer->output, h * w * c * batch * sizeof(float));
src/normalization_layer.c:    layer->delta = (float*)xrealloc(layer->delta, h * w * c * batch * sizeof(float));
src/normalization_layer.c:    layer->squared = (float*)xrealloc(layer->squared, h * w * c * batch * sizeof(float));
src/normalization_layer.c:    layer->norms = (float*)xrealloc(layer->norms, h * w * c * batch * sizeof(float));
src/normalization_layer.c:        float *squared = layer.squared + w*h*c*b;
src/normalization_layer.c:        float *norms   = layer.norms + w*h*c*b;
src/normalization_layer.c:        float *input   = state.input + w*h*c*b;
src/normalization_layer.c:        float *squared = layer.squared_gpu + w*h*c*b;
src/normalization_layer.c:        float *norms   = layer.norms_gpu + w*h*c*b;
src/normalization_layer.c:        float *input   = state.input + w*h*c*b;
src/connected_layer.c:    l.output = (float*)xcalloc(total_batch * outputs, sizeof(float));
src/connected_layer.c:    l.delta = (float*)xcalloc(total_batch * outputs, sizeof(float));
src/connected_layer.c:    l.weight_updates = (float*)xcalloc(inputs * outputs, sizeof(float));
src/connected_layer.c:    l.bias_updates = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:    l.weights = (float*)xcalloc(outputs * inputs, sizeof(float));
src/connected_layer.c:    l.biases = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:    //float scale = 1./sqrt(inputs);
src/connected_layer.c:    float scale = sqrt(2.f/inputs);
src/connected_layer.c:        l.scales = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:        l.scale_updates = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:        l.mean = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:        l.mean_delta = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:        l.variance = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:        l.variance_delta = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:        l.rolling_mean = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:        l.rolling_variance = (float*)xcalloc(outputs, sizeof(float));
src/connected_layer.c:        l.x = (float*)xcalloc(total_batch * outputs, sizeof(float));
src/connected_layer.c:        l.x_norm = (float*)xcalloc(total_batch * outputs, sizeof(float));
src/connected_layer.c:void update_connected_layer(connected_layer l, int batch, float learning_rate, float momentum, float decay)
src/connected_layer.c:    float *a = state.input;
src/connected_layer.c:    float *b = l.weights;
src/connected_layer.c:    float *c = l.output;
src^C
ultra96@EE382N4:~/darknet$ ls
3rdparty		darknet_video.py       predictions.jpg
backup			data		       README.md
build			gmon.out	       results
build.ps1		image_yolov3.sh        scripts
cfg			image_yolov4.sh        src
cmake			include		       trash
CMakeLists.txt		json_mjpeg_streams.sh  vcpkg.json
darknet			LICENSE		       video_yolov3.sh
DarknetConfig.cmake.in	Makefile	       video_yolov4.sh
darknet_images.py	net_cam_v3.sh	       yolov3-tiny.weights
darknet.perf		net_cam_v4.sh
darknet.py		obj
ultra96@EE382N4:~/darknet$ vim da
darknet            darknet.perf       darknet_video.py   
darknet_images.py  darknet.py         data/              
ultra96@EE382N4:~/darknet$ vim dak[Krknet.perf 
[1;24r[27m[24m[0m[H[J[24;1H"darknet.perf" 1179L, 75397C[2;1Hâ–½[6n[2;1H  [1;1H[1;1H[1mFlat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    [0m
[4m 90.99     10.10    10.10     3694     0.00     0.00  [24mgemm_nn
[4m  1.49     10.27     0.17  8845488     0.00     0.00  [24mrand_uniform
[4m  1.17     10.40     0.13        1     0.13     0.13  [24mfuse_conv_batchnorm
[4m  1.17     10.53     0.13       13     0.01     0.02  [24mmake_convolutional_layer
[4m  0.99     10.64     0.11     1102     0.00     0.00  [24mstbi__zbuild_huffman
[4m  0.99     10.75     0.11        9     0.01     0.01  [24mim2col_cpu_ext
[4m  0.90     10.85     0.10        6     0.02     0.02  [24mforward_maxpool_layer_avx
[4m  0.63     10.92     0.07      761     0.00     0.00  [24mload_image_stb
[4m  0.36     10.96     0.04        1     0.04     0.04  [24mresize_image
[4m  0.27     10.99     0.03       13     0.00     0.00  [24madd_bias
[4m  0.18     11.01     0.02       13     0.00     0.00  [24mactivate_array_cpu_custom
[4m  0.18     11.03     0.02        2     0.01     0.01  [24msave_image_options
[4m  0.09     11.04     0.01    14585     0.00     0.00  [24mstbi__decode_jpeg_header
[4m  0.09     11.05     0.01    13824     0.00     0.00  [24mstbi__idct_block
[4m  0.09     11.06     0.01      760     0.00     0.00  [24mstbi__parse_zlib
[4m  0.09     11.07     0.01      576     0.00     0.00  [24mstbi__YCbCr_to_RGB_row
[4m  0.09     11.08     0.01       12     0.00     0.00  [24mactivate_array
[4m  0.09     11.09     0.01        4     0.00     0.00  [24mdraw_weighted_label[24;63H1,1[11CTop[1;1H[24;53H/[1;1H[24;1H[K[24;1H/[24;1H[K[1;1H[24;63H1,1[11CTop[1;1H[24;53Hk[1;1H[24;53H [1;1H[24;53Hj[1;1H[24;53H [2;1H[24;63H2,0-1[2;1H[24;53H:[2;1H[24;53H[K[24;1H:q[24;1H[K[24;1Hultra96@EE382N4:~/darknet$ grep -re "[K[K[K[Kwre "gemm_nn"
Binary file darknet matches
src/gemm.c:void gemm_nn(int M, int N, int K, float ALPHA,
src/gemm.c:void gemm_nn(int M, int N, int K, float ALPHA,
src/gemm.c:                gemm_nn(1, N, K, ALPHA, A + t*lda, lda, B, ldb, C + t*ldc, ldc);
darknet.perf: 90.99     10.10    10.10     3694     0.00     0.00  gemm_nn
darknet.perf:[6]     91.0   10.10    0.00    3694         gemm_nn [6]
darknet.perf:               10.10    0.00    3694/3694        gemm_nn [6]
darknet.perf:   [6] gemm_nn                [62] overlap               [162] wait_until_press_key_cv
Binary file obj/gemm.o matches
ultra96@EE382N4:~/darknet$ cd src/
ultra96@EE382N4:~/darknet/src$ ls
activation_kernels.cu	    deconvolutional_layer.c   nightmare.c
activation_layer.c	    deconvolutional_layer.h   normalization_layer.c
activation_layer.h	    demo.c		      normalization_layer.h
activations.c		    demo.h		      option_list.c
activations.h		    detection_layer.c	      option_list.h
art.c			    detection_layer.h	      parser.c
avgpool_layer.c		    detector.c		      parser.h
avgpool_layer.h		    dice.c		      region_layer.c
avgpool_layer_kernels.cu    dropout_layer.c	      region_layer.h
batchnorm_layer.c	    dropout_layer.h	      reorg_layer.c
batchnorm_layer.h	    dropout_layer_kernels.cu  reorg_layer.h
blas.c			    gaussian_yolo_layer.c     reorg_old_layer.c
blas.h			    gaussian_yolo_layer.h     reorg_old_layer.h
blas_kernels.cu		    gemm.c		      representation_layer.c
box.c			    gemm.h		      representation_layer.h
box.h			    getopt.c		      rnn.c
captcha.c		    getopt.h		      rnn_layer.c
cifar.c			    gettimeofday.c	      rnn_layer.h
classifier.c		    gettimeofday.h	      rnn_vid.c
classifier.h		    go.c		      route_layer.c
coco.c			    gru_layer.c		      route_layer.h
col2im.c		    gru_layer.h		      sam_layer.c
col2im.h		    httplib.h		      sam_layer.h
col2im_kernels.cu	    http_stream.cpp	      scale_channels_layer.c
compare.c		    http_stream.h	      scale_channels_layer.h
connected_layer.c	    im2col.c		      shortcut_layer.c
connected_layer.h	    im2col.h		      shortcut_layer.h
conv_lstm_layer.c	    im2col_kernels.cu	      softmax_layer.c
conv_lstm_layer.h	    image.c		      softmax_layer.h
convolutional_kernels.cu    image.h		      super.c
convolutional_layer.c	    image_opencv.cpp	      swag.c
convolutional_layer.h	    image_opencv.h	      tag.c
cost_layer.c		    layer.c		      tree.c
cost_layer.h		    layer.h		      tree.h
cpu_gemm.c		    list.c		      upsample_layer.c
crnn_layer.c		    list.h		      upsample_layer.h
crnn_layer.h		    local_layer.c	      utils.c
crop_layer.c		    local_layer.h	      utils.h
crop_layer.h		    lstm_layer.c	      version.h
crop_layer_kernels.cu	    lstm_layer.h	      version.h.in
csharp			    matrix.c		      voxel.c
dark_cuda.c		    matrix.h		      writing.c
dark_cuda.h		    maxpool_layer.c	      yolo.c
darknet.c		    maxpool_layer.h	      yolo_console_dll.cpp
darkunistd.h		    maxpool_layer_kernels.cu  yolo_layer.c
data.c			    network.c		      yolo_layer.h
data.h			    network.h		      yolo_v2_class.cpp
deconvolutional_kernels.cu  network_kernels.cu
ultra96@EE382N4:~/darknet/src$ vim [K[K[K[Kvim gemm.c 
[1;24r[27m[24m[0m[H[J[24;1H"gemm.c" 2852L, 104621C[2;1Hâ–½[6n[2;1H  [1;1H[1;1H[4m#include "gemm.h"
#include "utils.h"
#include "im2col.h"
#include "dark_cuda.h"
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <float.h>
#include <string.h>
#include <stdint.h>
#if defined(_OPENMP)
#include <omp.h>
#endif

#if defined(_MSC_VER)
#if defined(_M_ARM) || defined(_M_ARM64)
static[24m [4minline[24m [4muint32_t[24m popcnt([4muint32_t[24m v) {
  v = v - ((v >> [4m1[24m) & [4m0x55555555[24m);
  v = (v & [4m0x33333333[24m) + ((v >> [4m2[24m) & [4m0x33333333[24m);
  [1mreturn[0m ((v + (v >> [4m4[24m) & [4m0xF0F0F0F[24m) * [4m0x1010101[24m) >> [4m24[24m;
}
[4m#define POPCNT(x) popcnt((x))
#define POPCNT64(x) (popcnt((unsigned)(x)) + popcnt((unsigned)((uint64_t)(x) >> [24m[23;1H[1m@@[0m[23;4H[K[23;3H[1m@[0m[24;63H1,1[11CTop[1;1H[24;53Hj[1;1H[24;53H [2;1H[24;63H2[2;1H[24;53Hj[2;1H[24;53H [3;1H[24;63H3[3;1H[24;53Hj[3;1H[24;53H [4;1H[24;63H4[4;1H[24;53Hj[4;1H[24;53H [5;1H[24;63H5[5;1H[24;53Hj[5;1H[24;53H [6;1H[24;63H6[6;1H[24;53Hj[6;1H[24;53H [7;1H[24;63H7[7;1H[24;53Hj[7;1H[24;53H [8;1H[24;63H8[8;1H[24;53Hj[8;1H[24;53H [9;1H[24;63H9[9;1H[24;53Hj[9;1H[24;53H [10;1H[24;63H10,1[10;1H[24;53Hj[10;1H[24;53H [11;1H[24;64H1[11;1H[24;53Hj[11;1H[24;53H [12;1H[24;64H2[12;1H[24;53Hj[12;1H[24;53H [13;1H[24;64H3[13;1H[24;53Hj[13;1H[24;53H [14;1H[24;64H4,0-1[14;1H[24;53Hj[14;1H[24;53H [15;1H[24;64H5,1  [15;1H[24;53Hj[15;1H[24;53H [16;1H[24;64H6[16;1H[24;53Hj[16;1H[24;53H [17;1H[24;64H7[17;1H[24;53Hj[17;1H[24;53H [18;1H[24;64H8[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[22;1H[4m#define POPCNT64(x) (popcnt((unsigned)(x)) + popcnt((unsigned)((uint64_t)(x) >>  [23;1H32)))[24m[24;1H[K[24;63H19,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4m#else[24m[24;63H[K[24;63H20,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4m#include <intrin.h>[24m[24;63H[K[24;63H21,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4m#ifdef _WIN64[24m[24;63H[K[24;63H22,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [17;1H[1;23r[1;1H[2M[1;24r[22;1H[4m#define POPCNT(x) __popcnt(x)
#define POPCNT64(x) __popcnt64(x)[24m[24;63H[K[24;63H23,1[11C0%[17;1H[24;53Hj[17;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4m#else[24m[24;63H[K[24;63H24,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;1H[4mstatic[24m [4minline[24m [4mint[24m popcnt_64([4muint64_t[24m val64) {[24;63H[K[24;63H25,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;3H[4mint[24m tmp_count = __popcnt(val64);[24;63H[K[24;63H26,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;3Htmp_count += __popcnt(val64 >> [4m32[24m);[24;63H[K[24;63H27,1[11C0%[18;1H[24;53Hj[18;1H[24;53H [18;1H[1;23r[23;1H
[1;24r[23;3H[1mreturn[0m tmp_count;[24;63H[K[24;63H28,1[11C0%[18;1H[24;53H:[18;1H[24;53H[K[24;1H:q[24;1H[K[24;1Hultra96@EE382N4:~/darknet/src$ 